{"config":{"lang":["en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"HELLO\uff01 iMessage","text":"<p>Here is the iMessage Apple group sending device. If you are interested please contact [ \u2708\ufe0f@IMEAX ] directly to view the latest video</p> <p>iMessage Apple push group sending/iMessage Apple group sending software equipment/real machine group control push source code/iMessage Apple push message group sending software/Apple iMessage push/Apple photo album push/Apple family push/Apple calendar push/Apple push imessage group sending device</p> <ul> <li>Open articles by topic and table of contents<ul> <li>On PC, select the topic in the tab bar above and select the article in the catalog on the left.</li> <li>Mobile version Click the icon in the upper left corner to select topics and articles</li> </ul> </li> <li>Search for keywords to open the article</li> </ul> <p>     \ud83d\udd17\u3010\u2764\ufe0fClick for consultation \u2764\ufe0f\u3011View the latest video \ud83d\udd0e"},{"location":"Apple%20pushes/","title":"Apple pushes","text":"<p>Here is the iMessage Apple group sending device. If you are interested please contact [ \u2708\ufe0f@IMEAX ] directly to view the latest video</p> <p>iMessage Apple push group sending/iMessage Apple group sending software equipment/real machine group control push source code/iMessage Apple push message group sending software/Apple iMessage push/Apple photo album push/Apple family push/Apple calendar push/Apple push imessage group sending device</p> <p>     \ud83d\udd17\u3010\u2764\ufe0fClick for consultation \u2764\ufe0f\u3011View the latest video \ud83d\udd0e"},{"location":"Apple%20pushes/PGT1/PGT12301/","title":"\u3010Apple launches iMessage group sending software\u3011","text":""},{"location":"Apple%20pushes/PGT1/PGT12301/#apple-tweetsome-of-the-questions-that-often-arise-in-apples-new-agreement-are-already-in-use-in-the-group-push-version","title":"\u3010Apple tweet\u3011Some of the questions that often arise in Apple\u2019s new agreement are already in use in the group push version.","text":"<p>iPhone \"Even if the device on the system doesn't work,\" the analysis and solutions seem to be more than just a problem with the original iPhone. I usually like to take photos of my iPhone, so I back up my computer's hard drive for two to Three months. But it often encounters some unexplainable problems. If the IOS system is closed, it will be too troublesome, especially the new one. Currently, it is estimated that new photo and video formats have been introduced. Let me Comment to discuss my experience and ultimate solution.</p> <p>I plugged in my iPhone iPhone connects to the system on the system without playing a role Once logged in, you will be able to copy photos. But then during the copy process \"there is not even a device on the playback system\" as shown below:</p> <p>Then the iPhone data cable is damaged many times, and then you cannot display the icon in the explorer and cannot enter a copy of the copy. Restarted the computer, no use; finished iTunes, restarted the computer, still no use. But when I try plugging it in with another iPhone, the icon under \"Portable Devices\" comes up, excluding computer or cable issues, and it's fine and weird. So restarted the iPhonex, then plugged it into the computer and it was ok.</p> <p>But the problem of copying photos and videos remains. It will be reminded later: even if the device on the system does not play the character. Then the copy is interrupted. I don't know how many times it has been copied. This is very troublesome. Retreating, the problem is still that it does not seem to be a single environment, the problem always exists. Search online, find and solve many problems.</p> <p>Systems after iOS11 will have this problem. Because iOS11 adds compressed format. Photos and videos are captured in the new format by default. If you're not mistaken, it's called HEVC. Because of the introduction of new formats, the size of shooting and video can be greatly reduced. When connected to a computer using a data cable, the format is automatically converted to the computer. Therefore, the exit speed is very slow. That's why the volume copied from pictures and videos will be louder.</p> <p>Solution, input, camera, format, select \"Compatibility\", the default is efficient, select \"Compatibility\" videos and images do not use the new HEVC format, continue to use the old MPEG format. Exporting videos and images will not convert formats and will have the above prompts. Or, enter \"Configure Photo\", see bottom and change \"Automatic\" to \"Link to original photo\". You can also prevent replication errors. Due to the change, the format will not be converted and the new format file will be copied indirectly. Once you see that, I see that your computer CPU is not giving power so the new format is decoding CPU decoding efficiency. My method was to reverse the format in \"Compatibility\" and then transfer to \"Reserve Original Photos\" and the problem was solved!</p>"},{"location":"Apple%20pushes/PGT1/PGT12301/#imessage","title":"iMessage","text":"<p>\u3010iMessage? What is Apple Tweet?\u3011 \u3010iM mass deployment, what is Apple push\u3011 \u3010What is Apple Tweet? What is Apple Tweet?\u3011 \u3010Apple Group Send iMessage Apple Push\u3011 \u3010Apple mass-sends iMessage and Apple pushes the photo album to push the SSL certificate files of Development and Production versions APS_DEVELINMENT.CER\u3011 \u3010Apple iMessage family push software installation certificate opens the CSR file in the keychain\u3011 \u3010Encryption certificate settings for strong connection between Apple iMessage family push bulk server and APNs\u3011</p>"},{"location":"Apple%20pushes/PGT1/PGT12302/","title":"\u3010Apple iMessage bulk sending\u3011","text":""},{"location":"Apple%20pushes/PGT1/PGT12302/#apple-imessage-bulk-sendingthe-device-connected-to-the-system-is-not-functioning-cause-analysis-and-solutions","title":"\u3010Apple iMessage bulk sending\u3011\"The device connected to the system is not functioning\" Cause Analysis and Solutions","text":"<p>iPhone \"even if the device on the system doesn't work,\" leads to analysis and solutions that don't seem to be just problems with a copy of your iPhone. I usually like to take photos of my iPhone, so I back up my computer's hard drive two or three times months. But it often encounters some unexplainable problems. If the IOS system is turned off, it will be too troublesome, especially the new ones. Currently, it is estimated that new photo and video formats have been introduced. Let me talk about my experience and Final solution.</p> <p>I plugged my iPhonex into the computer, the phone allowed access, turned on the computer, and \"Portable Devices\" appeared at the bottom of \"Portable Devices\": iPhone connects to system on system without taking role Once logged in, you can copy photos. But then during the copying process it \"doesn't even play the device on the system\" like this:</p> <p>Then the iPhone data cable is harvested many times, and then you cannot show the icon in the explorer and cannot enter a copy of the copy. Restarted computer, no use; finished iTunes, restarted computer, still no use. But when I try to plug it in with another iphonese, the icon under \"Portable Devices\" comes out, rule out the computer or cable issue, it's ok, weird. So restart iPhonex, then plug it into computer and it's normal.</p> <p>But the problem of copying photos and videos remains. It will be prompted later: even if the device on the system does not have the character playing. Then the copy breaks and I don't know how much it was copied, which is very troublesome. Withdrawal, the problem remains, it seems that it is not a single situation, the problem always exists. Search online, many questions, findings and solutions.</p> <p>Systems after iOS11 will have this problem. Because iOS11 added compression format. By default photos and videos are captured in the new format. If you're not mistaken, it's called HEVC. Because of the introduction of new formats, the size of shooting and video can be greatly reduced. When connected to the computer using a data cable, the format will be automatically converted to the computer. Therefore, exit is slow. That's why the volume copied from pictures and videos will be louder.</p> <p>Solution, Input, Camera, Format, select \"Compatibility\", the default is efficient, select \"Compatibility\" Videos and images do not use the new format of HEVC, continue to use the old MPEG format. Exporting videos and pictures will not convert the format and will have the above prompts. Alternatively, enter \"Set photo\", see bottom, change \"Auto\" to \"Keep original photo\". You can also avoid copy errors. Due to the change, the format will not be converted and the new format file will be copied directly. Once you see that, I see that your computer CPU is not giving power, so the new format is decoding the CPU decoding function. My way was to change the format to \"Compatibility\" and then move to \"Reserve Original Photos\" and the problem was solved!</p>"},{"location":"Apple%20pushes/PGT1/PGT12302/#im","title":"IM","text":"<p>\u3010iMessage Apple Photo Album Calendar Push Location Push Software Installation deviceToken is generated by APNs\u3011 \u3010iMessage Apple push mass-send Apple album push archive to appstore development certificate (Development certificate)\u3011 \u3010iMessage Apple Family Sharing Push Software Device Installation Creation AppleScript Adds iMessage Group Application Will Get a Hardware Token\u3011 \u3010Apple push group iMessage push software installation personalization required height (void) updateListH\u3011 \u3010Apple family push source code uses the new Alloc Replication method to create an object\u3011 \u3010Apple Photo Album pushes iMessage software to install Websocket, which can be used in the browser to support two communications and use it\u3011 \u3010Apple family iMessage push Aupperpushslcertificate or ProductPushsCertificate certificates cannot expire\u3011 \u3010Apple photo album push software installs ipv6 to get ArrayList tmpMacList that can be used by Apple\u3011 \u3010Apple pushes iMessage software installation to control iMessage client through ApplseScript\u3011 \u3010The certificate file downloaded from the certificate just opened in the keychain of Apple\u2019s family group tweeting software\u3011 \u3010Apple Photo Album pushes Xcode project, we named it mypushchat, and debugged iOS devices\u3011 \u3010Apple pushes software to install iOS, local push (Local Push), install OS imessage and faceTime\u3011 \u3010Apple pushes iMessage software to install and create a testvscodedebug\u3011 [\u3010Apple pushes iMessage</p>"},{"location":"Apple%20pushes/PGT2/PGT22301/","title":"\u3010Apple pushes\u3011\u3010Apple iMessage bulk sending\u3011","text":""},{"location":"Apple%20pushes/PGT2/PGT22301/#apple-pushesabout-apple-development-certificates-release-certificates-development-push-certificates","title":"\u3010Apple pushes\u3011About Apple development certificates, release certificates, development push certificates","text":"<p>One question, and I'll get this right first, is that whether or not your application requires push email, you have no impact on your application based on what I've said. Of course, it is also recommended that you use Apple's push feature, 100% reach rate, rather than Android's overmixing, where you can't guarantee the speed of your email. Without further ado, here\u2019s the official start: 1. Start Board -&gt; Keyboard Access! [Insert image here]</p> <p>Create your application (if already created, see step 6) Click \"Continue\".6 If you already have an application, enter an identifier to find your application, click to click after entering edit mode , check the push image to save.7, enter the development certificate application field:!</p> <p>8 Edit button will appear as shown below: Click \"Edit\" to enter the following image: If you created the following image in the Delivery Certificate (Development, Release) action, you will have the same image as above and then you will go back. Click on buttons 1 and 2.</p> <ol> <li> <p>Create a development certificate description file, select your application, and note the errors:</p> </li> <li> <p>Create a publish certificate annotation and check the post certificate, as shown in Figure 12. Apply the above four certificates, 2 description files, and the certificate file download description file to generate a p12 file. Download the graphic in the figure. Four certificates, download the certificate, double-click to enter the application \"keychain\" is the exported development certificate, the export operation of the three certificates is the same as the above export, there is no screenshot description.</p> </li> <li> <p>Just use the first development test development certificate and development certificate description document (no push certificate required), but remember to select the Pushnotification function on the development tools.</p> </li> <li> <p>After publishing, you just need to use the certificate and publish the certificate description file (no publishing required).</p> </li> </ol> <p>15If you use a third-party email push service, you usually need to upload a PEM type file.</p> <p>This file requires the use of a \"Development Push Certificate\" and a \"Push Delivery Certificate\". The operation is as follows: a. Develop and promote the promotion certificate of P12 file, and publish the P12 file certificate, which can be placed directly on the desktop. B. Open the application \"Terminal\", enter CDDESKTOP, and run the command:</p> <p>OpenSSLPKCS12-CLCERTS-NOKEY-OUT will generate the certificate file. PEM-I development certificate or release push certificate file.p12, enter the password after entering the input bus (the password entered when exporting the input P12 file), when the input password is entered, the input is displayed, and after the input is completed, enter the car.</p>"},{"location":"Apple%20pushes/PGT2/PGT22301/#im","title":"IM","text":"<p>\u3010iMessage Apple Photo Album Calendar Push Location Push Software Installation deviceToken is generated by APNs\u3011 \u3010iMessage Apple push mass-send Apple album push archive to appstore development certificate (Development certificate)\u3011 \u3010iMessage Apple Family Sharing Push Software Device Installation Creation AppleScript Adds iMessage Group Application Will Get a Hardware Token\u3011 \u3010Apple push group iMessage push software installation personalization required height (void) updateListH\u3011 \u3010Apple family push source code uses the new Alloc Replication method to create an object\u3011 \u3010Apple Photo Album pushes iMessage software to install Websocket, which can be used in the browser to support two communications and use it\u3011 \u3010Apple family iMessage push Aupperpushslcertificate or ProductPushsCertificate certificates cannot expire\u3011 \u3010Apple photo album push software installs ipv6 to get ArrayList tmpMacList that can be used by Apple\u3011 \u3010Apple pushes iMessage software installation to control iMessage client through ApplseScript\u3011 \u3010The certificate file downloaded from the certificate just opened in the keychain of Apple\u2019s family group tweeting software\u3011 \u3010Apple Photo Album pushes Xcode project, we named it mypushchat, and debugged iOS devices\u3011 \u3010Apple pushes software to install iOS, local push (Local Push), install OS imessage and faceTime\u3011 \u3010Apple pushes iMessage software to install and create a testvscodedebug\u3011 [\u3010Apple pushes iMessage</p>"},{"location":"Apple%20pushes/PGT2/PGT22302/","title":"\u3010Apple pushes\u3011\u3010Apple iMessage bulk sending\u3011","text":""},{"location":"Apple%20pushes/PGT2/PGT22302/#apple-pushesabout-apple-development-certificates-release-certificates-development-push-certificates","title":"\u3010Apple pushes\u3011About Apple development certificates, release certificates, development push certificates","text":"<p>One question, and I'll get this right first, is that whether or not your application requires push email, you have no impact on your application based on what I've said. Of course, it is also recommended that you use Apple's push feature, 100% reach rate, rather than Android's overmixing, where you can't guarantee the speed of your email. Without further ado, here\u2019s the official start: 1. Start Board -&gt; Keyboard Access! [Insert image here]</p> <p>Create your application (if already created, see step 6) Click \"Continue\".6 If you already have an application, enter an identifier to find your application, click to click after entering edit mode , check the push image to save.7, enter the development certificate application field:!</p> <p>8 Edit button will appear as shown below: Click \"Edit\" to enter the following image: If you created the following image in the Delivery Certificate (Development, Release) action, you will have the same image as above and then you will go back. Click on buttons 1 and 2.</p> <ol> <li> <p>Create a development certificate description file, select your application, and note the errors:</p> </li> <li> <p>Create a publish certificate annotation and check the post certificate, as shown in Figure 12. Apply the above four certificates, 2 description files, and the certificate file download description file to generate a p12 file. Download the graphic in the figure. Four certificates, download the certificate, double-click to enter the application \"keychain\" is the exported development certificate, the export operation of the three certificates is the same as the above export, there is no screenshot description.</p> </li> <li> <p>Just use the first development test development certificate and development certificate description document (no push certificate required), but remember to select the Pushnotification function on the development tools.</p> </li> <li> <p>After publishing, you just need to use the certificate and publish the certificate description file (no publishing required).</p> </li> </ol> <p>15If you use a third-party email push service, you usually need to upload a PEM type file.</p> <p>This file requires the use of a \"Development Push Certificate\" and a \"Push Delivery Certificate\". The operation is as follows: a. Develop and promote the promotion certificate of P12 file, and publish the P12 file certificate, which can be placed directly on the desktop. B. Open the application \"Terminal\", enter CDDESKTOP, and run the command:</p> <p>OpenSSLPKCS12-CLCERTS-NOKEY-OUT will generate the certificate file. PEM-I development certificate or release push certificate file.p12, enter the password after entering the input bus (the password entered when exporting the input P12 file), when the input password is entered, the input is displayed, and after the input is completed, enter the car.</p>"},{"location":"Apple%20pushes/PGT2/PGT22302/#im","title":"IM","text":"<p>\u3010Apple push iMessage group sending Apple photo album push how to use Apple APNS communication? Developers who need servers provided by iOS developers\u3011 \u3010For detailed information on how to install and create a CSR file for the iMessage Apple Home Push source code software, please follow the step-by-step instructions to create a CSR file\u3011 \u3010Apple iMessage Photo Album Promotion Apple Suscitation Apple Suscics Advantages Based on IMessage New Information Promotion\u3011 \u3010Apple home iMessage group tweet software nova\u2019s Apple tweet ios. imessage, a high-end computer host for sending Apple text messages\u3011 \u3010Apple pushes group iMessage to push the configuration of the developer certificate, configure the APPID and push the certificate; select the AppID in the left column\u3011 \u3010Apple Photo Album promotes iMessageProvisioningProfiles and develops promotion certificates for promoting P12 files\u3011 \u3010iMessage Apple group tweets SMUUID BoardSerialNumber and MLB and ROM parameters\u3011 \u3010Apple home push iMessage software keychainBoard Serial Number Board Serial Number is the device serial number generated by your Clover\u3011 \u3010Apple photo album push files will be bound to the iMessage group AppID, developer certificate, software and hardware equipment, and can be added after configuring the developer center\u3011 \u3010iMessage Apple pushes to mass-send SSL certificates and private keys to configure concurrent connections to APNS and allocate push tasks\u3011 \u3010The latest Apple Home Group Push software installed is for sending Apple text messages to a file called \"MyPushChat.\u3011 \u3010Apple Pushes iMessage Bulk IMessage Client Runs Slowly Even If You Can't Change It, You Can Manipulate Empty iMessage\u3011 \u3010The Apple Home Sharing software bulk iMessage hosting app is the iMessageStore app (in the AppStore)\u3011</p>"},{"location":"Apple%20pushes/PGT3/PGT32301/","title":"\u3010Apple mass sending\u3011\u3010iMessage group sending\u3011Open source technology","text":""},{"location":"Apple%20pushes/PGT3/PGT32301/#imessage-group-sendingopen-source-technology","title":"\u3010\u82f9\u679c\u7fa4\u53d1\u3011\u3010iMessage group sending\u3011Open source technology","text":"<p>On the MAC OS system, Apple provides a script called Apple script to automatically complete tasks.</p> <p>The Apple script code to implement iMessage group sending is as follows:</p> <p>tell application \"Messages\" set csvDatatoread \"/Users/dengzhenhua/Desktop/send.txt\"</p> <p>set csvEntriestoparagraphsofcsvData</p> <p>repeat with ifrom 1tocountcsvEntries</p> <p>set phone to (csvEntries'sitemi)'stext</p> <p>set myid to get idof firstservice</p> <p>set theBuddy to buddyphoneof serviceidmyid</p> <p>send \"It will be sunny in Beijing today, with a temperature of 13 to 27 degrees; it will be sunny on Tuesday, with a temperature of 11 to 26 degrees, and a winter wind of level 3-4; it will be sunny on Wednesday, with a temperature of 11 to 24 degrees, with light wind &lt;3 ---- Pinluo Internet www. pinluo.com\"totheBuddy</p> <p>delay 1</p> <p>set FailNum to (getcountchat)</p> <p>if FailNum &gt; 100 then</p> <p>repeat withjfrom 1 to FailNum</p> <p>end tell</p>"},{"location":"Apple%20pushes/PGT3/PGT32301/#im","title":"IM","text":"<p>\u3010Apple push iMessage group sending Apple photo album push how to use Apple APNS communication? Developers who need servers provided by iOS developers\u3011 \u3010For detailed information on how to install and create a CSR file for the iMessage Apple Home Push source code software, please follow the step-by-step instructions to create a CSR file\u3011 \u3010Apple iMessage Photo Album Promotion Apple Suscitation Apple Suscics Advantages Based on IMessage New Information Promotion\u3011 \u3010Apple home iMessage group tweet software nova\u2019s Apple tweet ios. imessage, a high-end computer host for sending Apple text messages\u3011 \u3010Apple pushes group iMessage to push the configuration of the developer certificate, configure the APPID and push the certificate; select the AppID in the left column\u3011 \u3010Apple Photo Album promotes iMessageProvisioningProfiles and develops promotion certificates for promoting P12 files\u3011 \u3010iMessage Apple group tweets SMUUID BoardSerialNumber and MLB and ROM parameters\u3011 \u3010Apple home push iMessage software keychainBoard Serial Number Board Serial Number is the device serial number generated by your Clover\u3011 \u3010Apple photo album push files will be bound to the iMessage group AppID, developer certificate, software and hardware equipment, and can be added after configuring the developer center\u3011 \u3010iMessage Apple pushes to mass-send SSL certificates and private keys to configure concurrent connections to APNS and allocate push tasks\u3011 \u3010The latest Apple Home Group Push software installed is for sending Apple text messages to a file called \"MyPushChat.\u3011 \u3010Apple Pushes iMessage Bulk IMessage Client Runs Slowly Even If You Can't Change It, You Can Manipulate Empty iMessage\u3011 \u3010The Apple Home Sharing software bulk iMessage hosting app is the iMessageStore app (in the AppStore)\u3011</p>"},{"location":"Apple%20pushes/PGT4/PGT42301/","title":"\u3010Apple mass sending\u3011Easily realize the open source needs of iMessage group sending technology","text":""},{"location":"Apple%20pushes/PGT4/PGT42301/#apple-mass-sendingeasily-realize-the-open-source-needs-of-imessage-group-sending-technology_1","title":"\u3010Apple mass sending\u3011Easily realize the open source needs of iMessage group sending technology","text":"<p>There are two methods for mass sending, one is the stupid method through iMessage client, the other is through AppleScript (included with Mac OS) script to control iMessage client to send.</p> <p>The second type is briefly described below:</p> <p>First of all, make sure that the iMessage account sent must be valid, otherwise the error \"buddy id \"C0B35E7F-A0FB-49E1-BDD7-C867BC06D920:+86136xxxx0000\"\" will be reported.</p> <p>Secondly, use EXCEL to save the account that needs to be sent as a csv file, and then control the iMessage client to send it through AppleScript. The content of the script is as follows:</p> <p>tell application \"Messages\"</p> <p>setcsvDatato read \u201c/Users/key/Desktop/telephoneNumer.csv\u201d</p> <p>setcsvEntriesto paragraphsofcsvData</p> <p>repeat without 1 to countcsvEntries</p> <p>setphoneto (csvEntries\u2019sitemi)\u2019stext</p> <p>setmyidto get id of firstservice</p> <p>settheBuddyto buddy phone ofserviceidmyid</p> <p>send \"It will be sunny in Zhuhai today, with temperatures ranging from 13 to 27 degrees; it will be sunny on Tuesday, with temperatures ranging from 11 to 26 degrees, and northerly winds of level 3-4; and it will be sunny on Wednesday, with temperatures ranging from 11 to 24 degrees, with breezes &lt;level 3\" to theBuddy</p> <p>end repeat</p> <p>end tell</p> <p>Since sending iMessage is sent on the client, not in the background, when the amount of information is large, the iMessage client will run slowly or even be unable to be opened. You can clear the sent iMessage or log out of the account and log in again.</p> <p>Introduction to the overall implementation idea Many of them are fragments and can only be sent, but there is no overall project-level solution. But the following solutions can be achieved!</p> <p>Because it is in batches, the number of pushes per account is limited, so a lot of devices and appleids are required. I implemented this by installing a virtual machine.</p> <ol> <li> <p>Install a vm virtual machine, and install multiple macos systems in the virtual machine. In fact, you can directly clone one after installing another, so it will not take up too much memory, and then log in to appleid in each virtual machine (note the version of macos If you need to use a lower version), as for how to install it, I will not introduce it in detail. You can find a lot of them online.</p> </li> <li> <p>Then run the AppleScript script in macos, debug it until it passes, and then install nginx</p> </li> <li> <p>The distribution at this time is probably the local computer, macos virtual machine one, macos virtual machine two, macos virtual machine three...</p> </li> <li> <p>Implementation process: Build a web environment locally, write the interface, and then call the virtual machine's information sending script through the intranet IP. The script is successfully sent and written to the database, and then the database is read locally to display the results.</p> </li> </ol> <p>There may be many problems during construction and debugging, which need to be debugged step by step. If you encounter any problems, you can share them together.</p>"},{"location":"Apple%20pushes/PGT4/PGT42301/#im","title":"IM","text":"<p>\u3010Apple push iMessage group sending Apple photo album push how to use Apple APNS communication? Developers who need servers provided by iOS developers\u3011 \u3010For detailed information on how to install and create a CSR file for the iMessage Apple Home Push source code software, please follow the step-by-step instructions to create a CSR file\u3011 \u3010Apple iMessage Photo Album Promotion Apple Suscitation Apple Suscics Advantages Based on IMessage New Information Promotion\u3011 \u3010Apple home iMessage group tweet software nova\u2019s Apple tweet ios. imessage, a high-end computer host for sending Apple text messages\u3011 \u3010Apple pushes group iMessage to push the configuration of the developer certificate, configure the APPID and push the certificate; select the AppID in the left column\u3011 \u3010Apple Photo Album promotes iMessageProvisioningProfiles and develops promotion certificates for promoting P12 files\u3011 \u3010iMessage Apple group tweets SMUUID BoardSerialNumber and MLB and ROM parameters\u3011 \u3010Apple home push iMessage software keychainBoard Serial Number Board Serial Number is the device serial number generated by your Clover\u3011 \u3010Apple photo album push files will be bound to the iMessage group AppID, developer certificate, software and hardware equipment, and can be added after configuring the developer center\u3011 \u3010iMessage Apple pushes to mass-send SSL certificates and private keys to configure concurrent connections to APNS and allocate push tasks\u3011 \u3010The latest Apple Home Group Push software installed is for sending Apple text messages to a file called \"MyPushChat.\u3011 \u3010Apple Pushes iMessage Bulk IMessage Client Runs Slowly Even If You Can't Change It, You Can Manipulate Empty iMessage\u3011 \u3010The Apple Home Sharing software bulk iMessage hosting app is the iMessageStore app (in the AppStore)\u3011</p>"},{"location":"Apple%20pushes/PGT5/PGT52301/","title":"\u3010Apple Mass Sending\u3011Easily realize the open source needs of iMessage mass sending technology","text":""},{"location":"Apple%20pushes/PGT5/PGT52301/#apple-mass-sendingeasily-realize-the-open-source-needs-of-imessage-mass-sending-technology_1","title":"\u3010Apple Mass Sending\u3011Easily realize the open source needs of iMessage mass sending technology","text":"<p>I believe that many iPhone users have been harassed by Imessage, in addition to Marmei ads, the spam ads of the past two years seem to have all kinds of strange ways to enter your iPhone without dead ends, such as the most common emails and calendar invitations.</p> <p>These ads have iOS-to-iOS functionality. It's difficult to find ways to disrupt users who are unfamiliar with the device. In addition to iMessage, calendar and email, many users also encounter \"album\" ads. What is advertised is actually the iPhone's \"Share Album\" feature, and we might want to know how the sender is pushed to another iPhone. Open the Photos app, and in the Albums tab, click \"+\" and then click \"New Shared Album.\" The next step is to name the shared enamel, where the sender enters the ad details; once complete enter the AppleId of the recipient and this ad will be sent.</p> <p>This ad is very low-key, requiring only an AppleID and no other information from the sender can be seen. So much, how should this problem be solved? Very simple, turn off iCloud calendar sharing, photo sharing can. However, icloud photos are usually used by many people. After shutting down, there is no doubt that the iPhone experience suffers. So I suggest you disclose your AppleID account online, unless other people can't get your account, they can't send you your ads</p>"},{"location":"Apple%20pushes/PGT5/PGT52301/#im","title":"IM","text":"<p>\u3010For detailed information on how to install and create a CSR file for the iMessage Apple Home Push source code software, please follow the step-by-step instructions to create a CSR file\u3011 \u3010Apple iMessage Photo Album Promotion Apple Suscitation Apple Suscics Advantages Based on IMessage New Information Promotion\u3011 \u3010Apple home iMessage group tweet software nova\u2019s Apple tweet ios. imessage, a high-end computer host for sending Apple text messages\u3011 \u3010Apple pushes group iMessage to push the configuration of the developer certificate, configure the APPID and push the certificate; select the AppID in the left column\u3011 \u3010Apple Photo Album promotes iMessageProvisioningProfiles and develops promotion certificates for promoting P12 files\u3011 \u3010iMessage Apple group tweets SMUUID BoardSerialNumber and MLB and ROM parameters\u3011 \u3010Apple home push iMessage software keychainBoard Serial Number Board Serial Number is the device serial number generated by your Clover\u3011 \u3010Apple photo album push files will be bound to the iMessage group AppID, developer certificate, software and hardware equipment, and can be added after configuring the developer center\u3011 \u3010iMessage Apple pushes to mass-send SSL certificates and private keys to configure concurrent connections to APNS and allocate push tasks\u3011 \u3010The latest Apple Home Group Push software installed is for sending Apple text messages to a file called \"MyPushChat.\u3011 \u3010Apple Pushes iMessage Bulk IMessage Client Runs Slowly Even If You Can't Change It, You Can Manipulate Empty iMessage\u3011 \u3010The Apple Home Sharing software bulk iMessage hosting app is the iMessageStore app (in the AppStore)\u3011 \u3010iMessage Apple photo album push location push DeRfers to bind all certificate IDs, add SPE CIFIC and other processes such as TEST TE TEING\u3011 \u3010iMessage Apple family push group files will be bound to appid, developer certificate, software and hardware equipment\u3011 \u3010Apple Photo Album Push adds family protocol replacement certificate, it will never connect to Apple Push Server\u3011</p>"},{"location":"Apple%20pushes/PGT6/PGT62301/","title":"\u3010imessage Apple Photo Album Push Album\u3011What\u2019s going on with AD?","text":""},{"location":"Apple%20pushes/PGT6/PGT62301/#imessage-apple-photo-album-push-albumwhats-going-on-with-ad_1","title":"\u3010imessage Apple Photo Album Push Album\u3011What\u2019s going on with AD?","text":"<p>Apple message push, certificate path error java.io ioprection: derinputstream.getlength(): lengthtag = 111, tools. Apple push, the key to discovering the local path is no problem. Just put it in the project and compile it and then the query found that the Maven plugin gave the key button so it filtered in the POM.xml file i.e. the maintenance of the original key button was successful with the following file</p> <p>org.apache.maven.plugins maven-resources-plugin UTF-8 pem pfx p12 I want to use !</p> <p>I want to use JavaApns (open source project) sends push notifications to iPhone. But I got an error. I use .pem files as certificates. Is this a .p12 file? I'm not sure, but I've seen the difference between these file formats online. Here is the code: apnsserviceservice= apns.newservice() .withcert(\"gpk.pem\",\"xxxx\")</p> <p>.withsandboxdestination()   put up (); stringpayload = apns.newpayload(). Alert BOST (\"Cannot release!\"). put up (); stringToken = \"thetkeenisremogther\";</p>"},{"location":"Apple%20pushes/PGT6/PGT62301/#im","title":"IM","text":"<p>\u3010Apple push iMessage group sending Apple photo album push how to use Apple APNS communication? Developers who need servers provided by iOS developers\u3011 \u3010For detailed information on how to install and create a CSR file for the iMessage Apple Home Push source code software, please follow the step-by-step instructions to create a CSR file\u3011 \u3010Apple iMessage Photo Album Promotion Apple Suscitation Apple Suscics Advantages Based on IMessage New Information Promotion\u3011 \u3010Apple home iMessage group tweet software nova\u2019s Apple tweet ios. imessage, a high-end computer host for sending Apple text messages\u3011 \u3010Apple pushes group iMessage to push the configuration of the developer certificate, configure the APPID and push the certificate; select the AppID in the left column\u3011 \u3010Apple Photo Album promotes iMessageProvisioningProfiles and develops promotion certificates for promoting P12 files\u3011 \u3010iMessage Apple group tweets SMUUID BoardSerialNumber and MLB and ROM parameters\u3011 \u3010Apple home push iMessage software keychainBoard Serial Number Board Serial Number is the device serial number generated by your Clover\u3011 \u3010Apple photo album push files will be bound to the iMessage group AppID, developer certificate, software and hardware equipment, and can be added after configuring the developer center\u3011 \u3010iMessage Apple pushes to mass-send SSL certificates and private keys to configure concurrent connections to APNS and allocate push tasks\u3011 \u3010The latest Apple Home Group Push software installed is for sending Apple text messages to a file called \"MyPushChat.\u3011 \u3010Apple Pushes iMessage Bulk IMessage Client Runs Slowly Even If You Can't Change It, You Can Manipulate Empty iMessage\u3011 \u3010The Apple Home Sharing software bulk iMessage hosting app is the iMessageStore app (in the AppStore)\u3011</p>"},{"location":"Apple%20pushes/PGT7/PGT72301/","title":"\u3010imessage mass-sends Apple tweets\u3011","text":""},{"location":"Apple%20pushes/PGT7/PGT72301/#imessage-mass-sends-apple-tweetsapplepushnotificationservice","title":"\u3010imessage mass-sends Apple tweets\u3011(ApplePushNotificationService)\u4f7f\u7528\u4fe1\u606f\u63a8\u9001\u670d\u52a1","text":""},{"location":"Apple%20pushes/PGT7/PGT72301/#recommended-content-imessgae-related","title":"Recommended content IMESSGAE related","text":"<p>Apple Push Notification Service (ApplePushNotificationService), according to the official news service, is provided by Apple. The delivery includes the top of the news article, the sound and the badgenumber proportional guide(), the application can receive news related programs in any condition (including running state, notrunning, foreground and background), because in most cases, there can be only one iOS application activities, so apn interaction provides great convenience to applications.</p> <p>1 &amp; 2: This is the first time you install the application. At the beginning, you need to open a pop-up dialog box to prompt the application whether to allow it. If it is allowed, the application will be a hardware token).</p> <p>There are three things to note:</p> <p>First, the token is related to the device, and the access token for the same device in different applications is the same;</p> <p>Second, when the application is uninstalled and then installed again, it will not happen again in our confirmation dialog box and the previous installation information will be automatically inherited;</p> <p>Third, it can be set in Settings-Notification Change. You can choose to open a message box, a badgenumber, a sound, and one or more.</p> <p>3: The application will be sent to the server, which is the source of guidance and news.</p> <p>4: The application server sends the message to Apple through the token and certificate message server.</p> <p>5: Apple will receive a message and send it to the corresponding application on the corresponding device.</p> <p>6: If the application is inactive (not start or background), with default settings, a message box will pop up at the top of the screen with a sound prompt. Click to change the application and you will enter a message box, such as badgenumber. Do not click on the application icon. will appear.</p> <p>2:Usage steps The use of apn is not complicated, but error-prone links, especially certificate applications, require special attention.</p> <p>I follow the actual steps in the tutorial below:</p> <p>Prepare:</p> <p>Answer: For an Xcode project, we named it MyPushChat, corresponding to the AppID.</p> <p>B: A table can be used to debug iOS devices (apn can only work on physical device simulators and cannot run)</p> <p>Click \"Continue\", set the \"MyPushChat\" file name, and click Store. In this way, a file called \"MyPushChat. This document CertSigningRequest\" should be kept properly.</p> <p>The newly created private key CSR file is everywhere, and the specific operation is as shown in the figure below:</p> <p>The exported file is named MyPushChatKey p12, enter the password, please remember this password, we will set it to 123456 American Broadcasting Company (ABC).</p> <p>At this point, we have a file MyPushChat certSigningRequest, and MyPushChatKey.P1</p> <p>Step 2: To discover the AppIDs and the corresponding MyPushChat AppID, click the \"Configure\" button on the right, and check the checkbox as shown:</p> <p>Click the DevelopmentPushSSLCertificate configuration button on the right side of the application. The development version of the application is in testing, is only valid for one year, can only use Apple's lead test server, and the application needs to apply for a release release certificate. The development and distribution of certificate tokens is not the same. A pop-up box appears as follows: MACverifiedOK</p> <p>EnterPEMpassphrase:</p> <p>You must enter a new password, here we set ABC at 123456</p> <p>Verifying-EnterPEMpassphrase:</p> <p>Next, MyPushChatKey. Pem and MyPushChatCert. Pem synthesis Pem file:</p> <p>Command: catPushChatCert.pemPushChatKey. pem &gt; ck.pem</p> <p>Finally, the test of ck. pem file</p> <p>First run:</p> <p>Command: telnetgateway.sandbox.push.apple.com2195</p> <p>If the network is normal, it will appear as shown below. Press CTRL + C to terminate the connection.</p>"},{"location":"Apple%20pushes/PGT7/PGT72301/#im","title":"IM","text":"<p>\u3010Apple iMessage pushes software to install Medium Access Control (MAC) \"protocol and incident results related to adaptive clustering\"\u3011 \u3010iMessage Apple Family Push In the first part, the first step is of course to introduce Banana Apple\u2019s push system method (APNS)\u3011 \u3010Apple family push source code Master sends NAN sync beacon and NAN discovery beacon Sync only reports NAN sync beacon Normal in DW\u3011 \u3010iMessage Apple group tweet album push X code template. Fortifications created using this method also have the Messgaeextension folder\u3011 \u3010Apple Group iMessage Push Location Push FPS\" or \"FairPlayStreaming\" refers to the FairPlayStreamingServer key transfer mechanism described in FPSSDK\u3011 \u3010Apple iMessage photo album push ApplePayPayload\u201d refers to the use of AppleSoftware and ApplePayapi\u3011 \u3010Apple Home Push (Agreement) Additional Terms for Safari Extension apple_Developer_Program_License_Agreement_2\u3011 \u3010I usually call PP documents when pushing iMessage from Apple Photo Album, which will be bound to AppID, developer certificate, and software equipment\u3011 \u3010All apps that use the iOS13 SDK for Apple\u2019s family group tweets will have to provide LaunchScreen, and LaunchImage will soon withdraw from the stage of history\u3011 \u3010Apple pushes group iMessage push to check heapster\u2019s pod starting environment sope-MacBook\u3011 \u3010iMessage Apple push group push soft certificate developer processing processor development Successfully loaded plugin Apple certificate\u3011 \u3010Apple photo album push sharing push is completed using PushMebaby push service, (BOOL)splitView: (NSSplitView *) serial number must comply with its original space\u3011 \u3010Apple Home Sharing Bulk Sending Software implements iMessage bulk sending APS_Production.CER from Apple Developer\u3011 \u3010Apple iMessage push imessage software installs Websocket or friend alliance to establish connection and receive messages\u3011 \u3010The apns device token corresponding to the Development and Production versions of the Apple Family Push (AlloCA) function allocation is different\u3011 \u3010Apple mass-sending imessage location push album push BOOL translucent NS studies the public api in the Message framework in the iOS system, and conducts research through the private api to conduct manual selection\u3011</p>"},{"location":"BLOG/","title":"BLOG","text":"<p>Here is the iMessage Apple group sending device. If you are interested please contact [ \u2708\ufe0f@IMEAX ] directly to view the latest video</p> <p>iMessage Apple push group sending/iMessage Apple group sending software equipment/real machine group control push source code/iMessage Apple push message group sending software/Apple iMessage push/Apple photo album push/Apple family push/Apple calendar push/Apple push imessage group sending device</p> <p>     \ud83d\udd17\u3010\u2764\ufe0fClick for consultation \u2764\ufe0f\u3011View the latest video \ud83d\udd0e"},{"location":"BLOG/iMessage1/2301/","title":"\u3010Apple mass iMessage Apple push\u3011","text":"<p>\u3010Apple mass-sends iMessage to Apple\u3011 Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files</p>"},{"location":"BLOG/iMessage1/2301/#what-is-apple-push-imessage","title":"\u3010What is Apple Push iMessage? \u3011","text":"<ul> <li>Apple IMessage push messaging software You need to use Apple Push Notification Service (APNs) and iMessage platform to develop a custom solution<ul> <li>[What is iMessage Apple Push?] What is Apple Push? What is Apple Push?</li> </ul> </li> <li>[What is Apple IM push? What is Apple push?]<ul> <li>Course Home Page</li> <li>It is an introductory tutorial on computer graphics theory. It talks about mathematics and algorithms.</li> </ul> </li> </ul>"},{"location":"BLOG/iMessage1/2301/#im-mass-deployment-what-is-apple-push","title":"\u3010iM mass deployment, what is Apple push\u3011","text":"<ul> <li>Apple Calendar Push, configure iOS devices: you can create custom profiles Apple Configurator is a tool officially provided by Apple, mainly for enterprises and educational institutions, for centralized management and configuration of multiple iOS devices.</li> </ul> <p>Using Apple Configurator, you can do the following on your PC:</p> <p>Configure iOS devices: You can create custom profiles, including network settings, security settings, app access, and more, and then apply these profiles to multiple iOS devices for consistent configuration.</p> <p>App deployment: You can batch install apps, books, and other media files to multiple iOS devices without having to install them manually on a device-by-device basis.</p> <p>Device monitoring and management: You can monitor connected iOS devices and view their status, app usage, and device information. You can also perform management operations such as device locking, unlocking, and factory reset. Explicit App ID (clear APP ID), the general format is: com.domainname.appname. This type of ID can only be used on one app. One needs to be created for every new application. Wildcard App ID (wildcard APP ID), the general format is: com.domainname.*. This kind of ID can be used in multiple applications, which is convenient, but applications using this kind of ID cannot use the notification function, so it is not often used.</p> <p>iOS Certificates ios certificates are certificates. Its function is to confirm that your mac has the permission to develop or publish applications under a certain developer account. And there are two types of certificates, one is development certificate; the other is release certificate or production certificate. 1.development certificate A development certificate is a tool that proves your mac has the ability to develop and debug your programs on a real machine. But each certificate is associated with a developer account, that is to say, you can only use this certificate to develop applications under this account. It uses the bundle id to know whether the application belongs to your own account. So every time you develop an application for a developer account, you need the development certificate created by this account. 2.Production certificate The production certificate proves whether your mac has the permission to publish applications. When archiving to the appstore, you must have a production certificate, otherwise the upload will fail. 3. Root certificate Whether it is a development certificate or a production certificate, it must be derived from the root certificate. The root certificate is the certificate generated by the root mac. The certificate saved on the menber center is the root certificate. It can only be installed on the mac where it was created. Other development macs must export the certificate from the root mac for use. That is, all sub-certificates can only be derived from the root certificate.</p> <p>iOS Provisioning Profiles The description file is used to identify whether a device has the permission to install an application (in short, it is the relationship between the application and the certificate, pay special attention to the expiration date of the certificate and description file, once the application expires, it cannot be used). Description files are divided into development description files and release description files. The release description files are divided into temporary release description files and formal release description files. 1. development provisioning profile Development description file, creating it requires bundle ID + development certificate + test device (added in devices); the three must correspond when compiling, otherwise the compiler will report an error. 2. Temporary release description file (distribution ad hoc) Temporary publishing profiles are used for publishing on unlimited devices. Creating it requires bundle ID + publishing certificate + publishing device, and the three must also correspond when compiling. 3. Official release description file (distribution appstore/distribution ad house) The official release description files created for personal accounts and corporate accounts are different. Since the personal account is published on appstore, the distribution appstore description file is created, while the enterprise account can only be published internally, so the distribution ad house description file is created. But the things they need to create are the same: bundle ID + publishing certificate. Because they are installed on indeterminate devices, there is no need to pick the device.</p> <ol> <li>Add team members to Apple development account After applying for a company or enterprise-level Apple developer account, you can add team members for collaborative development. Team members have three roles, namely Agent, Admin, and Member. Agent: It is the one who registered the developer account and has the highest authority. Only this account can be used to renew and create developer certificates; Administrator: manages distribution certificates, manages test equipment, manages application configurations, etc., there can be multiple; Member: No administrative rights, can only download and request data, there can be multiple. For a detailed introduction to team members, please see: Private Documents Go to the Developer Center to log in to your developer account. You can see the following developer information:</li> </ol> <p>Add team members: 1. Log in to the Developer Center using an agent or administrator account 2. Select People</p> <ol> <li> <p>Select Invite People</p> </li> <li> <p>You can be invited to become an administrator or a developer, just fill in the email address corresponding to the developer's Apple ID (you can fill in one or more), and you need to take charge within 30 days.</p> </li> <li> <p>After clicking the Invite button, an email will be sent to the added person's mailbox. Click View invitation, and then select Accept to become a developer.</p> </li> </ol> <p>This adds a new developer.</p> <ol> <li>You can change the permissions of other administrators or remove other administrators and members</li> </ol> <p>See official documentation</p> <ol> <li>Development certificate, production certificate, description file, AppID relationship and generation. First of all, you need to apply for a certificate and follow the tutorial on applying for an Apple developer account. If you don\u2019t have one yet, apply for one or borrow one. I won\u2019t go into details here. Log in to the Developer Center. If you have not applied for a certificate, the interface is as follows:</li> </ol> <p>If there is a certificate, the login interface is as follows:</p> <p>Once you have an account, you can officially develop and put it on the shelves. The detailed process is as follows: 1. Generate development and release certificates (1). Obtain the Certificate Signing Request (CSR) file through the keychain. Select \"Keychain Access\" - \"Certificate Assistant\" - \"Request a certificate from a certificate issuing authority...\", as shown below:</p> <p>Fill in the email address and common name, select \"Save to disk\", and a CSR file will be generated to the local disk.</p> <p>(2). Log in to the Developer Center and select Certificates, Indentifiers &amp; Profiles to obtain development and release certificates. Certificates -&gt; All -&gt; +</p> <p>If it is an enterprise certificate, you cannot publish the app to the App Store. In-House and Ad Hoc are publishing certificates, and iOS App Development is the development certificate. Choose to publish the certificate above</p> <p>If it is a personal or company certificate, App Store and Ad Hoc is a publishing certificate, and iOS App Development is a development certificate. as follows</p> <p>Choose File select the generated CSR file and click generate to generate the cer certificate.</p> <p>A glimpse of the generated development and production certificates can be seen below:</p> <p>Select Download to download locally, then double-click or drag to the keychain to install</p> <ol> <li>Generate App ID. Select Identfiers -&gt; App IDs -&gt; +</li> </ol> <p>The Name can be filled in arbitrarily, but it cannot be Chinese or special symbols. It is mainly used for description. The Bundle ID is exactly the same as the Bundle ID of the App, and is unique in the world. The general format is: com.domainname.appname.</p> <p>You can also choose NFC, push and other functions, select Continue -&gt; Register -&gt; Done; the registration of App ID is completed. System updates and restores: You can use Apple Configurator to perform system updates on your iOS device and, if necessary, restore the device to its factory settings.</p> <p>It's important to note that Apple Configurator is a powerful tool, but it's primarily aimed at professional and business users. For ordinary consumers, it may be easier to use iTunes or iCloud to manage and back up iOS devices.</p> <p>Please ensure that your use of Apple Configurator complies with applicable laws, licensing and privacy policies, and Apple's Terms and Conditions of Use.</p> <p>For more detailed information and to download Apple Configurator, please visit Apple's official website or obtain related resources and support through other official Apple channels.</p> <p>The specific steps to use Apple Configurator to deploy real-device push group control and push operations are as follows:</p> <p>Download and install Apple Configurator: You can download the latest version of Apple Configurator from Apple's official website and install it according to the installation guide.</p> <p>Connect the iOS device: Use a USB data cable to connect the iOS device to be group controlled to the PC.</p> <p>Create a profile: In Apple Configurator, you can create a customized profile that includes network settings, security settings, app access, and more. Profiles can be personalized to suit your needs.</p> <p>App deployment: In Apple Configurator, you can batch install apps, books, and other media files to connected iOS devices. You can select downloaded apps to install, or distribute them through Apple's Enterprise Developer Account.</p> <p>Configure push settings: In Apple Configurator, you can configure push settings, including settings for push certificates and push notifications. This allows you to send push notifications to iOS devices for group actions and notifications.</p> <p>Perform group control operations: Once configuration files and applications are deployed, you can perform group control operations, such as one-click startup, closing applications, modifying settings, etc. These actions will apply to all connected iOS devices simultaneously.</p>"},{"location":"BLOG/iMessage1/23010/","title":"\u3010What is iMessage Apple Push\u3011","text":""},{"location":"BLOG/iMessage1/23010/#what-is-imessage-apple-pushapple-calendar-push-apns-applepushnotificationservice-is-an-apple-message-push-server","title":"\u3010What is iMessage Apple Push\u3011Apple Calendar Push APNS (ApplePushNotificationService) is an Apple message push server","text":"<p>iMessage is a newly launched APPEXtension in iOS10. It can add our own content to system application messages, send them to friends, and even operate with your friends in the same message. This article mainly discusses how to quickly integrate emoticons in iMessage. APPEXTENSION and host APP have their own independent spaces, so IMessageExtension can also exist alone, or it can be packaged with the host APP and uploaded to the same project, and users can download iMessageApp (Download) or host App in iMessagestore) Or after the host App (in the AppStore) is downloaded, another one will be automatically downloaded. 1. Templates utilizing X code IMESSAGEEXTENSITION IMESSAGESDK have been integrated in iOS10, so the required X code version must be X-Code8+. Select File-&gt;New-&gt;Project-&gt;Application-&gt;StickerPackApplication as shown: When completed, the project layout is very simple and has no classes, so we don't have to write any code. , the system will automatically generate @2x and @1x. 2. Custom tags If the template provided by X code cannot meet our needs, you can use the custom mode. Compared to the X code template, select \"File\" -&gt; \"New\" -&gt; \"Project\" -&gt; \"Application\" -&gt; \"iMessageApplication\". Projects built using this method also have a folder called MessgaeExtension. But there is no StickerPack folder in Assets.xcassets. package com.staticTest;</p> <p>/**</p> <ul> <li> <p>Test the execution sequence of dynamic code blocks</p> </li> <li> <ol> <li>The only classes that can be modified by static are static external classes</li> </ol> </li> <li> <ol> <li>Static methods cannot directly access non-static members (methods, member variables)</li> </ol> </li> <li> <ol> <li>The static code block is loaded directly when the class is loaded and is only executed once.</li> </ol> </li> <li> <ol> <li>Execution order: parent class static code block and static members --&gt;</li> </ol> </li> <li> <p>Subclass static code blocks and static members --&gt;</p> </li> <li> <p>Parent class code block --&gt;</p> </li> <li> <p>Parent class construction method --&gt;</p> </li> <li> <p>Subclass code block --&gt;</p> </li> <li> <p>Subclass construction method --&gt;</p> </li> </ul> <p>*</p> <ul> <li>@author liu</li> </ul> <p>*</p> <p>*/</p> <p>public class StaticTest {</p> <pre><code> static{\n\n     System.out.println(\"Parent class static code block\");\n\n }\n\n\n\n\n\n public StaticTest(){\n\n     System.out.println(\"Parent class constructor\");\n\n }\n\n {\n\n     System.out.println(\"Parent class code block\");\n\n }\n\n\n\n public static void main(String[] args) {\n\n     new child();\n\n }\n</code></pre> <p>}</p> <p>class child extends StaticTest{</p> <pre><code> static{\n\n     System.out.println(\"Subclass static code block\");\n\n }\n\n\n\n {\n\n     System.out.println(\"Subclass code block\");\n\n }\n\n\n\n public child(){\n\n     System.out.println(\"Subclass constructor\");\n\n }\n</code></pre> <p>}</p> <p>So if you use custom tags, you don't need to add emoticons in Assets.xcassets. You can put resource files into our project. Just one MessageViewControlle is not enough. Custom stickers require MSStickerBrowserViewController, and our resource files are also loaded through this class. You can think of MessageViewControlle as a ViewControlle and MSStickerBrowserViewController as a UITableViewController. Therefore, we need to create a view controller that inherits from MSStickerBrowserViewController and if its name is: MyStickerBrowserViewController #import @Array = [NSMutableArrayarray]; self.stickerBrowserView.dataSource = self; for (inti = 1; i&lt;TOTAL_STICKER;i+ +) {NSString nameStr = [NSStringstringWithFormat:@\"bh_%d\",i]; NSURL url = [[NSBundlemainBundle] URLForResource:nameStrwithExtension:@\"png\"]; MSSticker *sticker = [[MSStickeralloc] initWithContentsOfFileURL:urllocalizedDescription: @\"\"Error: None]; [self.dateArrayaddObject: Sticker];}}-(void)viewDidLoad</p> <p>{[superviewDidLoad]; [self.stickerBrowserViewreloadData]; //Data source has been loaded, refresh interface [This is just a demonstration, actual process data is being loaded, you can start sub-thread processing as needed]) 123456789101112131415415171171819 Complete protocol - (NSInteger) numberOfStickersInStickerBrowserView: (MSStickerBrowserView ) StickerBrowserView {returnself.dateArray.count;} - (MSSticker )serViewController into MessageViewController. self.stickBrowserViewController = [[[MyStickBrowserViewControlleralloc] initWithStickerSize:MSStickerSizeSmall]; [selfaddChildViewController:self.stickBrowserViewController]; [self.viewaddSubview:self.stickBrowserViewController.view]</p>"},{"location":"BLOG/iMessage1/2302/","title":"\u3010iMessage group sending real machine group control deployment\u3011","text":""},{"location":"BLOG/iMessage1/2302/#im-push-calendar-push-latest-content-strong-delivery","title":"\u3010im push calendar push latest content strong delivery\u3011","text":"<p>In practice, you'll need to adjust accordingly based on the programming language and libraries you use.</p> <p>HTTP/2 protocol: This is a newer and recommended communication protocol. Using the HTTP/2 protocol, you can create TLS (Transport Layer Security) Establish a connection to APNs: Use Python's http2 library to establish connections to APNs. First, you need to prepare your certificate and key. Ns (Apple Push Ontification service) service is the core of remote notification. The service is sound, secure, and efficient, and developers can easily push notifications to iOS tvOS macOS terminal devices.</p> <p>When the application runs on the user device, a secure data exchange connection is established between the user device and APNs. The application receives notifications through this connection. explained in the following section</p> <p>The quality of service component of APNs can implement the function of storing and then sending. When APNs sends a notification to an offline device, APNs stores the notification (for a certain period of time) and delivers it to the device when the device comes online. This storage function only stores the most recent notifications for an app on a device. If the device is offline, sending a notification to the device will clear the previously stored notification. If a device is offline for too long, all stored notifications sent to the device will be dismissed.</p>"},{"location":"BLOG/iMessage1/2302/#include","title":"include  <p>python Copy code import http2 import ssl</p> <p>apns_host = \"api.push.apple.com\" apns_port = 443 certificate_path = \"/path/to/your/certificate.pem\" private_key_path = \"/path/to/your/private-key.pem\"</p> <p>ssl_context = ssl.SSLContext(ssl.PROTOCOL_TLS_CLIENT) ssl_context.load_cert_chain(certfile=certificate_path, keyfile=private_key_path)</p> <p>connection = http2.connect(apns_host, apns_port, ssl_context=ssl_context) Create a push request: Create a push notification in JSON format and send it to APNs using the established connection.</p> <p>python Copy code import json</p> <p>device_token = \"your-device-token\" notification = {      \"aps\": {          \"alert\": {              \"title\": \"Your Title\",              \"body\": \"Your Message\"          },          \"sound\": \"default\",          \"badge\": 1      }</p> <pre><code> \":method\": \"POST\",\n \":scheme\": \"https\",\n \":path\": f\"/3/device/{device_token}\",\n \"authorization\": f\"bearer {bearer_token}\", # Your bearer token\n \"content-type\": \"application/json\",\n \"apns-push-type\": \"alert\"\n</code></pre> <p>}</p> <p>stream = connection.request(headers, body=json.dumps(notification)) Handling push responses: Process the results of the push by reading the response returned from APNs.</p> <p>python Copy code response = connection.get_response(stream)</p> <p>if response.status == 200:      print(\"Push notification successfully sent\") else:      print(f\"Failed to send push notification. HTTP status: {response.status}\") This example shows how to use the http2 library in Python to establish a connection to APNs, create push requests, and handle push responses. But please note that this is a simplified example. In actual applications, you may need to deal with more details, such as error handling, retry mechanism, etc.</p> <p>For complete code examples and more details, you may want to consult APNs' official documentation and related development resources to ensure your implementation is accurate and secure.</p> <p>Also, please note that I can't provide full code and pictures here, but hopefully this example will help you better understand the process of connection establishment with APNs, push request creation, and push response processing.</p>","text":""},{"location":"BLOG/iMessage1/2303/","title":"\u3010Apple IM pushes iMessage\u3011","text":""},{"location":"BLOG/iMessage1/2303/#apple-pushes-softwareapple-ios-push-certificate-how-to-create-csr-file","title":"\u3010Apple pushes software\u3011Apple IOS Push Certificate How to Create CSR File","text":"<p>Choosing protocols to use with APNs should be based on your needs, technology stack, and development environment. Here are some tips to help you make your choice:</p> <p>HTTP/2 protocol compatibility:</p> <p>If your technology stack supports HTTP/2 and your development environment can easily integrate and utilize HTTP/2 libraries or frameworks, then choosing HTTP/2 is a more common and recommended choice. HTTP/2 provides higher efficiency, performance and security, and supports multiplexing and header compression, making it suitable for large-scale push message sending. Applicability of binary protocol:</p> <p>If your development environment or technology stack does not directly support HTTP/2, or you have better understanding and control of a custom binary protocol, then choosing the binary protocol may be more appropriate. Using binary protocols requires a certain understanding of the types and details of the protocol, and writing communication code that adapts to the protocol.</p>"},{"location":"BLOG/iMessage1/2303/#whether-it-is-a-background-start-with-this-parameter-you-can-run-in-the-background","title":"Whether it is a background start, with this parameter, you can run in the background.","text":"<p>fork=true</p>"},{"location":"BLOG/iMessage1/2303/#port-number-the-default-is-27017","title":"Port number The default is 27017","text":"<p>port=27017</p>"},{"location":"BLOG/iMessage1/2303/#specify-the-hoarding-engine-default-does-not-require-naming","title":"Specify the hoarding engine (default does not require naming)","text":""},{"location":"BLOG/iMessage1/2303/#storageenginemmapv1","title":"storageEngine=mmapv1","text":"<p>Including push through Apple ID (Apple ID) and push through mobile phone number. These push methods are suitable for different scenarios and needs.</p> <p>Apple ID push: Apple ID push is to send push notifications to users who log in with a specific Apple ID. This method is suitable for push notifications targeting individual users, such as sending personalized messages or reminders to specific users. Apple ID push uses Apple's push service (APNs). You can push notifications to specific users by obtaining the user's device token (Device Token) in the application.</p> <p>Mobile phone group control number push: Mobile phone group control number push is to send push notifications to a group of mobile phone numbers. This method is suitable for sending broadcast messages or notifications to a group of users. For mobile phone group control number push, you need to use an SMS service provider or a third-party push service provider to send push messages to a group of mobile phone numbers. You need to provide a list of mobile phone numbers or use relevant interfaces to push numbers in batches.</p> <p>Please note that the implementation and technical details of these two push methods vary, depending on the development language, platform and service provider you use. Apple ID push requires the use of Apple's push services (APNs), while mobile phone group control number push may require integration with SMS service providers or push service providers.</p> <p>If you wish to implement a specific push method, please refer to Apple's official documentation and developer resources to learn more about the specific implementation and technical details of the response push method.</p> <p>The following interface will appear. Click the decimal point in the upper right corner of the display, repeat the operation twice, and create a development test certificate and a certificate. Develop a test certificate for actual machine debugging. The certificate is used to deliver to the AppStore. Our development test certificate is a demonstration. Select the scenario in the first red box; then, the CSR file, that is, the certificate marking request will be prompted. file, there will be a specific format, if the English is not very good, you can refer to the map; then save the CSR file to one; Note: The CSR file makes each certificate as separate as possible, because the name of the tenant is in the certificate name key; then submit the CSR file in the communication center; if submitted, a CER certificate will be generated, as shown in the figure, with a estrus period of one year; configure the published certificate using the same method, load and save, double-click to install; in In the correct login certificate, you can check the name of the private key. The name of the CSR request file; 2. The configuration of the developer certificate has been completed, let's configure the APPID and push the certificate; Select the AppID in the left column, select the \"Correct\" option, add a knob to the application's application, and you will see To create the buttons, namely certificate and publish certificate, the following process is the same as the certificate in 1 above, first create the certificate request file. Then, submit it. It is important to note that although you can create a push certificate directly in the certificate column on the left, it is recommended to create a push service here to avoid forgetting. Not available when push service is turned on.</p> <p>After creating the certificate, you will save the download and double-click to install; #Extract tar -zxvf mongodb-osx-ssl-x86_64-3.6.5.tgz #Change command name mv mongodb-osx-x86_64-3.6.5 mongodb-3.6.5 #Add to the environment variables vim ~/.zshrc and finally add export MONGODB_HOME=/Users/liang/software/mongodb-3.6.5 export PATH=\\(MONGODB_HOME/bin:\\)PATH #Make the configuration effective source ~/.zshrc #Inspection book This mongod -version error reports: The prompt cannot be opened #System Favorite Settings--&gt;Global and Secret--&gt;Enable Apps that are allowed to be downloaded from the following locations: The use of \"mongod\" has been banned because the click from a self-identified developer is still Allow #reexecution of mongod -version</p>"},{"location":"BLOG/iMessage1/2303/#turn-over-the-evidence","title":"Turn over the evidence","text":"<p>auth = true</p> <p>The device serial number generated by Clover + any 5-digit pseudonym number is an easily accessible set of radicans. For example, the serial number generated by your Clover is C02J8YTODNCT. For example, if your arbitrary 5-digit pseudonym is: ABCDE, then fill in the Board Serial Number: C02J8YTODNCTABCDE into the location ROM and MLB ROM in the figure below, which is the MAC address of your network card. For example, if the network card MAC is: A1-B2-C3-D4-E5-F6, then this ROM is: A1B2C3D4E5F6 MLB is your Board Serial Number. Just add the target value in Board Serial Number here. Custom UUID directly copies the SmUUID subsidy, and converts the phonograph network card mac address pseudonym part into an inscription to complete the above values. As expected, after restarting, you can enjoy Apple's iMessage and FaceTime functions normally - (void)applicationDidFinishLaunching:( NSNotification *)aNotification { kern_return_t kr; CFMutableDictionaryRef matchDict; io_iterator_t iterator; io_registry_entry_t entry; matchDict = IOServiceMatching(\"IOEthernetInterface\"); kr = IOServiceGetMatchingServices(kIOMasterPortDefault, matchDict,</p>"},{"location":"BLOG/iMessage1/2303/#recommended-content-imessgae-related","title":"Recommended content IMESSGAE related","text":"<p>When choosing an agreement, you also need to consider the following factors:</p> <p>Functional requirements: Evaluate your push functional requirements, such as whether you need to support multiplexing, header compression, etc. Choose a protocol according to your needs.</p> <p>Technology stack and development environment: Understand how well your technology stack and development environment support different protocols and whether there are related libraries, tools or frameworks available.</p> <p>Maintenance and support: Consider your team\u2019s technical skills and resources, as well as the cost of maintaining and supporting different protocols.</p> <p>No matter which protocol you choose, you need to comply with Apple's push service specifications and security requirements to ensure that communication with APNs is safe and reliable.</p> <p>Most importantly, carefully read Apple's developer documentation and guides related to push services. These documents provide detailed explanations, sample code, and best practices to help you communicate with APNs.</p> <p>Hopefully these suggestions will help you make the right protocol choice for your needs! If you have any further questions, please feel free to ask.</p>"},{"location":"BLOG/iMessage1/2304/","title":"\u3010iMessage Apple group sending technology open source original\u3011","text":"<p>\u3010Apple mass iMessage Apple push\u3011The album recommends two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files</p>"},{"location":"BLOG/iMessage1/2304/#imessage-frequent-sending-software-apple-group-sending-technology-open-source-original","title":"\u3010iMessage Frequent Sending Software Apple Group Sending Technology Open Source Original\u3011","text":"<p>When APNs sends a notification to an offline device, APNs stores the notification (for a certain period of time) and delivers it to the device when the device comes online. (\"IOEthernetInterface\"); kr = IOServiceGetMatchingServices(kIOMasterPortDefault, matchDict,</p> <p>Apple has disabled the SSL3.0 connection method on the server side due to bug reasons. Currently only TLS connections are supported.</p> <p>Then connect again, this time using our SSL certificate and private key to configure a secure connection:</p> <ol> <li> <p>If the machine corresponding to the deviceToken is offline on the APNS server when pushing, Apple will retain the push information for \"a period of time.\" When the machine comes back online, push information to the machine. If the machine is offline for a long time, Apple will discard the message. This \"period of time\" does not explicitly say how long it lasts, and it is not known whether Apple has dynamically adjusted this time under different circumstances, so it is impossible to predict the impact of this time on the information loss situation.</p> </li> <li> <p>For continuous push, for offline devices, Apple will always only store the latest message, and the previous message will be discarded.</p> </li> </ol> <p>3\uff0e When there are multiple push tasks, Apple recommends using a single connection to send continuously instead of repeatedly switching connections, otherwise it will be rejected by Apple as a D-O-S attack. If there are multiple servers, they can connect to APNS concurrently and allocate push tasks, so that the tasks can be performed more efficiently.</p> <p>4\uff0e When sending multiple push tasks, if one of them uses the wrong deviceToken, the connection will be disconnected, causing the subsequent push tasks to stop executing. Apple regularly notifies the provider of the invalid deviceToken list through a service called \"The Feedback Service\". How to use this service is detailed in Apple's official documentation. There is an attached link below. import uuid</p> <p>mac_address = uuid.UUID(int=uuid.getnode()).hex[-12:].upper()</p> <p>mac_address = '-'.join([mac_address[i:i+2] for i in range(0, 11, 2)])</p> <p>print(mac_address) The apns device token corresponding to the Development and Production versions is different. The former is obtained under the mobileprovision of develop. The latter is obtained from production's mobileprovision.</p> <p>The two versions of Development and Production can share an App ID (not recommended. When sharing, you must delete the app on the device before each debugging, and repackage and generate it. And sharing the app ID will often make you crazy. If you go in the morning, it will be gone in the afternoon. . So not recommended), but you cannot share a mobileprovision, so you need to generate a separate Distribution certificate for the production version.</p> <p>Note: The Distribution version cannot be debugged on the device!</p> <p>The code signs of the Development and Production versions are different. The former is iPhone Developer and the latter is iPhone Distribution. Detail can't be mistaken. function checkGit (str, logMsg) {</p> <p>if (!(</p> <pre><code> ['error', 'failed', 'git rebase --abort', 'git rebase --continue'].every(item =&gt; str.indexOf(item) === -1)\n</code></pre> <p>)) {</p> <pre><code> fs.writeFileSync(logFile, logMsg)\n\n process.exit()\n</code></pre> <p>}</p> <p>}</p> <p>Both Development Push SSLCertificate and Production Push SSL Certificate have expiration dates. The Development Push SSL Certificate is valid for about four months (later it seems to have been changed to one year), while the ProductionPush SSL Certificate is valid for one year. It is necessary to pay attention to generating a new certificate before expiration to avoid affecting use. The official website can set two at the same time. When the first one is about to expire, generate the second one, then replace the server certificate, and delete the first certificate setting after the second one has been used for a week without problems.</p> <p>openssl pkcs12 -clcerts -nokeys -out apns-dev-cert.pem -in apns-dev-cert.p12</p> <p>openssl pkcs12 -nocerts -out apns-dev-key.pem -in apns-dev-cert.p12</p> <p>openssl rsa -in apns-dev-key.pem -out apns-dev-key-noenc.pem</p> <p>cat apns-dev-cert.pem apns-dev-key-noenc.pem &gt; apns-dev.pem</p> <p>Generate an Apple Push Notification SSL license on your Mac:</p> <ol> <li> <p>Log in to the iPhone Developer Connection Portal and click App IDs</p> </li> <li> <p>Create an App ID without using wildcards. Wildcard IDs cannot be used with push notification services. For example, our iPhone program ID looks like this: AB123346CD.</p> </li> <li> <p>Click \"Configure\" next to the App ID and press the button to generate Push Notification License. Follow the steps guided by the \"leader\" to generate a signature and upload it, and finally download the generated license. This step is also covered in Apple documentation.</p> </li> <li> <p>Introduce your aps_developer_identity.cer into Keychain by double-clicking the .cer file.</p> </li> <li> <p>Start Keychain Assistant on your Mac, and then select the Certificates category when logging in to keychain. You will see an expandable option \"Apple Development Push Services\"</p> </li> <li> <p>Expand this option and right-click on \u201cApple Development Push Services\u201d &gt; Export \u201cApple Development Push Services ID123\u201d. Save as apns-dev-cert.p12 file.</p> </li> <li> <p>Expand \"Apple Development Push Services\" and perform the same operations on \"Private Key\" and save it as apns-dev-key.p12 file.</p> </li> <li> <p>These files need to be converted to PEM format through terminal commands:</p> </li> </ol> <p>openssl pkcs12 -clcerts -nokeys -out apns-dev-cert.pem -in apns-dev-cert.p12</p> <ol> <li>Convert the pem to obtain the key:</li> </ol> <p>openssl pkcs12 -nocerts -out apns-dev-key.pem -in apns-dev-cert.p12</p> <ol> <li>If you want to remove the password, either disable it or execute it when exporting/converting:</li> </ol> <p>openssl rsa -in apns-dev-key.pem -out apns-dev-key-noenc.pem</p> <ol> <li>Finally, you need to break down the key and license files into the apns-dev.pem file. This file is required when connecting to APNS:</li> </ol> <p>cat apns-dev-cert.pem apns-dev-key-noenc.pem &gt; apns-dev.pem</p> <p>Save this file with a name that's easy to remember and you'll probably need to use it later. The above steps are also suitable for generating product licenses.</p> <p>Ways to check whether the certificate is accurate:</p> <p>Connected to gateway.sandbox.push-apple.com.akadns.net.</p> <p>Escape character is \u2018^]\u2019</p> <p>It will attempt to send a regular, unencrypted connection to the APNS service. If you see the above response, it means that your MAC can reach APNS. Press Ctrl+C to close the connection. If you get an error message, then you need to make sure your firewall allows port 2195.</p>"},{"location":"BLOG/iMessage1/2305/","title":"\u3010Apple pushes Imessage Apple\u3011","text":""},{"location":"BLOG/iMessage1/2305/#apple-pushes-imessage-applesummary-apple-push-notification-service-updates","title":"\u3010Apple pushes Imessage Apple\u3011Summary Apple Push Notification Service Updates","text":"<p>Create an App ID and push certificate: Create an App ID in your Apple Developer account and generate a push certificate for that App ID. This certificate will be used for secure communication with APNs.</p> <p>Get a device token: In your iOS app, complete the remote notification registration process to get a device token. This is the identifier for sending push messages to a specific device. For detailed steps, please refer to the information I provided previously about obtaining device tokens.</p> <p>Configure APNs notifications: Use the obtained device token and push certificate to send push messages to APNs. You need to implement communication with APNs on the server side. Here is a basic example using Swift and the Vapor framework:</p> <p>swift Copy code importVapor import APNS</p> <p>let apnsConfig = try APNSConfig(      keyIdentifier: \"YOUR_KEY_IDENTIFIER\",      teamIdentifier: \"YOUR_TEAM_IDENTIFIER\",      signingMode: .file(path: \"/path/to/AuthKey_YOUR_AUTH_KEY.p8\") )</p> <p>let apns = try APNSConnection.connect(configuration: apnsConfig)</p> <p>let payload = APNSwiftPayload(alert: \"Hello, World!\")</p> <p>let deviceToken = \"DEVICE_TOKEN\"</p> <p>let pushMessage = try APNSwiftNotification(deviceToken: deviceToken, payload: payload)</p> <p>Deploying and setting up binary protocols requires a series of steps, covering connection establishment, data encoding and decoding, communication processing, etc. Here are the steps you can generally follow, but please note that the specific steps may vary depending on the needs of your application, development framework, and technology stack.</p> <p>Prepare your development environment: Make sure your development environment includes the necessary tools and libraries to support establishing TCP connections over TLS and encoding and decoding data. You may need to use a library similar to OpenSSL to handle encrypted communication.</p> <p>Obtain a certificate and key: Just like when you use HTTPS, a certificate and key are required to establish a TLS connection. You need to generate or obtain certificates and keys suitable for your application.</p> <p>Establish a connection: Establish a TCP connection over TLS by using the development language and library of your choice. This involves specifying information such as server location, port, and certificate.</p> <p>Encode data: You need to encode the push request into binary format to match the protocol's type. This may involve converting various fields and data into byte sequences, ensuring that the encoded data conforms to the protocol's expected format.</p> <p>Send request: Send the encoded push request to the target server over the established connection. This may involve sending an encoded sequence of bytes to the connection's output stream.</p> <p>Take over response: Expect a response from the target server and read data from the connected input stream. This data will be the server's response, which may be success or failure information.</p> <p>Decode response: Decode the byte sequence received from the server into readable data so that the server's response can be understood. This may involve converting byte sequences back into fields and data.</p> <p>Processing response: Process the server's response according to the decoded data. If it succeeds, you can continue with the next step; if it fails, you may need to take appropriate corrective measures.</p> <p>Close the connection: Once the communication is complete, close the connection to free up resources. Make sure to close the connection exactly when it is not needed to prevent resource disclosure.</p> <p>Testing and debugging: Extensive testing and debugging of your binary protocol communications before real-world deployment. This will help identify and resolve possible problems and errors.</p> <p>It should be emphasized that the implementation of the binary protocol involves some details, including encoding and decoding rules, byte order, etc. You may need to consult the relevant protocol specifications and documentation to ensure that your implementation is equivalent to the intended protocol.</p> <p>Most importantly, make sure your communication process is safe and secure. It is a good practice to use TLS for encrypted communications to ensure that data cannot be stolen or tampered with during transmission.</p> <p>apns.send(pushMessage) { result in      switch result {      case .success:          print(\"Push notification sent successfully\")      case .failure(let error):          print(\"Error sending push notification: (error)\")      } }</p> <p>Handling push responses: Once the push message is served by APNs, you will receive the push response from APNs. Based on the information in the response, you can determine whether the push was successful. As mentioned previously, please refer to Apple's official documentation for more information on handling push responses. Send the device token to the server: In the didRegisterForRemoteNotificationsWithDeviceToken method, you need to write code to send the device token to your server. You can send the device token to the server side using a network request or other communication method that suits you.</p>"},{"location":"BLOG/iMessage1/2306/","title":"\u3010imessage apple group control source code\u3011push","text":""},{"location":"BLOG/iMessage1/2306/#imessage-apple-mass-sendingapple-push-technology-open-source-requires-source-code-writing-imessage-vm-plug-in","title":"\u3010imessage apple mass sending\u3011Apple push technology open source requires source code writing, IMESSage-VM plug-in","text":"<p>Choosing protocols to use with APNs should be based on your needs, technology stack, and development environment. Here are some tips to help you make your choice:</p> <p>HTTP/2 protocol compatibility:</p> <p>If your technology stack supports HTTP/2 and your development environment can easily integrate and utilize HTTP/2 libraries or frameworks, then choosing HTTP/2 is a more common and recommended choice. HTTP/2 provides higher efficiency, performance and security, and supports multiplexing and header compression, making it suitable for large-scale push message sending. Applicability of binary protocol:</p> <p>If your development environment or technology stack does not directly support HTTP/2, or you have better understanding and control of a custom binary protocol, then choosing the binary protocol may be more appropriate. Using binary protocols requires a certain understanding of the types and details of the protocol, and writing communication code that adapts to the protocol.</p>"},{"location":"BLOG/iMessage1/2306/#whether-it-is-a-background-start-with-this-parameter-you-can-run-in-the-background","title":"Whether it is a background start, with this parameter, you can run in the background.","text":"<p>fork=true</p>"},{"location":"BLOG/iMessage1/2306/#port-number-the-default-is-27017","title":"Port number The default is 27017","text":"<p>port=27017</p>"},{"location":"BLOG/iMessage1/2306/#specify-the-hoarding-engine-default-does-not-require-naming","title":"Specify the hoarding engine (default does not require naming)","text":""},{"location":"BLOG/iMessage1/2306/#storageenginemmapv1","title":"storageEngine=mmapv1","text":"<p>Including push through Apple ID (Apple ID) and push through mobile phone number. These push methods are suitable for different scenarios and needs.</p> <p>Apple ID push: Apple ID push is to send push notifications to users who log in with a specific Apple ID. This method is suitable for push notifications targeting individual users, such as sending personalized messages or reminders to specific users. Apple ID push uses Apple's push service (APNs). You can push notifications to specific users by obtaining the user's device token (Device Token) in the application.</p> <p>Mobile phone group control number push: Mobile phone group control number push is to send push notifications to a group of mobile phone numbers. This method is suitable for sending broadcast messages or notifications to a group of users. For mobile phone group control number push, you need to use an SMS service provider or a third-party push service provider to send push messages to a group of mobile phone numbers. You need to provide a list of mobile phone numbers or use relevant interfaces to push numbers in batches.</p> <p>Please note that the implementation and technical details of these two push methods vary, depending on the development language, platform and service provider you use. Apple ID push requires the use of Apple's push services (APNs), while mobile phone group control number push may require integration with SMS service providers or push service providers.</p> <p>If you wish to implement a specific push method, please refer to Apple's official documentation and developer resources to learn more about the specific implementation and technical details of the response push method.</p> <p>The following interface will appear. Click the decimal point in the upper right corner of the display, repeat the operation twice, and create a development test certificate and a certificate. Develop a test certificate for actual machine debugging. The certificate is used to deliver to the AppStore. Our development test certificate is a demonstration. Select the scenario in the first red box; then, the CSR file, that is, the certificate marking request will be prompted. file, there will be a specific format, if the English is not very good, you can refer to the map; then save the CSR file to one; Note: The CSR file makes each certificate as separate as possible, because the name of the tenant is in the certificate name key; then submit the CSR file in the communication center; if submitted, a CER certificate will be generated, as shown in the figure, with a estrus period of one year; configure the published certificate using the same method, load and save, double-click to install; in In the correct login certificate, you can check the name of the private key. The name of the CSR request file; 2. The configuration of the developer certificate has been completed, let's configure the APPID and push the certificate; Select the AppID in the left column, select the \"Correct\" option, add a knob to the application's application, and you will see To create the buttons, namely certificate and publish certificate, the following process is the same as the certificate in 1 above, first create the certificate request file. Then, submit it. It is important to note that although you can create a push certificate directly in the certificate column on the left, it is recommended to create a push service here to avoid forgetting. Not available when push service is turned on.</p> <p>After creating the certificate, you will save the download and double-click to install; #Extract tar -zxvf mongodb-osx-ssl-x86_64-3.6.5.tgz #Change command name mv mongodb-osx-x86_64-3.6.5 mongodb-3.6.5 #Add to the environment variables vim ~/.zshrc and finally add export MONGODB_HOME=/Users/liang/software/mongodb-3.6.5 export PATH=\\(MONGODB_HOME/bin:\\)PATH #Make the configuration effective source ~/.zshrc #Inspection book This mongod -version error reports: The prompt cannot be opened #System Favorite Settings--&gt;Global and Secret--&gt;Enable Apps that are allowed to be downloaded from the following locations: The use of \"mongod\" has been banned because the click from a self-identified developer is still Allow #reexecution of mongod -version</p>"},{"location":"BLOG/iMessage1/2306/#turn-over-the-evidence","title":"Turn over the evidence","text":"<p>auth = true</p> <p>The device serial number generated by Clover + any 5-digit pseudonym number is an easily accessible set of radicans. For example, the serial number generated by your Clover is C02J8YTODNCT. For example, if your arbitrary 5-digit pseudonym is: ABCDE, then fill in the Board Serial Number: C02J8YTODNCTABCDE into the location ROM and MLB ROM in the figure below, which is the MAC address of your network card. For example, if the network card MAC is: A1-B2-C3-D4-E5-F6, then this ROM is: A1B2C3D4E5F6 MLB is your Board Serial Number. Just add the target value in Board Serial Number here. Custom UUID directly copies the SmUUID subsidy, and converts the phonograph network card mac address pseudonym part into an inscription to complete the above values. As expected, after restarting, you can enjoy Apple's iMessage and FaceTime functions normally - (void)applicationDidFinishLaunching:( NSNotification *)aNotification { kern_return_t kr; CFMutableDictionaryRef matchDict; io_iterator_t iterator; io_registry_entry_t entry; matchDict = IOServiceMatching(\"IOEthernetInterface\"); kr = IOServiceGetMatchingServices(kIOMasterPortDefault, matchDict,</p> <p>Functional requirements: Evaluate your push functional requirements, such as whether you need to support multiplexing, header compression, etc. Choose a protocol according to your needs.</p> <p>Technology stack and development environment: Understand how well your technology stack and development environment support different protocols and whether there are related libraries, tools or frameworks available.</p> <p>Maintenance and support: Consider your team\u2019s technical skills and resources, as well as the cost of maintaining and supporting different protocols.</p> <p>No matter which protocol you choose, you need to comply with Apple's push service specifications and security requirements to ensure that communication with APNs is safe and reliable.</p> <p>Most importantly, carefully read Apple's developer documentation and guides related to push services. These documents provide detailed explanations, sample code, and best practices to help you communicate with APNs.</p> <p>Hopefully these suggestions will help you make the right protocol choice for your needs! If you have any further questions, please feel free to ask.</p>"},{"location":"BLOG/iMessage1/2307/","title":"\u3010IM pushes Apple software device installation\u3011","text":""},{"location":"BLOG/iMessage1/2307/#imessage-apple-software-device-installationapp-can-always-obtain-devicetoken","title":"\u3010imessage Apple software device installation\u3011APP can always obtain DeviceToken","text":"<p>You'll see a complete output that lets you understand what OpenSSL is doing in the background. If the connection is successful, you can type some characters. When you press Enter, the service will disconnect. If there is a problem establishing the connection, OpenSSL will give you an error message, but you have to scroll up the LOG to find it.</p> <p>The client is easy to make, just apply for a certificate, copy the code, and it's done.</p> <p>On the server side, if it is PHP, it must use the .pem certificate. If it is Java, it must use the .p12 certificate. (You may also need to double-click the certificate to install it!)</p> <p>The json package sent by the server is limited in size, with a maximum of 256 bytes, including a custom dictionary set.</p> <p>You can add \"\\n\" to the alert string in aps for line break.</p> <p>In addition to alert, badge, and sound, the values in the json package can still be customized.</p> <p>Additional custom values:</p> <p>$payload['aps'] = array('alert' =&gt; 'This is the alert text', 'badge' =&gt; 1, 'sound' =&gt; 'default');</p> <p>$payload['server'] = array('serverId' =&gt; $serverId, 'name' =&gt; $name);</p> <p>\\(output = json_encode(\\)payload);</p> <p>When the user presses \"View\", the custom server value will be passed to the program in the device. The JSON values are as follows:</p> <p>{</p> <p>\"aps\" :</p> <p>{ \"alert\" :</p> <p>{</p> <p>\"action-loc-key\" : \"performance\" ,</p> <p>\"body\" : \"This is the alert text\"</p> <p>},</p> <p>\"badge\" : 1,</p> <p>\"sound\" : \"default\" },</p> <p>\"server\" : { \"serverId\" : 1, \"name\" : \"Server name\")</p> <p>}</p> <p>The 256-byte limit applies to all payloads, including custom dictionary sets.</p> <p>Native interface</p> <p>In Server Density, once a reminder is generated, a payload will be created and inserted into the queue. Therefore, we can send multiple payloads at the same time if necessary.</p> <p>Apple recommends this method because if you frequently connect and disconnect while sending each payload, APNS may block your IP.</p> <p>As Apple describes:</p> <p>The native interface uses native sockets, has binary content, adopts data flow technology, and does not generate feedback.</p> <p>Expert\u2019s summary:</p> <p>APPLE push care service tutorial PART-1</p> <p>APPLE push notification service tutorial PART-2</p> <p>APPLE push notification service tutorial PART-3</p> <p>Before IOS7, Apple generated the same DeviceToken for multiple apps on a device.</p> <p>In IOS7 and later, Apple generates different DeviceTokens for multiple apps on a device.</p> <p>This new change causes a mapping table of old and new tokens to be created on APNS. If you don't stop using the old token, that's fine. However, once the server uses the new DeviceToken, the records in the mapping table will be deleted. , which means that the old DeviceToken cannot be used and must fail to be sent.</p> <p>To be verified: In IOS5 and IOS6, the APP can always obtain the DeviceToken. In other systems, if the user refuses or turns off the push, the DeviceToken cannot be obtained and a failure callback is performed.</p> <p>Details are required to generate a certificate:</p> <p>Apple developer accounts are divided into several roles</p> <p>Agent: Agent, with the highest authority, can access iTunes Connect.</p> <p>Admin: Administrator, has the authority to manage members, protect device lists, and maintain APPID and certificate lists.</p> <p>Member: Ordinary member, read-only permission. {</p> <p>\"channels\":</p> <p>[</p> <pre><code> \"/Users/mac/Library/Application Support/Sublime Text 3/channel_v3.json\"\n</code></pre> <p>]</p> <p>} Note: After testing on September 11, 2013, I found that the certificate generation mechanism was updated when the Apple website was offline some time ago. Previously, manipulating the keychain generated a CSR file that could be used all the time. However, now whenever you want to generate a certificate, you need to regenerate a CSR file in advance. Otherwise, the certificates you generate will be invalid. Fake certificates, especially PUSH certificates, cannot be used by the server at all. APNS establishes a connection. This weird problem is super difficult to track! I hope everyone who reads this paragraph can avoid taking detours, no thanks!</p> <p>I also encountered various problems while using PushMeBaby. First of all, although the .cer public key certificate has been used in the project, there must be a certificate with a private key in the local keychain, otherwise the connection cannot be successfully established. And it should be noted that the certificate is best placed in the \"Login\" group, otherwise the program will not be able to find the private key. Secondly, in the original project, there will be an infinite loop when scanningString, so the code needs to be modified as follows:</p>"},{"location":"BLOG/iMessage1/2308/","title":"\u3010IMessage real machine script source code mass distribution\u3011","text":""},{"location":"BLOG/iMessage1/2308/#imessage-real-machine-script-source-code-mass-distributiondoes-pushing-content-require-a-public-key-certificate-to-operate","title":"\u3010IMessage real machine script source code mass distribution\u3011Does pushing content require a public key certificate to operate?","text":"<p>Apple Push Notification Service is a message push service provided by Apple. The push mode includes top message bar, sound and badge number(). With APNS, the application can receive program-related information in any situation (including running status not running, foreground and background), because in most cases, iOS At least one application can be in the active state, so APNS provides great convenience for application interaction. 1: Introduction Before using APNS, there are a few things you need to understand: 1: APNS is charged. Only with a developer account can you apply for an APNS certificate. 2: APNS is unreliable. Apple does not guarantee the reliability of information push. 3: APNS has no limit on the size of the message, and the total capacity cannot exceed 256 bytes. After understanding the above three items, you should have an understanding of the applicable application scenarios of APNS.</p> <p>The workflow of APNS is shown in the figure below: 1 &amp; 2: When the user installs and starts the application for the first time, a dialog box will pop up to remind the application that it needs to be pushed openly and whether it is allowed. If it is allowed, the application will obtain a hardware token. There are three points to note: First, this token is uniquely related to the device, and the token obtained by different applications on the same device is the same; Second, when the application is uninstalled and then reinstalled, the confirmation dialog box will not appear again, and the configuration information of the previous installation will be automatically inherited; Third, push settings can be changed in Settings-Control. You can choose to turn on one or more of message box, sound and badge number. 3: The application sends the received token to the server, which is the source of the APNS message. 4: The application server sends a message to Apple\u2019s message server through the token and certificate. 5: Apple sends the received message to the corresponding application on the corresponding device. 6: If the application is not in the Active state (not started or backgroud), under the default settings, a message box will pop up at the top of the screen with a sound prompt. Click to change the message box to enter the application. If you do not click, there will be a badge number on the application icon. Appear. Two: Use pace The use of APNS is not complicated, but there are many links that are easy to make mistakes, especially the certificate application part, so special attention should be paid. The following is a discussion based on the actual steps I followed in the tutorial: Preparatory work: A: An Xcode project, we named it MyPushChat, and a corresponding App ID. B: An iOS device that can be used for debugging (APNS can only work on physical devices, and the simulator cannot run) step1: Open \"Keychain Access\" in \"Applications - Tools\", as shown in the figure below: In the next dialog box, when you choose to save to disk, you can fill in the email as you like and name it MyPushChat. Click \"Inherit\", set the file name to \"MyPushChat\", and click Save. In this way, you will get a file named \"MyPushChat.certSigningRequest\", which should be kept properly. Get the private key from the csr file you just created. The detailed operation is as shown in the figure below: Name the exported file MyPushChatKey.p12 and enter the password. Please remember this password. It is temporarily set to 123456abc. At this point, we have the file MyPushChat.certSigningRequest, and MyPushChatKey.p12 step2: Find the AppID corresponding to MyPushChat in App IDs, click the \"Configure\" button on the right, and check the selection box as shown below: Click the configure button on the right side of \"Development Push SSL Certificate\". The development version is used for testing. It is only valid for one year and can only use Apple's APNS test server. When the application is released, you need to apply for the Distributions version certificate. The Tokens obtained by the Development and Distribution version certificates are different. The pop-up box is as follows: Upload \"MyPushChat.certSigningRequest\" and click Generate. After a while, the certificate is generated. Download it and name it \"aps_developer_identity.cer\". step3: Open the Provision Portal, click New Provision, name the Provision File \"MyPushChat\", select the corresponding App ID and Device and download it. Get the file MyPushChat.provision. Double-click to import this MyPushChat.Provision file. If everything is normal, Orgnizer will pop up, and the display interface will be as follows: step4: Save all the files obtained above to the desktop. Open the Console and switch to the desktop. First convert aps_developer_identity.cer to MyPushChat.cert Command: openssl x509 -in aps_developer_identity.cer -inform der-out MyPushChatCert.pem Then convert the private key file to MyPushChatKey.pem Order: openssl pkcs12 -nocerts -out MyPushChatKey.pem -in MyPushChatKey.p12 Enter Import Password: The password entered here is the password set later for the private key: 123456abc</p> <p>MAC verified OK</p> <p>Enter PEM pass phrase:</p> <p>You must enter a new password here, we set it to 123456abc</p> <p>Verifying - Enter PEM pass phrase:</p> <p>Next, split MyPushChatKey.pem and MyPushChatCert.pem into a pem file:</p> <p>Command: cat PushChatCert.pem PushChatKey.pem &gt; ck.pem</p> <p>Finally, test the obtained ck.pem file</p> <p>First run:</p> <p>Command: telnet gateway.sandbox.push.apple.com 2195</p> <p>If the network is normal, the following will appear, ctrl + C to stop the connection.</p> <p>Trying 17.172.232.226...</p> <p>Connected to gateway.sandbox.push-apple.com.akadns.net.</p> <p>Escape character is '^]'.</p> <p>Then test the connection using ssl</p> <p>Command: openssl s_client -connect gateway.sandbox.push.apple.com:2195 -cert MyPushChatCert.pem -key MyPushChatKey.pem</p> <p>After entering the password 123456abc, if everything is normal, there will be a lot of output, you will be able to enter as many characters as you want, and after pressing Enter, the connection will be interrupted.</p> <p>At this point, the most tedious and error-prone process has been completed. The certificate-related work ends here and we enter the coding stage~</p> <p>step5: 1:</p> <p>Add the following code to didFinishLaunchingWithOptions in AppDelegate.m in the project MyPushChat [[UIApplication sharedApplication] registerForRemoteNotificationTypes: (UIRemoteNotificatinTypeBadge | UIRemoteNotificationTypeSound | UIRemoteNotificationTypeAlert)]; The function of this code is to pop up a dialog box when the application is started for the first time to let the user confirm whether to turn on message push. The message types registered in this sentence include BadgeNumber, sound, and top message box. You can choose one or more of them. 2: Add the following code to AppDelegate</p> <ul> <li> <p>(void)application:(UIApplication)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData)deviceToken { NSLog(@\"My token is: %@\", deviceToken); }</p> </li> <li> <p>(void)application:(UIApplication)application didFailToRegisterForRemoteNotificationsWithError:(NSError)error { NSLog(@\"Failed to get token, error: %@\", error); } If the token is obtained successfully, there will be output in the following format in the console after running: My token is:&lt;740f4707 bebcf74f 9b7c25d4 8e335894 5f6aa01d a5ddb387 462c7eaf 61bb78ad&gt;</p> </li> </ul> <p>Save the contents of angle brackets for later use</p> <p>Similarly, add the following code to AppDelegate</p> <ul> <li>(void) application:(UIApplication )application didReceiveRemoteNotification:(NSDictionary )userInfo {      if (application.applicationState == UIApplicationStateActive) {          // The program receives push notifications while it is running          NSLog(\"%@\", [[userInfo objectForKey: @\"aps\"] objectForKey: @\"alert\"]);      } else {          //The program receives push notifications when it is running      } } The above code handles how the application receives push notifications in running and inactive states. 3: Download the PHP sample program and set the devicetoken field to the token you just saved. Note that spaces are removed. Set password to 123456abc, set message to what you want to set, save, then enter the php source code path from the command line and run php simplepush.php If your moral character is good enough, your device will immediately make a buzzing sound~ 3: Other things to note 1: You can use the following code to decisively turn on those types of message notifications: UIRemoteNotificationType enabledTypes = [[UIApplication sharedApplication] enabledRemoteNotificationTypes]; if (enabledTypes &amp; UIRemoteNotificationTypeBadge) { //Enable badge number } if (enabledTypes &amp; UIRemoteNotificationTypeSound) { //turn on sound } if (enabledTypes &amp; UIRemoteNotificationTypeAlert) { //turn on alert } 2: It is recommended to use Javapns for the push server. It is very simple to use. Please note that the certificate file used is not pem, but p12 format. The specific generation method is: 1: Generate csr file (same as above) 2: Generate cert file on Apple website through csr (same as above) Three: Double-click the generated cert file to import, select the public key of the csr and the ssl certificate just imported in the keychain, right-click -&gt; export, save as p12 Other processes are similar 3: If you are confident, you can indirectly use the distribution version of the certificate and provision file, but the online server has certain restrictions. If used improperly, it will be banned by Apple. 4: Apple\u2019s push server will return a sending result to the application server. For objects that continue to fail, the application server needs to handle them. 5: The passed message is in json format, and you can add your own fields to it, but again, the total size cannot exceed 256 bytes.</li> </ul>"},{"location":"BLOG/iMessage1/2309/","title":"\u3010Apple pushes iMessage source code\u3011","text":""},{"location":"BLOG/iMessage1/2309/#imessage-apple-push-devicebulk-filtering-out-logs-repository-root","title":"\u3010imessage apple push device\u3011Bulk filtering out logs Repository Root","text":"<p>How to create an APNS certificate in .p12 format on Mac March 2016.</p> <p>This tutorial requires that you use a Mac computer and that you have a valid Apple developer account.</p> <ol> <li>Log in to Apple\u2019s Developer Member Center Open the Safari browser, enter and open this URL in the address bar: https://developer.apple.com/membercenter/index.action, and then log in with your developer account.</li> </ol> <p>Select and click on Certificates, Identifiers &amp; Profiles. After opening, select the All subcategory above the Certificates category in the list on the left, and the following interface will appear:</p> <p>apns-01.png Then click the + icon in the upper right to create a new certificate (shown by the red arrow).</p> <ol> <li>Select the certificate example, Sandbox or Productuon Select the Apple Push Notification service SSL (Sandbox) or Apple Push Notification service SSL (Sandbox &amp; Production) type certificate according to your needs. Then click Inherit. To be careful here, it is very important to choose the correct type of certificate:</li> </ol> <p>A Device Token generated by an App signed with the Development Provisioning Profile can only be used in conjunction with the Sandbox APNS Server (for development environment testing).</p> <p>The Device Token generated by an App signed with AdHoc Provisioning Profile or AppStore Provisioning Profile can only be used in conjunction with Production APNS Server (for production environment publishing).</p> <p>remind: Some users have reported problems when using a two-in-one push certificate (Apple Push Notification service SSL (Sandbox &amp; Production), new) when pushing in a debug test environment.</p> <p>apns-03.png 3.Select your corresponding App ID Conditions: You must first create the App ID used by your App, and select your corresponding App ID in the App ID drop-down option. Click the Continue button to continue.</p> <p>apns-02.png 4. View the relevant step information for creating a certificate signature request Check out information on how to create a CSR file. Click Continue.</p> <p>apns-04.png This page has detailed information on how to create a CSR file step by step. Below we will create a CSR file step by step.</p> <ol> <li>Open the keychain access program Open the Keychain Access App of other groups in Launchpad, which is the keychain access program.</li> </ol> <p>apns-05.png 6. Create a certificate signing request file Click on the Keychain Access program's menu bar Select Certificate Assistant submenu Select Request a Certificate from a Certificate Authority... sub-submenu</p> <p>apns-06.png 7. Fill in the certificate signing request file details Enter your email address. For safety and insurance purposes, it is best to fill in the email address corresponding to your Apple developer account. Then enter a frequently used title. It is better to choose the save to disk option. Finally click Continue.</p> <p>apns-07.png 8. Save the certificate signing request file to disk Select a storage location and enter a file name of your choice Click save</p> <p>apns-08.png 9. Complete the certificate signing request file creation Indirect click complete</p> <p>apns-09.png 10. Upload the correct signature request file Continue back to the browser interface after step 4 Select Choose File... to upload In the pop-up file open dialog box, locate the directory where the certificate signature request file was just stored, and select to open the CSR file. Click to continue</p> <p>apns-10.png 11. Download the certificate file After continuing with the previous step, your certificate should have been generated. Click the download button to download the certificate Open the downloaded certificate file and it will usually be opened automatically using the keychain access program.</p> <p>apns-11.png 12. Find the certificate and private key Find the certificate you just opened and imported in the Keychain Access program Then click the right triangle to expand the certificate and display the corresponding private key.</p> <p>apns-12.png 13. Export private key file Select only the private key department under the corresponding certificate Right click on the private key section Click the Export common names menu in the pop-up selection box</p> <p>apns-13.png 14. Save the exported private key file Select a storage location and enter your preferred private key file name Format selection.p12 format Click to save</p> <p>apns-14.png 15. Configure optional password protection for .p12 files If necessary, you can set a protection password for the stored .p12 file. Then click OK, or click OK without setting a password.</p> <p>apns-15.png Complete merits You now have a file in .p12 format that contains the private key for establishing SSL/TLS secure communication with Apple's APNS server. You can upload the .p12 file to your push server and configure it for use.</p>"},{"location":"BLOG/others/o2301/","title":"iMessage group sending software device","text":"<p>\u3010iMessage? What is Apple Tweet?\u3011 \u3010iM mass deployment, what is Apple push\u3011 \u3010What is Apple Tweet? What is Apple Tweet?\u3011 \u3010Apple Group Send iMessage Apple Push\u3011 \u3010Apple mass-sends iMessage and Apple pushes the photo album to push the SSL certificate files of Development and Production versions APS_DEVELINMENT.CER\u3011 \u3010Apple iMessage family push software installation certificate opens the CSR file in the keychain\u3011 \u3010Encryption certificate settings for strong connection between Apple iMessage family push bulk server and APNs\u3011 \u3010Apple Photo Album push adds family protocol sendmail postfix MDA to indicate its AppID\u3011 \u3010iMessage Apple Home Push Source Code Software Installation Stomp Protocol Configuration Uses IMAP Protocol to Receive Mail\u3011 \u3010Apple's family push for source code tils expansion software installation is probably only available on Apple-specified iOS\u3011 \u3010Apple mass iMessage push location push software installation will follow the Developer Program\u3011 \u3010Apple iMessage photo album push information push is mainly used to install the watchman that must be installed on the back\u3011 \u3010Apple home push iMessage Number is a kind of timely static (Differential Privacy)\u3011 \u3010Apple family group tweets Metal performance shader software installation framework\u3011 \u3010Apple Photo Album promotes iMessage software NSSet setWithArray:product\u3011 \u3010Location push iMessage Apple push software installation AVPlayerItem(URL: movieUrl) player\u3011 \u3010Apple location push iMessage photo album sharing push software installation and uploading to appstore are required activities\u3011 \u3010Apple family group messaging software installs the latest Appletweetios.macosimessage which is used to send Apple text messages\u3011 \u3010Apple Photo Album Apple pushes the newly created private key CSR file Profile which is also divided into development and distribution\u3011 \u3010iMessage Apple Photo Album Calendar Push Location Push Software Installation deviceToken is generated by APNs\u3011 \u3010iMessage Apple push mass-send Apple album push archive to appstore development certificate (Development certificate)\u3011 \u3010iMessage Apple Family Sharing Push Software Device Installation Creation AppleScript Adds iMessage Group Application Will Get a Hardware Token\u3011 \u3010Apple push group iMessage push software installation personalization required height (void) updateListH\u3011 \u3010Apple family push source code uses the new Alloc Replication method to create an object\u3011 \u3010Apple Photo Album pushes iMessage software to install Websocket, which can be used in the browser to support two communications and use it\u3011 \u3010Apple family iMessage push Aupperpushslcertificate or ProductPushsCertificate certificates cannot expire\u3011 \u3010Apple photo album push software installs ipv6 to get ArrayList tmpMacList that can be used by Apple\u3011 \u3010Apple pushes iMessage software installation to control iMessage client through ApplseScript\u3011 \u3010The certificate file downloaded from the certificate just opened in the keychain of Apple\u2019s family group tweeting software\u3011 \u3010Apple Photo Album pushes Xcode project, we named it mypushchat, and debugged iOS devices\u3011 \u3010Apple pushes software to install iOS, local push (Local Push), install OS imessage and faceTime\u3011 \u3010Apple pushes iMessage software to install and create a testvscodedebug\u3011 \u3010Apple pushes iMessageTCP to create a full-duplex communication between two applications\u3011 \u3010Apple sends home push iMessage software installation and utilization data CRC/LRC 1 byte 1 byte N bytes 2 bytes frame structure\u3011 \u3010iMessage software group pushes PEM-I development certificate or issues push certificate \"CMCC\" | The certificate is used to deliver to AppStore\u3011 \u3010Apple Home Push Bulk Apple Push ServerApple Push Imessage SMS Update 3.2 Replace Certificate Connect to\u3011 \u3010Encryption certificate settings for strong connection between Apple iMessage family push bulk server and APNs\u3011 \u3010Apple mass iMessage push location push software installation is built from MSsticBrowserViewController\u3011 \u3010Apple Home Push (AlloCA) function allocates dynamic allocation, but dynamic allocation and stack stack are different\u3011 \u3010iMessage Apple group message location push album push BOOL translucent NS returns to the top of the UINavigationItem control\u3011 \u3010iMessage Apple mass-sending mac address is assembled into String StringBuffer to share photos and share your album\u3011 \u3010Apple launches photo album software iMessage group sending (NSSortDescriptor)\u3011 \u3010Apple family sharing software mass sending Apple script code to implement iMessage mass sending\u3011 \u3010iMessage Apple Photo Album Calendar Push Login to iPhoneDeveloperAppIDS to create an AppID without using wildcards\u3011 \u3010Apple push iMessage group sending Apple photo album push how to use Apple APNS communication? Developers who need servers provided by iOS developers\u3011 \u3010For detailed information on how to install and create a CSR file for the iMessage Apple Home Push source code software, please follow the step-by-step instructions to create a CSR file\u3011 \u3010Apple iMessage Photo Album Promotion Apple Suscitation Apple Suscics Advantages Based on IMessage New Information Promotion\u3011 \u3010Apple home iMessage group tweet software nova\u2019s Apple tweet ios. imessage, a high-end computer host for sending Apple text messages\u3011 \u3010Apple pushes group iMessage to push the configuration of the developer certificate, configure the APPID and push the certificate; select the AppID in the left column\u3011 \u3010Apple Photo Album promotes iMessageProvisioningProfiles and develops promotion certificates for promoting P12 files\u3011 \u3010iMessage Apple group tweets SMUUID BoardSerialNumber and MLB and ROM parameters\u3011 \u3010Apple home push iMessage software keychainBoard Serial Number Board Serial Number is the device serial number generated by your Clover\u3011 \u3010Apple photo album push files will be bound to the iMessage group AppID, developer certificate, software and hardware equipment, and can be added after configuring the developer center\u3011 \u3010iMessage Apple pushes to mass-send SSL certificates and private keys to configure concurrent connections to APNS and allocate push tasks\u3011 \u3010The latest Apple Home Group Push software installed is for sending Apple text messages to a file called \"MyPushChat.\u3011 \u3010Apple Pushes iMessage Bulk IMessage Client Runs Slowly Even If You Can't Change It, You Can Manipulate Empty iMessage\u3011 \u3010The Apple Home Sharing software bulk iMessage hosting app is the iMessageStore app (in the AppStore)\u3011 \u3010iMessage Apple photo album push location push DeRfers to bind all certificate IDs, add SPE CIFIC and other processes such as TEST TE TEING\u3011 \u3010iMessage Apple family push group files will be bound to appid, developer certificate, software and hardware equipment\u3011 \u3010Apple Photo Album Push adds family protocol replacement certificate, it will never connect to Apple Push Server\u3011 \u3010iMessage Apple push mass sending uses the certificate to publish the certificate description file (do not publish) in iOS5 and iOS6, the application will obtain the DeviceToken successively\u3011 \u3010If Apple Photos pushes iMessage repeatedly, the time must be no less than 60s, UNTimeIntervalNotificationTrigger\u3011 \u3010Apple family group tweeting software returns the priority of width, width or height (void)setHoldingPriority\u3011 \u3010Apple pushes iMessage software to install iMessage applications as an extension of regular iOS applications\u3011 \u3010Apple Home recommends iMessage to plan its own server program in accordance with the settings of the HTTP protocol\u3011 \u3010The information push protocols for Apple\u2019s iMessage photo album are ARP protocol (Address Resolve Protocol) and RARP protocol (Reverse Address Resolve Protocol)\u3011 \u3010Apple iMessage pushes software to install Medium Access Control (MAC) \"protocol and incident results related to adaptive clustering\"\u3011 \u3010iMessage Apple Family Push In the first part, the first step is of course to introduce Banana Apple\u2019s push system method (APNS)\u3011 \u3010Apple family push source code Master sends NAN sync beacon and NAN discovery beacon Sync only reports NAN sync beacon Normal in DW\u3011 \u3010iMessage Apple group tweet album push X code template. Fortifications created using this method also have the Messgaeextension folder\u3011 \u3010Apple Group iMessage Push Location Push FPS\" or \"FairPlayStreaming\" refers to the FairPlayStreamingServer key transfer mechanism described in FPSSDK\u3011 \u3010Apple iMessage photo album push ApplePayPayload\u201d refers to the use of AppleSoftware and ApplePayapi\u3011 \u3010Apple Home Push (Agreement) Additional Terms for Safari Extension apple_Developer_Program_License_Agreement_2\u3011 \u3010I usually call PP documents when pushing iMessage from Apple Photo Album, which will be bound to AppID, developer certificate, and software equipment\u3011 \u3010All apps that use the iOS13 SDK for Apple\u2019s family group tweets will have to provide LaunchScreen, and LaunchImage will soon withdraw from the stage of history\u3011 \u3010Apple pushes group iMessage push to check heapster\u2019s pod starting environment sope-MacBook\u3011 \u3010iMessage Apple push group push soft certificate developer processing processor development Successfully loaded plugin Apple certificate\u3011 \u3010Apple photo album push sharing push is completed using PushMebaby push service, (BOOL)splitView: (NSSplitView *) serial number must comply with its original space\u3011 \u3010Apple Home Sharing Bulk Sending Software implements iMessage bulk sending APS_Production.CER from Apple Developer\u3011 \u3010Apple iMessage push imessage software installs Websocket or friend alliance to establish connection and receive messages\u3011 \u3010The apns device token corresponding to the Development and Production versions of the Apple Family Push (AlloCA) function allocation is different\u3011 \u3010Apple mass-sending imessage location push album push BOOL translucent NS studies the public api in the Message framework in the iOS system, and conducts research through the private api to conduct manual selection\u3011 \u3010Apple Photo Album pushes iMessage ApplePayPayload. Click the + number icon in the upper right to create a certificate (shown in the red arrow)\u3011 \u3010Apple's family push source code SaveFordevelopmentEdent will be used for testing, mainly for developers' devices (developer accounts) UDID)\u3011 \u3010Apple's iMessage client runs slowly. When you use the new Alloc Replication method to create an object, the object's retention timer is saved as\u3011 \u3010iMessage Apple Photo Album push message push multiple applications on the device generated by Apple DeviceToken. public void subscribe(int clientId, Looper looper\"\u3011 \u3010Push location Apple group iMessage push If Windows and Linux implement different transport layer protocols, then because of the different data formats\u3011 \u3010iMessage Apple source code family push tils extension software installation or release events are caused by programmers, and it is easy to cause MemoryLeak control\u3011 \u3010Apple pushes iMessage to send the overrideUserInterfaceStyle attribute to the view and its subviews with a specific UIUserInterfaceStyle\u3011 \u3010Apple iMessage Family Sharing promises to limit the user's ability to drag the divider (CGFloat)splitView:(NSSplitView *)splitView\u3011 \u3010Apple shared push album push uses PushMebaby to push and click a in the organizer\u3011</p>"},{"location":"BLOG/others/others/","title":"Other blog links","text":"<ul> <li>[iMessage? What is Apple Tweet?]</li> <li>[iM mass deployment, what is Apple push]</li> <li>[What is Apple Push? What is Apple Push?]</li> </ul>"},{"location":"ESSAY/","title":"Article","text":"<p>Here is the iMessage Apple group sending device. If you are interested please contact [ \u2708\ufe0f@IMEAX ] directly to view the latest video</p> <p>iMessage Apple push group sending/iMessage Apple group sending software equipment/real machine group control push source code/iMessage Apple push message group sending software/Apple iMessage push/Apple photo album push/Apple family push/Apple calendar push/Apple push imessage group sending device</p> <p>     \ud83d\udd17\u3010\u2764\ufe0fClick for consultation \u2764\ufe0f\u3011View the latest video \ud83d\udd0e"},{"location":"ESSAY/Articles/What%20is%20IM%20push%20imessage%20group%20control%20push/","title":"What is IM push imessage group control push","text":""},{"location":"ESSAY/Articles/What%20is%20IM%20push%20imessage%20group%20control%20push/#what-is-im-push-imessage-group-control-pushdevice-token-the-push-response-will-include-the-device-token-of-the-successfully-sent-push-message-this-can-help-you-determine-which-device-received-the-push-message","title":"\u3010What is IM push imessage group control push\u3011Device Token: The push response will include the device token of the successfully sent push message. This can help you determine which device received the push message.","text":"<p>Apple Calendar Bulk Deployment Sets up a push server. A push server is used to send push notifications to devices using the Apple Calendar application. The push server needs to be able to communicate with Apple Push Notification Service (APNs). How to do it?</p> <p>Deployment Setting up a push server and communicating with APNs requires the following steps:</p> <p>Get APNs certificate: In your Apple developer account, create an App ID for push notifications and generate an APNs certificate for it. This certificate will be used to establish a secure connection with APNs to ensure secure transmission of push notifications.</p> <p>Person person; person.set_name(\"John Doe\"); person.set_id(1 fstream output(\"myfile\", ios::out | ios::binary); person.SerializeToOstream(&amp;output);</p> <p>Then, you can read the data in the message:</p> <p>fstream input(\"myfile\", ios::in | ios::binary); Person person; person.ParseFromIstream(&amp;input); cout &lt;&lt; \"Name: \" &lt;&lt; person.name() &lt;&lt; endl; cout &lt;&lt; \"E-mail: \" &lt;&lt; person.email() &lt;&lt; endl;</p> <p>You can add fields to the data structure at will without affecting backward compatibility. During deserialization, the old data will ignore the new fields. So if you use ProtocolBuffer as the communication protocol, you can extend the protocol without worrying about breaking existing code.</p> <p>You can find a complete reference in the API reference (https://developers.google.com/protocol-buffers/docs/reference/overview), and the message format encoding of ProtocolBuffer can be found in (https://developers. Reference found at google.com/protocol-buffers/docs/encoding ).</p> <p>Why not use XML?</p> <p>ProtocolBuffer has a number of features that are more advanced than XML for serializing structured data. ProtocolBuffer:</p> <p>\u00b7 simpler</p> <p>\u00b7 3-10 times smaller</p> <p>\u00b7 20-100 times faster</p> <p>\u00b7 Less ambiguity</p> <p>\u00b7 Can easily generate data access classes</p> <p>For example, let's see how to model the Person's name and email fields in XML:</p> <p> <p>Configure push notification service: In your push server, configure the APNs certificate and key to ensure that a secure connection can be established with APNs. The push server needs to be able to send HTTP/2 requests to the APNs server.</p> <p>Get device identifier (Device Token): In your mobile app, when a user opens the app for the first time, register for push notifications and obtain the device\u2019s device identifier (Device Token). Send these device identifiers to your push server so the server knows which devices to send notifications to.</p> <p>Build push notification: In your push server, build the push notifications you want to send. Push notifications should contain information about the calendar event such as title, time, location, etc. Make sure to build notifications according to APNs specifications.</p> <p>Send push notification: Push notifications are sent to the APNs server along with the device identifier using the HTTP/2 interface provided by APNs. APNs forwards push notifications to the appropriate device.</p> <p>Handle push notifications: On the user's iOS device, the Apple Calendar app will receive the push notification and trigger the appropriate handler when the notification is received to display the notification in the calendar.</p> <p>It should be noted that the push server is not the Apple Calendar application itself, but the server-side application you develop yourself. You need to develop an application on the server side that receives event data to be pushed and communicates with APNs to send push notifications.</p> <p>When developing a push server, you can choose to use the APNs HTTP/2 interface provided by Apple or a third-party push service provider to simplify the integration process of push notifications. Some popular third-party push service providers include OneSignal, Firebase Cloud Messaging, etc.</p> <p>To summarize, deploying and setting up a push server requires configuring APNs certificates, enabling secure communication with APNs, obtaining device identifiers, building and sending push notifications, and processing received push notifications on iOS devices. This requires corresponding knowledge of backend development and mobile application development, as well as understanding of APNs.</p>"},{"location":"ESSAY/Jottings/0/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/0/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/0/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/16/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/16/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/16/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/17/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/17/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/17/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/1801-1806/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/1801-1806/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/1801-1806/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/1807-1812/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/1807-1812/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/1807-1812/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/1906-1912/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/1906-1912/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/1906-1912/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2001-2002/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2001-2002/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2001-2002/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2003-2004/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2003-2004/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2003-2004/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2005-2006/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2005-2006/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2005-2006/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2007-2008/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2007-2008/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2007-2008/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2009-2010/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2009-2010/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2009-2010/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2011-2012/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2011-2012/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2011-2012/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2101-2102/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2101-2102/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2101-2102/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2103-2104/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2103-2104/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2103-2104/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2105-2106/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2105-2106/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2105-2106/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2107-2108/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2107-2108/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2107-2108/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2109-2110/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2109-2110/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2109-2110/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2111-2112/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2111-2112/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2111-2112/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2201-2202/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2201-2202/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2201-2202/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2203-2204/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2203-2204/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2203-2204/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2205-2206/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2205-2206/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2205-2206/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2207-2208/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2207-2208/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2207-2208/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2209-2210/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2209-2210/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2209-2210/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2211-2212/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2211-2212/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews# Notes | IMESSAGE</p>"},{"location":"ESSAY/Jottings/2211-2212/#230302","title":"230302","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2301/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2301/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2302/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2302/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2303/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2303/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2304/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2304/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2305/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2305/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2306/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2306/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/2307/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/2307/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"ESSAY/Jottings/230822/","title":"Take notes| IMESSAGE","text":""},{"location":"ESSAY/Jottings/230822/#230301","title":"230301","text":"<p>IMessage1{@Override public void print()</p> <p>importsys print(sys.executable)</p> <p>{System.out.println(this.getClass(this.getClass( ) ) .GetName());}} public static void main(String [] args)</p> <p>{IMessage1 iMessage = new MessageImpl1(); iMessage.print(); iMessage.getMsg();</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ javac -version</p> <p>javac 9.0.1</p> <p>MacBookPro:jdk-9.0.1.jdk tony$ java -version</p> <p>java version \"9.0.1\"</p> <p>Java(TM) SE Runtime Environment (build 9.0.1+11)</p> <p>Java HotSpot(TM) 64-Bit Server VM (build 9.0.1+11, mixed mode)</p> <p>MacBookPro:jdk-9.0.1.jdk tony$</p> <ol> <li> <p>To use Apple's delivery service, you need to pay attention to the following: IMessage1.getMss();</p> </li> <li> <p>Package Overview 2.1 Introduction How to package an Apple program 1) Save it locally and prepare to upload to the App Store, or use it on a jailbroken iOS device 2)</p> </li> </ol> <p>Save it locally and add the application package through the account by publishing the certificate, ready to be used on the device (developer account added device). // It is recommended to add a marking interface, and the interface and class definition must be consistent</p> <p>IMessage {public static final String MSG = \"You will know after one issue of baidu\"; public abstract void print();</p> <p>// Ambiguous method} Interface INews {public abstract String get();} MessageImpl class IMessage. INews {public void print() {System.out.println(\"Stamping method in IMessage: \" + IMessage .MSG);} public String get() {return \"INews</p>"},{"location":"IM%20group%20control/","title":"IM group control","text":"<p>Here is the iMessage Apple group sending device. If you are interested please contact [ \u2708\ufe0f@IMEAX ] directly to view the latest video</p> <p>iMessage Apple push group sending/iMessage Apple group sending software equipment/real machine group control push source code/iMessage Apple push message group sending software/Apple iMessage push/Apple photo album push/Apple family push/Apple calendar push/Apple push imessage group sending device</p> <p>     \ud83d\udd17\u3010\u2764\ufe0fClick for consultation \u2764\ufe0f\u3011View the latest video \ud83d\udd0e"},{"location":"IM%20group%20control/IMQK1/IM2301/","title":"\u3010IM Apple launches iMessage\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2301/#apples-real-machine-push-automatically-assigns-tasks-automatically-assigns-tasks-allowing-you-to-target-mid-to-high-end-customers","title":"\u3010Apple's real machine push automatically assigns tasks, automatically assigns tasks, allowing you to target mid-to-high-end customers\u3011","text":"<p>In practice, you'll need to adjust accordingly based on the programming language and libraries you use.</p> <p>Establish a connection to APNs: Use Python's http2 library to establish connections to APNs. First, you need to prepare your certificate and key. Ns (Apple Push Ontification service) service is the core of remote notification. The service is sound, secure, and efficient, and developers can easily push notifications to iOS tvOS macOS terminal devices.</p> <p>When the application runs on the user device, a secure data exchange connection is established between the user device and APNs. The application receives notifications through this connection. explained in the following section It is configured and deployed by you, and you need to write the server-side functions. The following figure shows the delivery process of remote notification:</p> <p>When the server and mobile application are configured, the server can send push requests to APNs. APNs receives and sends corresponding notification information to each target setting. After the terminal device (iOS macOS tvOS) receives the notification, the system delivers the information to your application and manages the user's interaction with the notification.</p> <p>The quality of service component of APNs can implement the function of storing and then sending. When APNs sends a notification to an offline device, APNs stores the notification (for a certain period of time) and delivers it to the device when the device comes online. This storage function only stores the most recent notifications for an app on a device. If the device is offline, sending a notification to the device will clear the previously stored notification. If a device is offline for too long, all stored notifications sent to the device will be dismissed.</p>"},{"location":"IM%20group%20control/IMQK1/IM2301/#include","title":"include  <p>python Copy code import http2 import ssl</p> <p>apns_host = \"api.push.apple.com\" apns_port = 443 certificate_path = \"/path/to/your/certificate.pem\" private_key_path = \"/path/to/your/private-key.pem\"</p> <p>ssl_context = ssl.SSLContext(ssl.PROTOCOL_TLS_CLIENT) ssl_context.load_cert_chain(certfile=certificate_path, keyfile=private_key_path)</p> <p>connection = http2.connect(apns_host, apns_port, ssl_context=ssl_context) Create a push request: Create a push notification in JSON format and send it to APNs using the established connection.</p> <p>python Copy code import json</p> <p>device_token = \"your-device-token\" notification = {      \"aps\": {          \"alert\": {              \"title\": \"Your Title\",              \"body\": \"Your Message\"          },          \"sound\": \"default\",          \"badge\": 1</p> <p>headers = {      \":method\": \"POST\",      \":scheme\": \"https\",      \":path\": f\"/3/device/{device_token}\",      \"authorization\": f\"bearer {bearer_token}\", # Your bearer token      \"content-type\": \"application/json\",      \"apns-push-type\": \"alert\" }</p> <p>stream = connection.request(headers, body=json.dumps(notification)) Handling push responses: Process the results of the push by reading the response returned from APNs.</p> <p>python Copy code response = connection.get_response(stream)</p> <p>if response.status == 200:      print(\"Push notification successfully sent\") else:      print(f\"Failed to send push notification. HTTP status: {response.status}\") This example shows how to use the http2 library in Python to establish a connection to APNs, create push requests, and handle push responses. But please note that this is a simplified example. In actual applications, you may need to deal with more details, such as error handling, retry mechanism, etc.</p> <p>For complete code examples and more details, you may want to consult APNs' official documentation and related development resources to ensure your implementation is accurate and secure.</p> <p>Also, please note that I can't provide full code and pictures here, but hopefully this example will help you better understand the process of connection establishment with APNs, push request creation, and push response processing.</p>","text":""},{"location":"IM%20group%20control/IMQK1/IM2302/","title":"\u3010Apple mass iMessage Apple push\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2302/#apple-mass-imessage-apple-pushthe-album-recommends-two-versions-of-development-and-production-aps_develinmentcer-ssl-certificate-files","title":"\u3010Apple mass iMessage Apple push\u3011The album recommends two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files","text":"<p>The stack and some variables, but there is no separate address space between threads, and the thread has died. It is the entire process, so a multi-process program is more powerful than a multi-threaded program, but it costs money in the process. The capital is very large and the efficiency is poor. However, for some requests, you can only take advantage of concurrent manipulation of certain variables. 4. What is the difference between warehouse and overlay? Solution: For the stack, it is automatically managed by the compiler. There is no need to control it; for the heap, the release event is under the control of the programmer and it is easy to generate a MemoryLeak. Application size: Stack: Under Windows, the stack is a data structure that extends to a low address, which is a continuous memory area.</p> <p>This sentence means that the address of the stack and the maximum capacity of the stack are pre-specified by the system. Under Windows, the stack size is 2M (1M for more statements), which sums up the constant size when the stack size is limited to the useful virtual memory in the computer system. It can be seen that the resulting space is flexible and it is relatively large. class Person() {</p> <pre><code> /*Attributes*/\n\n private var gender: Boolean = true\n\n\n\n /*Construction method*/\n\n constructor(name: String, gender: Boolean) : this() {\n\n     println(\"constructor\")\n\n }\n\n\n\n companion object {\n\n     val instance = Person(\"yzq\", false)\n\n\n\n\n\n     /*Initialization code in companion tool*/\n\n     init {\n\n         println(\"companion init 1\")\n\n     }\n\n\n\n     init {\n\n         println(\"companion init 2\")\n\n     }\n\n }\n\n\n\n /*Initialization code block*/\n\n init {\n\n     println(\"Person init 2,gender:${gender}\")\n\n }\n\n\n\n /*Initialization code block*/\n\n init {\n\n     println(\"Person init 1\")\n\n }\n</code></pre> <p>}</p> <p>Fragmentation problem: For piles, frequent new/deletion will inevitably lead to discontinuous memory space, resulting in a large amount of fragmentation, which reduces program efficiency. For the stack, there is no such problem, because the stack is the first queue, it is one of them, so it will never have the memory block from the center of the stack.</p> <p>Assignment: The heap is allocated dynamically, there is no dynamic allocation of the stack. There are two paradigms of allocation: static allocation and dynamic allocation. Static allocation is a compiler implementation, such as deflection variables. The AlloCA function allocates dynamic allocation, but dynamic allocation and stack stack are different. Its dynamic allocation is announced by the compiler without implementing it.</p> <p>Allocation efficiency: The stack is a data structure provided by the machine system. The computer provides support in the underlying stack: it allocates the address of the stack, the stack within the stack has special instructions, and the instructions determine the efficiency of the stack. . The stack is provided by the C/C++ function library, and its mechanism is very complex. 5. Object-c memory management? When you use the new Alloc Replication method to create an object, and the object's save count has a retention counter value of 1 and is configured for automatic release, you do not need to perform any operations to ensure that the object is destroyed. If it completes during this object, you need to save it and ensure that the operation completes. If you have retained objects, you need to (Ultimately) release or autorelease the objects. You must keep the number of reserved methods and usage methods.</p>"},{"location":"IM%20group%20control/IMQK1/IM2303/","title":"\u3010Apple iMessage family recommendation\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2303/#apple-imessage-family-recommendationpush-the-software-installation-certificate-to-open-the-csr-file-in-the-keychain","title":"\u3010Apple iMessage family recommendation\u3011Push the software installation certificate to open the CSR file in the keychain","text":"<p>The iPhone \"even if the device on the system doesn't work\" analysis and resolution seems to just hit the original iPhone. I usually like to take iPhone photos, so I back up my iPhone photos, so I back up my computer's hard drive. Three months. However, it often encounters some unexplainable problems. If the iOS system is closed, it will be too annoying, especially if it is new. Currently, the new photo and video format is expected to be introduced. Let me talk about my resume and ultimate solution.</p> <p>I entered the computer on iPhone</p> <p>iPhone connects to the system on the system without playing a role</p> <p>Once logged in, you will be able to copy photos. But then \"even the devices on the system\" are the following:</p> <p>iPhone connected to system on system without playing angle</p> <p>After collecting the iPhone data cable many times, then you cannot display the icon in the explorer and you cannot enter a copy of the copy. Restarted the computer, no use; finished iTunes, restarted the computer, still no use. But when I try plugging it in with another iPhone, the icon under \"Portable Devices\" goes up, fixing the computer or route issue, and it's fine and weird. So restart your iPhone, then plug it into your computer and it's fine.</p> <p>Both Development Push SSLCertificate and Production Push SSL Certificate are outdated. The Development Push SSL Certificate is valid for about four months (later it seems to have been changed to one year), while the ProductionPush SSL Certificate is valid for one year. Be careful to generate a new certificate before expiration to avoid affecting use. The official website can configure two devices at the same time. When the first one is about to expire, generate the second one, then replace the server certificate, and delete the first certificate configuration after the second one has been used for a week without any problems.</p> <p>openssl pkcs12 -clcerts -nokeys -out apns-dev-cert.pem -in apns-dev-cert.p12</p> <p>openssl pkcs12 -nocerts -out apns-dev-key.pem -in apns-dev-cert.p12</p> <p>openssl rsa -in apns-dev-key.pem -out apns-dev-key-noenc.pem import hljs from 'highlight.js' //Import code highlighting file</p> <p>import 'highlight.js/styles/monokai-sublime.css' //Import code highlight style</p> <p>cat apns-dev-cert.pem apns-dev-key-noenc.pem &gt; apns-dev.pem</p> <p>Original link: But the problem of copying photos and videos still exists. Later, a reminder will appear: even the devices on the system do not play the character. Then the copy was interrupted, I don't know how many times it was copied, which was very troublesome. Retreating, the problem is still that it does not seem to be a single environment, the problem always exists. Search online, many problems, inventions and solutions Name</p> <pre><code>RemoveCommentedCodeRule\n</code></pre> <p>Severity</p> <pre><code>Major\n</code></pre> <p>Message</p> <pre><code>Live liquidation of code snippets or configuration information that are no longer used.\n</code></pre> <p>Description</p> <pre><code>Explanation: For junk code or outdated configuration, clean it resolutely to avoid overly obese programs and redundant code.\n</code></pre> <p>Examples</p> <p>Positive example: For codes which are temporarily removed and likely to be reused, use /// to add a reasonable note.</p> <p>public static void hello() {</p> <pre><code> /// Business is stopped temporarily by the owner.\n\n // Business business = new Business();\n\n // business.active();\n\n System.out.println(\"it's finished\");\n</code></pre> <p>}</p> <p>Systems after iS11 will have this problem. Because iOS11 adds compressed format. Photos and videos are captured in the new format by default. If you're not mistaken, it's called HEVC. Thanks to the new format, the volume of shots and videos can be significantly reduced. When using a data cable to a computer, the format is automatically converted to the computer. Therefore, the exit speed is very slow. That's why copies will be made from image and video volumes.</p> <p>Solution, Input, Camera, Format, select \"Compatibility\", the default value is Efficient, select compatibility videos and images without using the new format, inherit the old MPEG format. Exporting videos and images will not convert formats and will have the above prompts.</p> <p>Or, enter \"Set Photos\", see bottom and change \"Automatic\" to \"Link to original photo\". You can also avoid copy errors. Due to the change, the format will not be converted and the new format file will be copied indirectly. Once you see that, I see that your computer CPU is not giving power so the new format is decoding CPU decoding efficiency.</p> <p>My approach was to change \"Compatibility\" with the format and then move to \"Saving Original Photos\", which solved the problem.</p>"},{"location":"IM%20group%20control/IMQK1/IM2304/","title":"\u3010Apple group sending iMessage push location push\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2304/#imessage-apple-push-group-sendingapple-photo-album-pushes-archive-to-appstore-development-certificate-development-certificate","title":"\u3010iMessage Apple push group sending\u3011Apple Photo Album pushes archive to appstore development certificate (Development certificate)","text":"<p>public static String getMacAddress(</p> <p>/One thing to note when getting the mac address is that after the Android 6.0 version, the following explanation method is no longer applicable. Any mobile phone will return the default mac address \"02:00:00:00:00:00\". This It is Google officials who disabled the getSYstemService(Context.WIFI_SERVICE) method to obtain the mac address in order to enhance permission management. /</p> <p>// String macAddress= \"\";</p> <p>// WifiManager wifiManager = (WifiManager) MyApp.getContext().getSystemService(Context.WIFI_SERVICE);</p> <p>// WifiInfo wifiInfo = wifiManager.getConnectionInfo();</p> <p>// macAddress = wifiInfo.getMacAddress();</p> <p>// return macAddress;</p> <p>iMessage is a newly launched APPEXtension in iOS10. It can add our own content to system application messages, send them to friends, and even operate with your friends in the same message. This article mainly discusses how to quickly integrate emoticons in iMessage. APPEXTENSION and host APP have their own independent spaces, so IMessageExtension can also exist alone, or it can be packaged with the host APP and uploaded to the same project, and users can download iMessageApp (Download) or host App in iMessagestore) Or after the host App (in the AppStore) is downloaded, another one will be automatically downloaded. 1. Templates utilizing X code IMESSAGEEXTENSITION IMESSAGESDK have been integrated in iOS10, so the required X code version must be X-Code8+. Select File-&gt;New-&gt;Project-&gt;Application-&gt;StickerPackApplication as shown: When finished, the project layout is very simple and has no classes, so we don't need to write any code. All we need to do is put a photo. As shown in the figure: In the stickers.xcstickers file, add iMessageAppicon according to the image size, which is the icon displayed in iMessageStore. Then add the emoji image to the STICKERPACK. It should be noted that officials have previously proposed changes to emoji sizes. Details below:</p> <p>, rge.206x206points@3x (618x618 pixels). Additionally, if only @3x is provided, the system will automatically generate @2x and @1x. 2. Custom tags If the template provided by X code cannot meet our needs, you can use a custom mode. Compared to the X code template, select \"File\" -&gt; \"New\" -&gt; \"Project\" -&gt; \"Application\" -&gt; \"iMessageApplication\". Projects built using this method also have a folder called MessgaeExtension. But there is no StickerPack folder in Assets.xcassets. So if you use custom tags, you don't need to add emoticons in Assets.xcassets. You can put resource files into our project. Just one MessageViewControlle is not enough. Custom stickers require MSStickerBrowserViewController, and our resource files are also loaded through this class. You can think of MessageViewControlle as a ViewControlle and MSStickerBrowserViewController as a UITableViewController. Therefore, we need to create a view controller that inherits from MSStickerBrowserViewController and if its name is: MyStickerBrowserViewController#import @</p> <p>interfaceMyStickBrowserViewController: MSStickerBrowserViewController // Handy protocol @property (non-atomic, strong) NSMutableArray * dateArray; // Data source data @ end12345678 Check this protocol: - (NSInteger) numberOfStickersInStickerBrowserView: (MSStickerBrowserView ) stickerBrowserView; - (MSSticker ) stickerBrowserView: (MSStickerBrowserView ) stickerBrowserViewstickerAtIndex: (NSIntegerSource) index; 1234 is similar in principle. Below we just need to load the local expression resource: - (void) loadView {[superloadView]; self.dateArray = [NSMutableArrayarray]; self.stickerBrowserView.dataSource = self; for (inti = 1; i&lt;TOTAL_STICKER; i++) {NSString nameStr = [NSStringstringWithFormat:@\"bh_%d\",i]; NSURL url = [[NSBundlemainBundle] URLForResource:nameStrwithExtension:@\"png\"]; MSSticker sticker = [[MSStickeralloc] initWithContentsOfFileURL:urllocalizedDescription:@\" \"Problem</p> <p>:None]; [self.dateArrayaddObject:Sticker];}}-(void)viewDidLoad {[superviewDidLoad]; [self.stickerBrowserViewreloadData]; //Data source has been loaded, innovative interface [This is just a demonstration, the actual loading process is in progress data, you can start sub-threads for disposal as needed]) 123456789101112131415415171171819 Complete Protocol - (NSInteger) numberOfStickersInStickerBrowserView: (MSStickerBrowserView ) StickerBrowserView {returnself.dateArray.count;} - (MSSticker )</p> <p>stic</p> <p>kerBrowserstickerView: (MSSticker ) stickerBrowserstickerView: (MSSticker )) stickerAttickerIndex index {MSSticker * sticker = self.da teArray [index]; 123456789 The last part, we just put the created MyStickerBrowserViewController into the MessageViewController. self.stickBrowserViewController = [[[MyStickBrowserViewControlleralloc] initWithStickerSize:MSStickerSizeSmall]; [selfaddChildViewController:self.stickBrowserViewController]; [self.viewaddSubview:self.stickBrowserViewController.view]; 12345, you can see the emoji we created in the message. In addition: If you want to integrate iMessage into an existing project, please select File-&gt;New-&gt;Target-&gt;iMessageExtension **, as shown in the figure: other operations are the same as above.</p> <pre><code>    String macAddress = null;\n\n     StringBuffer buf = new StringBuffer();\n\n     NetworkInterface networkInterface = null;\n\n     try {\n\n         networkInterface = NetworkInterface.getByName(\"eth1\");\n\n         if (networkInterface == null) {\n\n             networkInterface = NetworkInterface.getByName(\"wlan0\");\n\n         }\n\n         if (networkInterface == null) {\n\n             return \"02:00:00:00:00:02\";\n\n         }\n\n         byte[] addr = networkInterface.getHardwareAddress();\n\n         for (byte b : addr) {\n\n             buf.append(String.format(\"%02X:\", b));\n\n         }\n\n         if (buf.length() &gt; 0) {\n\n             buf.deleteCharAt(buf.length() - 1);\n\n         }\n\n         macAddress = buf.toString();\n\n     } catch (SocketException e) {\n\n         e.printStackTrace();\n\n         return \"02:00:00:00:00:02\";\n\n     }\n\n     return macAddress;\n\n }\n</code></pre>"},{"location":"IM%20group%20control/IMQK1/IM2305/","title":"\u3010What is IM push and iMessage group control push\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2305/#what-is-im-push-and-imessage-group-control-pushdevice-token-the-push-response-will-include-the-device-token-for-which-the-push-message-is-successfully-sent-this-can-help-you-determine-which-device-received-the-push-message","title":"\u3010What is IM push and iMessage group control push?\u3011Device Token: The push response will include the device token for which the push message is successfully sent. This can help you determine which device received the push message.","text":"<p>The stack and some variables, but there is no separate address space between threads, and the thread has died. It is the entire process, so a multi-process program is more powerful than a multi-threaded program, but it costs money in the process. The capital is very large and the efficiency is poor. However, for some requests, you can only take advantage of concurrent manipulation of certain variables. 4. What is the difference between warehouse and overlay? Solution: For the stack, it is automatically managed by the compiler. There is no need to control it; for the heap, the release event is under the control of the programmer and it is easy to generate a MemoryLeak. Application size: Stack: Under Windows, the stack is a data structure that extends to a low address, which is a continuous memory area.</p> <p>This sentence means that the address of the stack and the maximum capacity of the stack are pre-specified by the system. Under Windows, the stack size is 2M (1M for more statements), which sums up the constant size when the stack size is limited to the useful virtual memory in the computer system. It can be seen that the resulting space is flexible and it is relatively large.</p> <p>static int macvlan_queue_xmit_v2(struct sk_buff skb, struct net_device dev)</p> <p>{</p> <pre><code>     const struct macvlan_dev *vlan = netdev_priv(dev);\n\n     const struct macvlan_port *port = vlan-&gt;port;\n\n     const struct macvlan_dev *dest;\n\n\n\n     if (vlan-&gt;mode == MACVLAN_MODE_BRIDGE) {\n\n             const struct ethhdr *eth = (void *)skb-&gt;data;\n\n\n\n             /* send to other bridge ports directly */\n\n             if (is_multicast_ether_addr(eth-&gt;h_dest)) {\n\n                     struct sk_buff *nskb;\n\n                     macvlan_broadcast(skb, port, dev, MACVLAN_MODE_BRIDGE);\n\n                     nskb = skb_clone(skb, GFP_ATOMIC);\n\n                     if (likely(nskb)) {\n\n                             nskb-&gt;dev = vlan-&gt;lowerdev;\n\n                             // Also inject one copy into the physical network card.\n\n                             dev_forward_skb(vlan-&gt;lowerdev, nskb);\n\n                     }\n\n                     goto xmit_world;\n\n             }\n\n\n\n             dest = macvlan_hash_lookup(port, eth-&gt;h_dest);\n\n             if (dest &amp;&amp; dest-&gt;mode == MACVLAN_MODE_BRIDGE) {\n\n                     /* send to lowerdev first for its network taps */\n\n                     dev_forward_skb(vlan-&gt;lowerdev, skb);\n\n\n\n                     return NET_XMIT_SUCCESS;\n\n             }\n\n             // If the target MAC belongs to the physical network card, inject it into the host physical network card.\n\n             else /*if (!compareMacs(eth, vlan-&gt;lowerdev))*/{\n\n                     struct sk_buff *nskb;\n\n                     nskb = skb_clone(skb, GFP_ATOMIC);\n\n\n\n                     if (likely(nskb)) {\n\n                             nskb-&gt;dev = vlan-&gt;lowerdev;\n\n                             dev_forward_skb(vlan-&gt;lowerdev, nskb);\n\n                     }\n\n             }\n\n     }\n</code></pre> <p>xmit_world:</p> <pre><code>     skb-&gt;dev = vlan-&gt;lowerdev;\n\n     return dev_queue_xmit(skb);\n</code></pre> <p>}</p> <p>Fragmentation problem: For piles, frequent new/deletion will inevitably lead to discontinuous memory space, resulting in a large amount of fragmentation, which reduces program efficiency. For the stack, there is no such problem, because the stack is the first queue, it is one of them, so it will never have the memory block from the center of the stack.</p> <p>Assignment: The heap is allocated dynamically, there is no dynamic allocation of the stack. There are two paradigms of allocation: static allocation and dynamic allocation. Static allocation is a compiler implementation, such as deflection variables. The AlloCA function allocates dynamic allocation, but dynamic allocation and stack stack are different. Its dynamic allocation is announced by the compiler without implementing it.</p> <p>Allocation efficiency: The stack is a data structure provided by the machine system. The computer provides support in the underlying stack: it allocates the address of the stack, the stack within the stack has special instructions, and the instructions determine the efficiency of the stack. . The stack is provided by the C/C++ function library, and its mechanism is very complex. 5. Tool-c memory management? When you use the new Alloc Replication method to create an object, and the object's save count has a retention counter value of 1 and is configured for automatic release, you do not need to perform any operations to ensure that the object is destroyed. If it completes during this object's time, it is necessary to retain it and ensure that the operation completes. If you have retained objects, you need to (Ultimately) release or autorelease the objects. You must keep the number of reserved methods and usage methods.</p>"},{"location":"IM%20group%20control/IMQK1/IM2306/","title":"\u3010IM group sending push software\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2306/#im-group-sending-push-softwarecalendar-push-filtering-protocols-with-apns-should-be-based-on-your-needs-technology-stack-and-development-environment","title":"\u3010IM group sending push software\u3011Calendar push filtering protocols with APNs should be based on your needs, technology stack, and development environment","text":"<p>AppID mainly has the following contents: 1), ExplicitAppID: a unique AppID. This AppID is used for a unique identity application, such as com.wzc.demo, which identifies the bundleid of com.wzc.demo. 2), WildCardAppID: Wildcard AppID, used to identify a group of applications. For example, * could represent all applications and com.wzc. *You can represent all applications starting with com.wzc. When creating an AppID, we can configure the AppService used by the AppID. Each service has different requirements. For example, if you want to use ApplePushnotificationservices, it must be ExplicitAppID to uniquely identify the application. Below are the currently available optional services and corresponding configuration requirements. If your application uses any of the above services, it must be configured as necessary. 1.3, DeviceVices includes all devices that can be developed and tested in the account. Each device is uniquely identified using UDID. Number of devices per account is 100. 1.4,</p>"},{"location":"IM%20group%20control/IMQK1/IM2306/#include","title":"include <p>const char* id=\"wifi name\"; //Constant definition</p> <p>const char* psw=\"wifi password\";</p> <p>String transEncryptionType(wifi_auth_mode_t encryptionType){ //Compare the encryption type of the wifi network and return the corresponding String value</p> <p>switch(encryptionType){</p> <pre><code>   case (WIFI_AUTH_OPEN):\n\n     return \"Open\";\n\n   case (WIFI_AUTH_WEP):\n\n     return \"WEP\";\n\n   case (WIFI_AUTH_WPA_PSK):\n\n     return \"WPA_PSK\";\n\n   case (WIFI_AUTH_WPA2_PSK):\n\n     return \"WPA2_PSK\";\n\n   case (WIFI_AUTH_WPA_WPA2_PSK):\n\n     return \"WPA_WPA2_PSK\";\n\n   case (WIFI_AUTH_WPA2_ENTERPRISE):\n\n     return \"WPA2_ENTERPRISE\";\n\n   default:\n\n     return(\"Unkonwn EncryptionType\");\n</code></pre> <p>}</p> <p>}</p> <p>void scanNetworks(){ //Scan the surrounding wifi networks, display the number of wifi, and print their attributes (ssid, signal strength, encryption method, mac location)</p> <p>int numberOfNetworks= WiFi.scanNetworks();</p> <p>Serial.print(\"The number of networks found is:\");</p> <p>Serial.println(numberOfNetworks);</p> <p>for(int i=0;i&lt;numberOfNetworks;i++){</p> <pre><code> Serial.print(\"Networkname: \");\n\n Serial.println(WiFi.SSID(i));\n\n Serial.print(\"Signalstrength: \");\n\n Serial.println(WiFi.RSSI(i));\n\n Serial.print(\"MACaddress: \");\n\n Serial.println(WiFi.BSSIDstr(i));\n\n Serial.print(\"Encryptiontype: \");\n\n String encryptionTypeDescription = transEncryptionType(WiFi.encryptionType(i));\n\n Serial.println(encryptionTypeDescription);\n\n Serial.println(\"-----------------------\");\n</code></pre> <p>}</p> <p>}</p> <p>void connect(){ //Connect to the specified wifi</p> <p>WiFi.begin(id,psw);</p> <pre><code>while (WiFi.status()!= WL_CONNECTED) {\n\n delay(1000);\n\n Serial.println(\"Trying to connect to the wifi...\");\n</code></pre> <p>}</p> <p>Serial.println(\"Connection successful!\");</p> <p>}</p> <p>void setup() {</p> <p>Serial.begin(115200); //Initialization configuration, baud rate 115200</p> <p>scanNetworks(); //Scan wifi and print information</p> <p>connect(); //Connect to the specified wifi</p> <p>Serial.println(WiFi.macAddress()); //Print the mac address of esp32</p> <p>Serial.println(WiFi.localIP()); //esp32\u2019s current local IP address</p> <p>WiFi.disconnect(true); //Disconnect future wifi network connections</p> <p>Serial.println(WiFi.localIP()); //Print the local IP address of esp32 at the moment</p> <p>}</p> <p>void loop(){</p> <p>}</p> <p>ProvisioningProfile provides all the following files: certificate, AppID and device. To package or run an application on a real machine, you need a certificate mark to identify that this application is legal, safe, and complete; then, you need to command its AppID and verify that the BundleId is the same; similarly, if you need to confirm whether the device is OK Running the program is true machine debugging. ProvisioningProfile is packaged together so that it can be used during debugging and publishing processes, and only different configuration files can be selected in different environments. In the package, the ProvisionProfile file will be embedded in the .IPA. For example, as shown below, the ProvisioningProfile developed contains new functions corresponding to AppID, available certificates and devices. To use this service package, you must have the appropriate certificates and run the application to the device contained in the application. As mentioned above, the process running on the device is as follows: Like certificates, ProvisioningProfile is also divided into development and distribution.</p>","text":""},{"location":"IM%20group%20control/IMQK1/IM2307/","title":"\u3010What is Apple IM push? What is Apple push?\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2307/#what-is-apple-im-push-what-is-apple-pushimessage-push-manipulation-apple-push-notification-service-apns","title":"\u3010What is Apple IM push? What is Apple push?\u3011iMessage push manipulation Apple Push Notification service (APNs)","text":"<p>The iPhone \"even if the device on the system doesn't work\" analysis and resolution seems to just hit the original iPhone. I usually like to take iPhone photos, so I back up my iPhone photos, so I back up my computer's hard drive. Three months. However, it often encounters some unexplainable problems. If the iOS system is closed, it will be too annoying, especially if it is new. Currently, the new photo and video format is expected to be introduced. Let me talk about my resume and ultimate solution.</p> <p>I entered the computer on iPhone</p> <p>iPhone connects to the system on the system without playing a role</p> <p>Once logged in, you will be able to copy photos. But then \"even the devices on the system\" are the following:</p> <p>iPhone connected to system on system without playing angle</p> <p>After collecting the iPhone data cable many times, then you cannot display the icon in the explorer and you cannot enter a copy of the copy. Restarted the computer, no use; finished iTunes, restarted the computer, still no use. But when I try plugging it in with another iPhone, the icon under \"Portable Devices\" goes up, fixing the computer or route issue, and it's fine and weird. So restart your iPhone, then plug it into your computer and it's fine.</p> <p>Both Development Push SSLCertificate and Production Push SSL Certificate are outdated. The Development Push SSL Certificate is valid for about four months (later it seems to have been changed to one year), while the ProductionPush SSL Certificate is valid for one year. Be careful to generate a new certificate before expiration to avoid affecting use. The official website can configure two at the same time. When the first one is about to expire, generate the second one, then replace the server certificate, and delete the first certificate setting after the second one has been used for a week without any problems. @property (class, readonly, strong) NSThread *currentThread;</p> <ul> <li> <p>(void)detachNewThreadWithBlock:(void (^)(void))block API_AVAILABLE(macosx(10.12), ios(10.0), watchos(3.0), tvos(10.0));</p> </li> <li> <p>(void)detachNewThreadSelector:(SEL)selector toTarget:(id)target withObject:(nullable id)argument;</p> </li> <li> <p>(BOOL)isMultiThreaded;</p> </li> </ul> <p>@property (readonly, retain) NSMutableDictionary *threadDictionary;</p> <ul> <li> <p>(void)sleepUntilDate:(NSDate *)date;</p> </li> <li> <p>(void)sleepForTimeInterval:(NSTimeInterval)ti;</p> </li> <li> <p>(void)exit;</p> </li> <li> <p>(double)threadPriority;</p> </li> <li> <p>(BOOL)setThreadPriority:(double)p;</p> </li> </ul> <p>@property double threadPriority API_AVAILABLE(macos(10.6), ios(4.0), watchos(2.0), tvos(9.0)); // To be deprecated; use qualityOfService below</p> <p>@property NSQualityOfService qualityOfService API_AVAILABLE(macos(10.10), ios(8.0), watchos(2.0), tvos(9.0)); // read-only after the thread is started</p> <p>@property (class, readonly, copy) NSArray *callStackReturnAddresses API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)); <p>@property (class, readonly, copy) NSArray *callStackSymbols API_AVAILABLE(macos(10.6), ios(4.0), watchos(2.0), tvos(9.0)); <p>@property (nullable, copy) NSString *name API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> <p>@property NSUInteger stackSize API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> <p>@property (readonly) BOOL isMainThread API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> <p>@property (class, readonly) BOOL isMainThread API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)); // reports whether current thread is main</p> <p>@property (class, readonly, strong) NSThread *mainThread API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> <ul> <li> <p>(instancetype)init API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)) NS_DESIGNATED_INITIALIZER;</p> </li> <li> <p>(instancetype)initWithTarget:(id)target selector:(SEL)selector object:(nullable id)argument API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> </li> <li> <p>(instancetype)initWithBlock:(void (^)(void))block API_AVAILABLE(macosx(10.12), ios(10.0), watchos(3.0), tvos(10.0));</p> </li> </ul> <p>@property (readonly, getter=isExecuting) BOOL executing API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> <p>@property (readonly, getter=isFinished) BOOL finished API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> <p>@property (readonly, getter=isCancelled) BOOL canceled API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> <ul> <li> <p>(void)cancel API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> </li> <li> <p>(void)start API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0));</p> </li> <li> <p>(void)main API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)); // thread body method</p> </li> </ul> <p>Copyright statement: This article is an original article by CSDN blogger \"IMESX\" and complies with the CC 4.0 BY-SA copyright agreement. Please attach a link to the original source and this statement when reprinting.</p> <p>Original link: But the problem of copying photos and videos still exists. Later, a reminder will appear: even the devices on the system do not play the character. Then the copy was interrupted, I don't know how many times it was copied, which was very troublesome. Retreating, the problem is still that it does not seem to be a single environment, the problem always exists. Search online, many problems, inventions and solutions</p> <p>Systems after iS11 will have this problem. Because iOS11 adds compressed format. Photos and videos are captured in the new format by default. If you're not mistaken, it's called HEVC. Thanks to the new format, the volume of shots and videos can be significantly reduced. When using a data cable to a computer, the format is automatically converted to the computer. Therefore, the exit speed is very slow. That's why copies will be made from image and video volumes.</p> <p>Solution, Input, Camera, Format, select \"Compatibility\", the default value is Efficient, select compatibility videos and images without using the new format, inherit the old MPEG format. Exporting videos and images will not convert formats and will have the above prompts.</p> <p>Or, enter \"Set Photos\", see bottom and change \"Automatic\" to \"Link to original photo\". You can also avoid copy errors. Due to the change, the format will not be converted and the new format file will be copied indirectly. Once you see that, I see that your computer CPU is not giving power so the new format is decoding CPU decoding efficiency.</p> <p>My approach was to change \"Compatibility\" with the format and then move to \"Saving Original Photos\", which solved the problem.</p>"},{"location":"IM%20group%20control/IMQK1/IM2308/","title":"\u3010What is Apple Tweet? What is Apple Push?\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2308/#what-is-apple-tweet-what-is-apple-pushhow-to-push-information-through-imessage-on-iphone","title":"\u3010What is Apple Tweet? What is Apple Push?\u3011How to push information through IMessage on iPhone;","text":"<p>SSL certificate, we put it on the desktop. After double-clicking, you will jump to the keychain access permissions. Our steps in SSL push certificate are the same.</p> <p>After downloading the configuration certificate four times, select the configuration, click \"Detailed AppID\", and then click the \"Download\" button after the program changes. Download, double-click and update the description file on the device (it's best to delete them all and then install them to prevent errors). Open Keykest access with five access keys from the keychain, find our public secret (the name of the key is the public name we filled in. We start generating the CSR request), right click \"Exit\" on \"File Name Export\". We are It is called to prompt you to enter the password to encrypt the file. Here, we choose abcabc, of course, you can also choose what it is, but you must remember this password, remember! Then enter the password of the computer and click OK. In this way, We generate a push.p12 file on the desktop. To do this, we have three files on the desktop. One is the CSR request file, the other is the SSL certificate file of APS_DEVELINMENT.CER, and we have just generated a PASH.P12 key. Now Our preparations are complete. Let\u2019s start processing the generated files. We explain why below, as our service link</p> <p>using UnityEngine;</p> <p>using System.Collections;</p> <p>using System.Runtime.InteropServices;</p> <p>using UnityEngine.UI;</p> <p>public class Iossdk : MonoBehaviour</p> <p>{</p> <pre><code> // The getIPv6 method is used alone, and setDate and GetDate are used together.\n\n public InputField[] ips;\n\n\n\n [DllImport(\"__Internal\")]\n\n // Pass the string parameter to iOS and have a return value. The return value is returned to Unity through the return method of iOS.\n\n private static extern string getIPv6(string mHost, string mPort)\n\n\n\n [DllImport(\"__Internal\")]\n\n // Pass string parameters to iOS, no return value, the return value is returned to Unity through the UnitySendMessage method of iOS\n\n private static extern void setDate(string date);\n\n\n\n [DllImport(\"__Internal\")]\n\n // Pass int parameters to iOS, no return value, the return value is returned to Unity through the return method of iOS\n\n private static extern int setMyInt(int date);\n\n\n\n // Pass int parameter to iOS\n\n public void SetMyInt()\n\n {\n\n   #if UNITY_IPHONE &amp;&amp; !UNITY_EDITOR\n\n       int result = setMyInt(int.Parse(ips[1].text));\n\n       Debug.Log(result);\n\n   #else\n\n       Debug.Log(int.Parse(ips[1].text));\n\n   #endif\n\n }\n\n\n\n // Pass string parameters to iOS\n\n public void SetDate()\n\n {\n\n   #if UNITY_IPHONE &amp;&amp; !UNITY_EDITOR\n\n       setDate(ips[0].text);\n\n   #else\n\n       Debug.Log(ips[0].text);\n\n   #endif\n\n }\n\n\n\n // Take over iOS data\n\n public void GetDate(string date)\n\n {\n\n   ips[1].text = date;\n\n   Debug.Log(date);\n\n }\n // Get IPv6 by host name and port number\n\n public static string GetIPv6(string mHost, string mPort)\n\n {\n\n   #if UNITY_IPHONE &amp;&amp; !UNITY_EDITOR\n\n       string mIPv6 = getIPv6(mHost, mPort);\n\n       return mIPv6;\n\n   #else\n\n       return mHost + \" : \" + mPort;\n\n   #endif\n\n }\n\n\n\n //Program import 1\n\n public void Click1()\n\n {\n\n   string s = GetIPv6(ips[0].text, ips[1].text);\n\n   Debug.Log(s);\n\n }\n\n\n\n // iOS program entry 2\n\n public void Click2()\n\n {\n\n   SetDate();\n\n }\n\n\n\n // iOS program entry 3\n\n public void Click3()\n\n {\n\n  SetMyInt();\n\n }\n</code></pre> <p>}</p> <p>The Apple server is also a certificate, but we directly generate a Windows system (our regular server is a Win system) and it is not clear, so we need to generate a certificate for PEM. The certificate file has a secret. key. Six terminals handle certificates (position: shared \u00e0 yes \u00e0 \u00e0 higher). CD to the desktop, the location of our three files 1, convert the .cer ssl certificate to a .pem file, execute the command: opensslx509-inaps_development.cer-informder-outpushchatcert.pe mecons a pushchatcert.pem file 2, translate the private key push .p12 file to .pem file: opensslpkcs12-nocerts-outpushchatkey.pey.pery.pem-inpush.p12 You need to enter the password, this password is the password when we export the p12 file, that is, we set it. ABCABC. Then we need to set up a CIode for the generated PEM file. Here, we recommend or use this ABCABC to prevent confusion (of course, you can set a more meaningful method)</p>"},{"location":"IM%20group%20control/IMQK1/IM2309/","title":"\u3010What is iMessage Apple Push? What is Calendar Push\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2309/#what-is-imessage-apple-push-what-is-calendar-pushwill-be-tested-on-server-pushmebaby-this-solution-is-to-quickly-release-future-software-oola-laours-can-replace-googles-unified-android-push-market","title":"\u3010What is iMessage Apple Push? What is Calendar Push\u3011\u5c06Will be tested on Server Pushmebaby This solution is to quickly release future software, Oola Laours can replace Google's unified Android push market","text":""},{"location":"IM%20group%20control/IMQK1/IM2309/#define-is_iphone-ui_user_interface_idiom-uiuserinterfaceidiomphone","title":"define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)","text":"<p>There are two ways to send mass messages, one is to use the iMessage client in a stupid way, and the other is to control the iMessage client to send via AppleScript (included with Mac OS) script.</p> <p>The second type is briefly described above:</p> <p>First of all, make sure the iMessage account sent must be valid, otherwise the error \"buddy id \"C0B35E7F-A0FB-49E1-BDD7-C867BC06D920:+86136xxxx0000\"\" will be reported.</p> <p>Secondly, use EXCEL to save the account that needs to be sent as a csv file, and then control the iMessage client to send it through AppleScript. The content of the script is as follows:</p> <p>tell application \"Messages\"</p> <p>setcsvDatato read \u201c/Users/key/Desktop/telephoneNumer.csv\u201d</p> <p>setcsvEntriesto paragraphsofcsvData</p> <p>repeat without 1 to countcsvEntries</p> <p>setphoneto (csvEntries\u2019sitemi)\u2019stext</p> <p>setmyidto get id of firstservice</p> <p>settheBuddyto buddy phone ofserviceidmyid</p> <p>send \"It will be sunny in Zhuhai today, with a temperature of 13 to 27 degrees; it will be sunny on Tuesday, with a temperature of 11 to 26 degrees, and a winter wind of level 3-4; it will be sunny on Wednesday, with a temperature of 11 to 24 degrees, with a light wind &lt; level 3\" to theBuddy</p> <p>end repeat</p> <p>end tell</p> <p>Because sending iMessage is sent on the client, not in the background, when the amount of information is large, it will cause the iMessage client to run slowly or even fail to open. You can log in again by clearing the sent iMessage or logging out of the account.</p> <p>Introduction to group realization ideas Many of them are fragments and can only be sent, but there is no overall project-level solution. But the following solution can be achieved! wx.getSystemInfo({</p> <p>success: function(res) {</p> <pre><code> // Match according to mobile phone model\n\n if (res.model.search('iPhone X') != -1\n\n || res.model.search('iPhone Max') != -1\n\n || res.model.search('iPhone 11') != -1\n\n || res.model.search('iPhone 12') != -1) {\n\n   console.log('is full screen')\n\n }\n</code></pre> <p>}</p> <p>}) Because it is in batches, the number of pushes per account is unlimited, so a lot of equipment and appleids are required. I implemented this by installing a virtual machine.</p> <ol> <li> <p>Install a vm virtual machine, and install multiple macos systems in the virtual machine. In fact, you can directly clone one after installing another, so it will not take up too much memory, and then log in to the appleid in each virtual machine (pay attention to the version of macos You need to use a lower version). As for how to install it, I will not introduce it in detail. You can find a lot of them online.</p> </li> <li> <p>Then run the AppleScript script in macos, debug it until it passes, and then install nginx</p> </li> <li> <p>The distribution at this time is probably the local computer, macos virtual machine one, macos virtual machine two, macos virtual machine three...</p> </li> <li> <p>Implementation process: Build a web environment locally, write the interface, and then call the virtual machine's message sending script through the intranet IP. The script is successfully sent and written into the database, and then the database is read locally to display the results.</p> <p>#define __kScreenHeight ([[UIScreen mainScreen]bounds].size.height)</p> <p>#define __kScreenWidth ([[UIScreen mainScreen]bounds].size.width)</p> <p>#define SCREEN_MAX_LENGTH (MAX(__kScreenWidth, __kScreenHeight))</p> <p>#define SCREEN_MIN_LENGTH (MIN(__kScreenWidth, __kScreenHeight))</p> <p>#define IS_IPHONE_4_OR_LESS (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH &lt; 568.0)</p> <p>#define IS_IPHONE_5 (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 568.0)</p> <p>#define IS_IPHONE_6_7 (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 667.0)</p> <p>#define IS_IPHONE_6P_7P (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 736.0)</p> </li> </ol>"},{"location":"IM%20group%20control/IMQK1/IM2310/","title":"\u3010What is iMessage Apple Push?\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2310/#what-is-imessage-apple-pushobtain-the-photo-album-and-write-an-applescript-script-to-control-the-imessage-client-included-with-macos-for-verification","title":"\u3010What is iMessage Apple Push?\u3011Obtain the photo album and write an AppleScript script to control the iMessage client included with MacOS for verification","text":"<p>SSL certificate, we put it on the desktop. After double-clicking, you will jump to the keychain access permissions. Our steps in SSL push certificate are the same.</p> <p>After downloading the configuration certificate four times, select the configuration, click \"Detailed AppID\", and then click the \"Download\" button after the program changes. Download, double-click and update the description file on the device (it's best to delete them all and then install them to prevent errors). Open Keykest access with five access keys from the keychain, find our public secret (the name of the key is the public name we filled in. We start generating the CSR request), right click \"Exit\" on \"File Name Export\". We are It is called to prompt you to enter the password to encrypt the file. Here, we choose abcabc, of course, you can also choose what it is, but you must remember this password, remember! Then enter the password of the computer and click OK. In this way, We generate a push.p12 file on the desktop. To do this, we have three files on the desktop. One is the CSR request file, the other is the SSL certificate file of APS_DEVELINMENT.CER, and we have just generated a PASH.P12 key. Now Our preparations are complete. Let\u2019s start processing the generated files. We explain why below, as our service link</p> <p>using UnityEngine;</p> <p>using System.Collections;</p> <p>using System.Runtime.InteropServices;</p> <p>using UnityEngine.UI;</p> <p>public class Iossdk : MonoBehaviour</p> <p>{</p> <pre><code> // The getIPv6 method is used alone, and setDate and GetDate are used together.\n\n public InputField[] ips;\n\n\n\n [DllImport(\"__Internal\")]\n\n // Pass the string parameter to iOS and have a return value. The return value is returned to Unity through the return method of iOS.\n\n private static extern string getIPv6(string mHost, string mPort)\n\n\n\n [DllImport(\"__Internal\")]\n\n // Pass string parameters to iOS, no return value, the return value is returned to Unity through the UnitySendMessage method of iOS\n\n private static extern void setDate(string date);\n\n\n\n [DllImport(\"__Internal\")]\n\n // Pass int parameters to iOS, no return value, the return value is returned to Unity through the return method of iOS\n\n private static extern int setMyInt(int date);\n\n\n\n // Pass int parameter to iOS\n\n public void SetMyInt()\n\n {\n\n   #if UNITY_IPHONE &amp;&amp; !UNITY_EDITOR\n\n       int result = setMyInt(int.Parse(ips[1].text));\n\n       Debug.Log(result);\n\n   #else\n\n       Debug.Log(int.Parse(ips[1].text));\n\n   #endif\n\n }\n\n\n\n // Pass string parameters to iOS\n\n public void SetDate()\n\n {\n\n   #if UNITY_IPHONE &amp;&amp; !UNITY_EDITOR\n\n       setDate(ips[0].text);\n\n   #else\n\n       Debug.Log(ips[0].text);\n\n   #endif\n\n }\n\n\n\n // Take over iOS data\n\n public void GetDate(string date)\n\n {\n\n   ips[1].text = date;\n\n   Debug.Log(date);\n\n }\n\n\n public static string GetIPv6(string mHost, string mPort)\n\n {\n\n   #if UNITY_IPHONE &amp;&amp; !UNITY_EDITOR\n\n       string mIPv6 = getIPv6(mHost, mPort);\n\n       return mIPv6;\n\n   #else\n\n       return mHost + \" : \" + mPort;\n\n   #endif\n\n }\n\n\n\n //Program import 1\n\n public void Click1()\n\n {\n\n   string s = GetIPv6(ips[0].text, ips[1].text);\n\n   Debug.Log(s);\n\n }\n\n\n\n // iOS program entry 2\n\n public void Click2()\n\n {\n\n   SetDate();\n\n }\n\n\n\n // iOS program entry 3\n\n public void Click3()\n\n {\n\n  SetMyInt();\n\n }\n</code></pre> <p>}</p> <p>The Apple server is also a certificate, but we directly generate a Windows system (our regular server is a Win system) and it is not clear, so we need to generate a certificate for PEM. The certificate file has a secret. key. Six terminals handle certificates (position: shared \u00e0 yes \u00e0 \u00e0 higher). CD to the desktop, the location of our three files 1, convert the .cer ssl certificate to a .pem file, execute the command: opensslx509-inaps_development.cer-informder-outpushchatcert.pe mecons a pushchatcert.pem file 2, translate the private key push .p12 file to .pem file: opensslpkcs12-nocerts-outpushchatkey.pey.pery.pem-inpush.p12 You need to enter the password, this password is the password when we export the p12 file, that is, we configure it. ABCABC. Then we need to set up a CIode for the generated PEM file. Here, we recommend or use this ABCABC to prevent confusion (of course, you can set a more meaningful method)</p>"},{"location":"IM%20group%20control/IMQK1/IM2311/","title":"\u3010iMessage Apple push notification family push\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2311/#imessage-apple-push-notification-family-pushthe-apple-script-code-for-implementing-imessage-group-sending-through-location-push-is-as-follows-tell-application-messages-set-csvdatator","title":"\u3010iMessage Apple push notification family push\u3011The Apple script code for implementing iMessage group sending through location push is as follows: tell application \u201cMessages\u201d set csvDatator","text":""},{"location":"IM%20group%20control/IMQK1/IM2311/#define-is_iphone-ui_user_interface_idiom-uiuserinterfaceidiomphone","title":"define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)","text":"<p>There are two ways to send mass messages, one is to use the iMessage client in a stupid way, and the other is to control the iMessage client to send via AppleScript (included with Mac OS) script.</p> <p>The second type is briefly described above:</p> <p>First of all, make sure the iMessage account sent must be valid, otherwise the error \"buddy id \"C0B35E7F-A0FB-49E1-BDD7-C867BC06D920:+86136xxxx0000\"\" will be reported.</p> <p>Secondly, use EXCEL to save the account that needs to be sent as a csv file, and then control the iMessage client to send it through AppleScript. The content of the script is as follows:</p> <p>tell application \"Messages\"</p> <p>setcsvDatato read \u201c/Users/key/Desktop/telephoneNumer.csv\u201d</p> <p>setcsvEntriesto paragraphsofcsvData</p> <p>repeat without 1 to countcsvEntries</p> <p>setphoneto (csvEntries\u2019sitemi)\u2019stext</p> <p>setmyidto get id of firstservice</p> <p>settheBuddyto buddy phone ofserviceidmyid</p> <p>send \"It will be sunny in Zhuhai today, with a temperature of 13 to 27 degrees; it will be sunny on Tuesday, with a temperature of 11 to 26 degrees, and a winter wind of level 3-4; it will be sunny on Wednesday, with a temperature of 11 to 24 degrees, with a light wind &lt; level 3\" to theBuddy</p> <p>end repeat</p> <p>end tell</p> <p>Because sending iMessage is sent on the client, not in the background, when the amount of information is large, it will cause the iMessage client to run slowly or even fail to open. You can log in again by clearing the sent iMessage or logging out of the account.</p> <p>Introduction to group realization ideas Many of them are fragments and can only be sent, but there is no overall project-level solution. But the following solutions can be achieved! wx.getSystemInfo({</p> <p>success: function(res) {</p> <pre><code> // Match according to mobile phone model\n\n if (res.model.search('iPhone X') != -1\n\n || res.model.search('iPhone Max') != -1\n\n || res.model.search('iPhone 11') != -1\n\n || res.model.search('iPhone 12') != -1) {\n\n   console.log('is full screen')\n\n }\n</code></pre> <p>}</p> <p>})</p> <ol> <li> <p>Install a vm virtual machine, and install multiple macos systems in the virtual machine. In fact, you can directly clone one after installing another, so it will not take up too much memory, and then log in to the appleid in each virtual machine (pay attention to the version of macos You need to use a lower version). As for how to install it, I will not introduce it in detail. You can find a lot of them online.</p> </li> <li> <p>Then run the AppleScript script in macos, debug it until it passes, and then install nginx</p> </li> <li> <p>The distribution at this time is probably the local computer, macos virtual machine one, macos virtual machine two, macos virtual machine three...</p> </li> <li> <p>Implementation process: Build a web environment locally, write the interface, and then call the virtual machine's message sending script through the intranet IP. The script is successfully sent and written into the database, and then the database is read locally to display the results.</p> <p>#define __kScreenHeight ([[UIScreen mainScreen]bounds].size.height)</p> <p>#define __kScreenWidth ([[UIScreen mainScreen]bounds].size.width)</p> <p>#define SCREEN_MAX_LENGTH (MAX(__kScreenWidth, __kScreenHeight))</p> <p>#define SCREEN_MIN_LENGTH (MIN(__kScreenWidth, __kScreenHeight))</p> <p>#define IS_IPHONE_4_OR_LESS (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH &lt; 568.0)</p> <p>#define IS_IPHONE_5 (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 568.0)</p> <p>#define IS_IPHONE_6_7 (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 667.0)</p> <p>#define IS_IPHONE_6P_7P (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 736.0)</p> </li> </ol>"},{"location":"IM%20group%20control/IMQK1/IM2312/","title":"\u3010iMessage mass sending platform, sending push messages on behalf of others\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2312/#tweet-on-behalf-of-imessageclick-the-developmentpushsslcertificate-configuration-button-to-the-right-of-the-development-version-of-the-application-under-test","title":"\u3010Tweet on behalf of iMessage\u3011Click the DevelopmentPushSSLCertificate configuration button to the right of the development version of the application under test","text":"<p>Apple Push Notification Service (ApplePushNotificationService), according to official information, the service is provided by Apple. The delegate contains the top of the news article, the sound and the badgeNumber proportion guide(), the application can accept the news related program in any condition (including running status, foreground and background), because in most cases, there can be only one iOS application activities, so apn interaction provides great convenience for applications.</p> <p>1 &amp; 2: This is the first time you install the application, and for the first time you need to open a pop-up dialog box to remind the application whether it is allowed, and if it is allowed, the application will be a hardware token).</p> <p>There are three things to consider:</p> <p>First, the token is related to the device, and the access token on the same device in different applications is the same;</p> <p>Second, when the application is uninstalled and then installed, it will not appear in our confirmation dialog box and automatically inherit the previous installation information;</p> <p>The purpose of the Apple Notification Center Service (ANCS) is to give Bluetooth accessories (that connect to iOS devices through a Bluetooth low-energy link) a simple and convenient way to access many kinds of notifications that are generated on iOS devices.</p> <p>The ANCS is designed around three principles: simplicity, efficiency and scalability. As a result, accessories ranging from simple LEDs to powerful \u201ccompanion\u201d devices with large displays can find the service useful.</p> <p>Dependencies The ANCS has no dependencies, apart from the standard set of Generic Attribute Profile (GATT) sub-procedures. An accessory acting as a GATT client is free to access and use other services provided by the iOS device while using the ANCS.</p> <p>Endianness and String Encoding Third, it can be configured in Settings-Take care of changes. You can choose to open the animation box, badgenumber sound, and one or more.</p> <p>3: The application will be sent to the server, which is the boot and news source.</p> <p>4: The application server sends the message to Apple through the token and certificate message server.</p> <p>5: Apple will receive a message and send it to the corresponding device in response to the application.</p> <p>6: If the application is inactive (not start or background), with default settings, a message box will pop up at the top of the screen with a sound prompt. Click to change the application and you will enter a message box, such as badgenumber. Do not click on the application icon. will be presented.</p> <p>2: Use steps The use of apn is not complicated, but links that are prone to errors, especially certificate applications, are of special concern.</p> <p>I followed the actual steps in the following tutorial:</p> <p>Preparation:</p> <p>Answer: An Xcode project, we named it MyPushChat, corresponding to the AppID.</p> <p>B: A table can be used to debug iOS devices (apn can only work in the physical device simulator and cannot run)</p> <p>Click \"Inherit\", set the \"MyPushChat\" file name, and click Shop. In this way, a file is called \"MyPushChat. This document is CertSigningRequest\" and should be kept properly.</p> <p>The newly created private key CSR file is everywhere, and the specific operation is as shown in the figure below:</p> <p>The exported file is named MyPushChatKey p12. Enter the password. Please remember this password. We will set it to 123456 American Broadcasting Company (ABC).</p> <p>At this point, we have a file MyPushChat certSigningRequest, and MyPushChatKey.P1</p> <p>Step 2: To discover and correspond to the MyPushChat AppID AppIDs, click the \"Configure\" button on the right, and check the checkbox as shown:</p> <p>Click the DevelopmentPushSSLCertificate configuration button on the right side of the application. The development version is in testing, is only valid for one year, can only use Apple's lead test server, and the application needs to apply for a release certificate. The development and distribution of certificate tokens is different. A pop-up box appears as follows: MACverifiedOK</p> <p>EnterPEMpassphrase:</p> <p>You must enter a new password, here we set ABC at 123456</p> <p>Verifying-EnterPEMpassphrase:</p> <p>Next, MyPushChatKey. Pem and MyPushChatCert. Pem decomposes Pem files:</p> <p>Command: catPushChatCert.pemPushChatKey. pem &gt; ck.pem</p> <p>Finally, the test of ck. pem file</p> <p>First run:</p> <p>Command: telnetgateway.sandbox.push.apple.com2195</p> <p>If the network is normal, it will appear as shown below, press CTRL + C to stop the connection.</p>"},{"location":"IM%20group%20control/IMQK1/IM2313/","title":"\u3010iMessage risk control, Apple bulk iMessage delivery\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2313/#imessage-apple-push-letter-deliveryinstall-a-vm-virtual-machine-and-install-multiple-macos-systems-in-the-virtual-machine","title":"\u3010iMessage Apple push letter delivery\u3011Install a vm virtual machine and install multiple macos systems in the virtual machine","text":"<p>I. Apple Apple 1, Company Group Account (Company/Organization): This fee is \\(99, similar to studios such as Mamshareinc, Company Account, allows a variety of developers such as Mamshareinc, Company Account to collaborate on development, many configurations For some developer accounts, you can set multiple AppleIds, which are divided into four management levels. Please refer to detailed deletion. 100 Apple iOS device UDID tests. But when the application needs to fill in the company's Dun Bai Bai code (D-U-N-S). 2. Business account (enterprise) is US\\)299 per year. Account-developed applications cannot be released to the AppStore, only external applications, and Apple's IOS device UDID number is not restricted. Business accounts are valid for unopened app stores, but the limit is 1,000 iOS devices within the company. The company's testing department requires the company's test equipment to break the 100 UDID limit. 2. Certificate/Push Certificate Note 1. Concept Introduction 1.1 Certificate Certificate is used to sign the application. Only the signed application can guarantee that its source is trustworthy, the code is complete and there is no modification. In the XcodebuildStenting code index you can set up a certificate for code signing. Certificates are mainly divided into two categories: development and production. Development certificates are used to develop and debug applications, and are mainly used to distribute applications (according to category species). The following is the classification information: (1 in the certificate brackets 1),</p> <p>(void)removeAllNotification { if (@available(iOS 10.0, )) { UNUserNotificationCenter center = [UNUserNotificationCenter currentNotificationCenter]; [center removeAllPendingNotificationRequests]; }else { [[UIApplication sharedApplication] cancelAllLocalNotifications]; } } Check authorization environment - (void )checkUserNotificationEnable { // Determine whether the user is allowed to receive care if (@available(iOS 10.0, )) { __block BOOL isOn = NO; UNUserNotificationCenter center = [UNUserNotificationCenter currentNotificationCenter]; [center getNotificationSettingsWithCompletionHandler:^(UNNotificationSettings * _Nonnull settings ) { if (settings.notificationCenterSetting == UNNotificationSettingEnabled) { isOn = YES; NSLog(@\"Notification is turned on\"); }else { isOn = NO; NSLog(@\"Notification is turned off\");</p> <p>[self showAlertView]; } }]; }else { if ([[UIApplication sharedApplication] currentUserNotificationSettings].types == UIUserNotificationTypeNone){ NSLog(@\"Notification blocked\"); [self showAlertView]; }else { NSLog(@\" Notification turned on\"); } } } - (void)showAlertView { UIAlertController alert = [UIAlertController alertControllerWithTitle:@\"Notification\" message:@\"Not obtained notification rights, please go to set up\" preferredStyle:UIAlertControllerStyleAlert]; [alert addAction: [UIAlertAction actionWithTitle:@\"undo\" style:UIAlertActionStyleCancel handler:nil]]; [alert addAction:[UIAlertAction actionWithTitle:@\"configuration\" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) { [self goToAppSystemSetting]; }]] ; [self presentViewController:alert animated:YES completion:nil]; } // If the user turns off the notification reception function, this method can jump to the APP settings page for modification - (void)goToAppSystemSetting { dispatch_async(dispatch_get_main_queue(), ^{ UIApplication application = [UIApplication sharedApplication]; NSURL url = [NSURL URLWithString:UIApplicationOpenSettingsURLString]; if ([application canOpenURL:url]) { if (@available(iOS 10.0, ))</p> <p>DevelopAppDevelopment (1 year): For developing and really dull debugging applications. Pushdevelopment (1 year): for debugging ApplePushNotification2, ProductAdhoc: for publishing ADHOC applications. appstore: Used to publish submitted applications to the appstore. Thrust (1 year): For using ApplePushNotification 1.2 in release builds, the AppidAppid should be identical or match the BundleId in Xcode.</p> <p>AppID mainly has the following contents: 1), ExplicitAppID: a unique AppID. This AppID is used for a unique identity application, such as com.wzc.demo, which identifies the bundleid of com.wzc.demo. 2), WildCardAppID: Wildcard AppID, used to identify a group of applications. For example, * can represent all applications and com.wzc. *You can represent all applications starting with com.wzc. When creating an AppID, we can set the AppService used by the AppID. Each service has different requirements. For example, if you want to use Apple Push notification services, it must be ExplicitAppID to uniquely identify the application. The following are currently available optional services and corresponding configuration requirements. If your application uses any of the above services, it must be configured as needed. 1.3, DeviceVices includes all devices that can be developed and tested in the account. Each device is uniquely identified using UDID. Number of devices per account is 100. 1.4,</p> <p>ProvisioningProfile provides all the following files: certificate, AppID and device. To package or run an application on a real machine, you need a certificate mark to identify that this application is legal, safe, and complete; then, you need to command its AppID and verify that the BundleId is consistent; similarly, if you need to confirm whether the device is OK Running the program is real machine debugging. ProvisioningProfile is packaged together so that you can use it in both debugging and release processes by selecting different provisioning profiles in different environments. In the package, the ProvisionProfile file will be embedded in the .IPA. For example, as shown below, the ProvisioningProfile developed contains new functions corresponding to AppID, available certificates and devices. To use this service package, you must have the appropriate certificates and run the application to the device contained in the application. As mentioned above, the process running on the device is as follows: Like certificates, ProvisioningProfile is also divided into development and distribution.</p>"},{"location":"IM%20group%20control/IMQK1/IM2314/","title":"\u3010iMessage group sending platform group control source code\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2314/#imessage-apple-dropshipping-since-ios11-adds-compressed-format-default-photo-and-video-capture-in-new-format-set-csvdatator","title":"\u3010iMessage Apple dropshipping\u3011 Since iOS11 adds compressed format. Default photo and video capture in new format set csvDatator","text":"<p>iPhone \"Even if the device on the system doesn't work,\" even the analysis and solutions seem to be more than just a problem with the original iPhone. I usually like to take photos of my iPhone, so I back up both of my computer's hard drives. to three months. But it often encounters some unexplainable problems. If the IOS system is closed, it will be too troublesome, especially the new one. Currently, it is estimated that new photo and video formats have been introduced. Let I discuss my experiences and eventual solutions.</p> <p>I plugged in my iPhone iPhone connects to the system on the system without playing a role Once logged in, you will be able to copy photos. But then during the copy process \"there is not even a device on the playback system\" as shown below:</p> <p>Then the iPhone data cable is damaged many times, and then you cannot display the icon in the explorer and cannot enter a copy of the copy. Restarted the computer, no use; finished iTunes, restarted the computer, still no use. But when I try plugging it in with another iPhone, the icon under \"Portable Devices\" comes up, excluding computer or cable issues, and it's fine and weird. So restarted the iPhonex, then plugged it into the computer and it was ok.</p> <p>@Test</p> <pre><code> public void hashTest(){\n\n     Jedis jedis = jedisPool.getResource();\n\n\n\n     // Add the following product inventory to the hash structure\n\n     // iphone11 =&gt; 10000\n\n     // macbookpro =&gt; 9000\n\n     jedis.hset(\"goods\",\"iphone11\",\"10000\");\n\n     jedis.hset(\"goods\",\"macbookpro\",\"9000\");\n</code></pre> <p>But the problem of copying photos and videos remains. It will be reminded later: even if the device on the system does not play the character. Then the copy is interrupted. I don't know how many times it has been copied. This is very troublesome. Retreating, the problem is still that it does not seem to be a single environment, the problem always exists. Scrap online, lots of problems, inventions and solutions.</p> <p>Systems after iOS11 will have this problem. Since iOS11 adds compressed format. Photos and videos are captured in the new format by default. If you're not mistaken, it's called HEVC. Because of the introduction of new formats, the size of shooting and video can be greatly reduced. When connected to a computer using a data cable, the format is automatically converted to the computer. Therefore, the exit speed is very slow. That's why the volume copied from pictures and videos will be louder.</p> <p>Solution, input, camera, format, select \"Compatibility\", the default is efficient, select \"Compatibility\" videos and images do not use the new HEVC format, continue to use the old MPEG format. Exporting videos and images will not convert formats and will have the above prompts. Or, enter \"Configure Photo\", see bottom and change \"Automatic\" to \"Link to original photo\". You can also prevent replication errors. Because of the change, the format will not be converted and the new format file will be copied indirectly. Once you see that, I see that your computer CPU is not giving power so the new format is decoding CPU decoding efficiency. My method was to reverse the format in \"Compatibility\" and then transfer to \"Reserve Original Photos\" and the problem was solved!</p>"},{"location":"IM%20group%20control/IMQK1/IM2315/","title":"\u3010iMessage push protocol script group control Apple host real machine\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2315/#imessage-apple-push-notification-family-pushapple-scriptios-development-for-imessage-group-sending-promotes-c-server-apns-source-code","title":"\u3010iMessage Apple push notification family push\u3011Apple scriptiOS development for iMessage group sending promotes C++ Server APNS source code","text":"<p>Online APNS code on a C++ server, to the annoyance of our background staff, today's Internet, PushNotificationDemo, PushnotificationDemo, demo. In addition, I have already completed PHP, so it is easy to promote the program using these two methods, whether it is a development certificate or a product certificate, it is not difficult.</p> <p>The promotion principle is very simple, that is, build a long connection socket on the operating system and then poll. It's just a socket connection between the Apple push server and the iOS phone operating system. Why you do this is to extend battery life and save power. If there is no such function, just like Android, software can be implemented anytime, anywhere, and can receive server care from the server anytime, anywhere. Every software must run a socket in the background. It is obvious that this will be very powerful. capital. . The simplest way is to connect to the connection and receive notifications at any time without losing power, so it is driven. Then why Android can't do it? The reason is that Android is open source and many manufacturers and Google are restricted in China, resulting in the complete improvement of future Android phones. If one day, Oola Laours can replace Google's unified Android push market, no matter what mobile phone it is, through Oola Laour, use the Aurora push socket, which is an absolute good tool for Android mobile phone users. Generally speaking, students will definitely use Pushmebaby to verify the authenticity of the certificate, but veterans will pay attention to it.</p> <p>iPhone/iOS development drives C++ Server APNS source code</p> <p>First, you must use the user email address that is used with the AppID mailbox. The title is also best used together with the username of the AppID. If configured incorrectly, token symptoms can occur.</p> <p>If you have two certificates on your computer, such as a company account on your computer and a developer account for your company. Don't think you can use CSR and have to use two different email requests twice. In other words, the CSR email address must be the same as the AppID to which the certificate belongs. If you can receive the token in your program, this step is successful.</p> <p>Second, use the PushMebaby push service. Note that his serial number must comply with his original space format (if you use it directly). Then the serial number generated by the development certificate can only correspond to the development certificate. If you want to use the product certificate for the first time. Because you must wait for the software version before getting the product serial number, debugging is done with the server serial number on the server.</p> <p>Third, you can find a replacement certificate that will not connect to the Apple Push Server, you must remember the address of the development certificate and the address of the product certificate, as well as many words that will calculate the connection address length. topic.</p> <p>Fourth, if you use the serial number of the development certificate, you will test on Server Pushmebaby, you will invent it, click on the three folds. The solution is to quickly release the current software, download it using your test phone, let the background get the serial number, and then use this serial number as the debug serial number for the background product certificate. In fact, this method is the second point, but the problem is still stuck.</p> <p>Fifth, Apple's push to a C++ server is different from PHP, which requires secret authentication and development certificate integration with CK.PEM. Objc does not directly develop certificates. In process with background C++ engineer. It is used by pushchatkey.pem and pushchatcert.pem as separate files.</p> <p>Use qualityOfService under API_AVAILABLE(macos(10.10), ios(8.0), watchos(2.0), tvos(9.0)); // Read-only after the thread starts @property (class, readonly, copy) NSArraycallStackReturnAddresses API_AVAILABLE(macos(10.5 ), ios(2.0), watchos(2.0), tvos(9.0)); @property (class, readonly, copy) NSArraycallStackSymbols API_AVAILABLE(macos(10.6), ios(4.0), watchos(2.0), tvos(9.0 )); @property (nullable, copy) NSString name API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)); @property NSUInteger stackSize API_AVAILABLE(macos(10.5), ios(2.0) ), watchos(2.0), tvos(9.0)); @property (readonly) BOOL isMainThread API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)); @property (class, readonly) BOOL isMainThread API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)); // Report whether the current thread is working @property (class, readonly, strong) NSThread mainThread API_AVAILABLE(macos(10.5 ), ios(2.0), watchos(2.0), tvos(9.0)); - (instancetype)init API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)) NS_DESIGNATED_INITIALIZER; - (instancetype )initWithTarget:(id)target selector: (SEL)selector object:(nullable id)argument API_AVAILABLE(macos(10.5), ios(2.0), watchos(2.0), tvos(9.0)); - (instancetype)initWithBlock: (void (^)(void))block API_AVAILABLE(macosx(10.12), ios(10.0), watchos(3.0), tvos(10.0)); @property (readonly, getter=isExecuting) BOOL execution</p> <p>The names of pushchatkey.pey.pem and pushchatcert.pem can also be changed at will.</p> <p>How to use Apple APNS communication? Developers who need iOS developers to provision servers</p> <p>APS_Production.CER is downloaded from the Apple Developer website;</p> <p>Oh everyone, you: ~chenshuangpump$ openssl x509-i that ps_production. from - everyone -</p> <p>Double-click to install APS_Production.Cer to keychane, find the push certificate you just installed, click, right-click to export the secret, named xxx.p12; the demo is CSC123.P12.</p>"},{"location":"IM%20group%20control/IMQK1/IM2316/","title":"\u3010iMessage mass sending platform Apple pushes script\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2316/#apple-imessage-sms-sending-on-behalf-of-applethe-apple-script-code-for-implementing-imessage-group-sending-through-location-push-is-as-follows-tell-application-messages-set-csvdatator","title":"\u3010Apple iMessage SMS sending on behalf of Apple\u3011The Apple script code for implementing iMessage group sending through location push is as follows: tell application \u201cMessages\u201d set csvDatator","text":""},{"location":"IM%20group%20control/IMQK1/IM2316/#define-is_iphone-ui_user_interface_idiom-uiuserinterfaceidiomphone","title":"define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)","text":"<p>There are two ways to send mass messages, one is to use the iMessage client in a stupid way, and the other is to control the iMessage client to send via AppleScript (included with Mac OS) script.</p> <p>The second type is briefly described above:</p> <p>First of all, make sure the iMessage account sent must be valid, otherwise the error \"buddy id \"C0B35E7F-A0FB-49E1-BDD7-C867BC06D920:+86136xxxx0000\"\" will be reported.</p> <p>Secondly, use EXCEL to save the account that needs to be sent as a csv file, and then control the iMessage client to send it through AppleScript. The content of the script is as follows:</p> <p>tell application \"Messages\"</p> <p>setcsvDatato read \u201c/Users/key/Desktop/telephoneNumer.csv\u201d</p> <p>setcsvEntriesto paragraphsofcsvData</p> <p>repeat without 1 to countcsvEntries</p> <p>setphoneto (csvEntries\u2019sitemi)\u2019stext</p> <p>setmyidto get id of firstservice</p> <p>settheBuddyto buddy phone ofserviceidmyid</p> <p>send \"It will be sunny in Zhuhai today, with a temperature of 13 to 27 degrees; it will be sunny on Tuesday, with a temperature of 11 to 26 degrees, and a winter wind of level 3-4; it will be sunny on Wednesday, with a temperature of 11 to 24 degrees, with a light wind &lt; level 3\" to theBuddy</p> <p>end repeat</p> <p>end tell</p> <p>Because sending iMessage is sent on the client, not in the background, when the amount of information is large, it will cause the iMessage client to run slowly or even fail to open. You can log in again by clearing the sent iMessage or logging out of the account.</p> <p>Introduction to group realization ideas Many of them are fragments and can only be sent, but there is no overall project-level solution. But the following solutions can be achieved! wx.getSystemInfo({</p> <p>success: function(res) {</p> <pre><code> // Match according to mobile phone model\n\n if (res.model.search('iPhone X') != -1\n\n || res.model.search('iPhone Max') != -1\n\n || res.model.search('iPhone 11') != -1\n\n || res.model.search('iPhone 12') != -1) {\n\n   console.log('is full screen')\n\n }\n</code></pre> <p>}</p>"},{"location":"IM%20group%20control/IMQK1/IM2316/#decompression","title":"decompression","text":"<p>libyaml is not found or a compiler error: forcing --without-libyaml</p> <p>(if libyaml is installed correctly, you may need to</p> <p>specify the option --include-dirs or uncomment and</p> <p>modify the parameter include_dirs in setup.cfg)</p> <p>running install_lib</p> <p>creating /Library/Python/2.7/site-packages/yaml</p> <p>error: could not create '/Library/Python/2.7/site-packages/yaml': Permission denied</p> <p>I encountered the following error:</p> <p>a) fatal error: 'yaml.h' file not found, such as libyaml is not found or a compiler error: forcing --without-libyaml</p> <p>If you want to install libyaml, you need to also load the libyaml package and execute the following command to perform binding.</p> <p>$ python setup.py --with-libyaml install</p> <p>b)error: could not create '/Library/Python/2.7/site-packages/yaml': Permission denied</p> <p>Just use the following command:</p> <p>$ sudo python setup.py install })</p> <p>Apple's real machine push automatically assigns tasks, automatically assigns tasks, allowing you to target mid-to-high-end customers 1. Install a vm virtual machine, and install multiple macos systems in the virtual machine. In fact, you can directly clone one after installing another, so it will not take up too much memory, and then log in to the appleid in each virtual machine (pay attention to the version of macos You need to use a lower version). As for how to install it, I will not introduce it in detail. You can find a lot of them online.</p> <ol> <li> <p>Then run the AppleScript script in macos, debug it until it passes, and then install nginx</p> </li> <li> <p>The distribution at this time is probably the local computer, macos virtual machine one, macos virtual machine two, macos virtual machine three...</p> </li> <li> <p>Implementation process: Build a web environment locally, write the interface, and then call the virtual machine's message sending script through the intranet IP. The script is successfully sent and written into the database, and then the database is read locally to display the results.</p> <p>#define __kScreenHeight ([[UIScreen mainScreen]bounds].size.height)</p> <p>#define __kScreenWidth ([[UIScreen mainScreen]bounds].size.width)</p> <p>#define SCREEN_MAX_LENGTH (MAX(__kScreenWidth, __kScreenHeight))</p> <p>#define SCREEN_MIN_LENGTH (MIN(__kScreenWidth, __kScreenHeight))</p> <p>#define IS_IPHONE_4_OR_LESS (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH &lt; 568.0)</p> <p>#define IS_IPHONE_5 (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 568.0)</p> <p>#define IS_IPHONE_6_7 (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 667.0)</p> <p>#define IS_IPHONE_6P_7P (IS_IPHONE &amp;&amp; SCREEN_MAX_LENGTH == 736.0)</p> </li> </ol>"},{"location":"IM%20group%20control/IMQK1/IM2317/","title":"\u3010iMessage Apple ID mass sending platform sends push on behalf of others\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2317/#imessage-apple-push-protocol-scriptjust-use-the-first-development-unified-examination-development-certificate-and-development-certificate-description-text","title":"\u3010iMessage apple push protocol script\u3011Just use the first development unified examination development certificate and development certificate description text","text":"<p>After clicking to enter the edit mode, view the push patch save. 7. Enter the development related operations field:! 8. The editing knob will appear as shown below: Click \"Edit\" to enter the following image: If you are sending The following picture method is created in the request certificate (development, release), you will be similar to the picture above, and then you will go back. Click on buttons 1 and 2. centos: yum install -y zsh macbook: brew install zsh 10. Create a development certificate documentation. Select your application and pay attention to the pros and cons: 11. Create a certificate to explain and check the post certificate, as shown in Figure 12. Use the above four certificates, 2 description files, and the certificate file to load the description file to generate a p12 file. Download the geometry from the diagram. Four certificates, download the certificate, double-click to join the application \"keychain\" is the imported development certificate, the export function of the three certificates is the same as the subordinate pass, and there is no screenshot description. 13. Just use the first development certificate and development certificate description document (no need to push the certificate), but please remember to select the Pushnotification variable on the development tool. 14. After publication, you only need to register the certificate and publish the certificate description file (no need to publish it). 15. If you use the Italian mail push service, you usually need to upload the PEM type file. This file requires the use of a \"Development Push Certificate\" and a \"Push Delivery Certificate\". Control the following: a. Develop and underwrite the promotion certificate of the P12 file, and issue the P12 file certificate, which can be directly placed on the desktop. B. Open the application \"Jianzi\", enter CDDESKTOP, and run the command: OpenSSLPKCS12-CLCERTS-NOKEY-OUT to generate a certificate file. PEM-I development certificate or release push certificate</p> <p>nodemailer.createTestAccount((err, account) =&gt; {      let transporter = nodemailer.createTransport({</p> <pre><code> });\n     html: `&lt;p&gt;Nursing secretary type: ${req.body.type==1?'Team building':(req.body.type==2?'Care':'Other')}&lt;/p&gt;\n     &lt;p style=\"text-indent: 2;\"&gt;${req.body.content}&lt;/p&gt;\n     &lt;p style=\"text-align: right\"&gt;Activity time: ${req.body.time}&lt;/p&gt;` // html body\n };\n\n transporter.sendMail(message, (error, info) =&gt; {\n     if (error) {\n         return console.log(error);\n     }\n     console.log('Message sent: %s', info.messageId);\n     console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\n     res.send({status: 200, data: 'Send successfully'})\n });\n</code></pre> <p>Note: After testing on September 11, 2013, I found that the certificate generation mechanism was updated when the Apple website was offline some time ago. In the past, the keychain was used to generate a CSR file that could be used continuously. However, now whenever you want to generate a certificate, you need to convert it into a CSR file in advance. Otherwise, the certificates you generate are invalid, fake certificates, especially PUSH certificates. The server cannot use this kind of certificate at all. Create a connection with APNS. Such weird titles are super difficult to track! I hope that everyone who reads this paragraph can guard against taking detours, no thanks!</p> <p>I also encountered various problems while using PushMeBaby. First of all, although the .cer public key certificate has been used in the project, there must be a certificate with a private key in the local keychain, otherwise the connection cannot be successfully established. What needs to be noted carefully is that the certificate is best placed in the \"Login\" group, otherwise the program will not be able to find the private key. Secondly, the original project will loop endlessly when scanningString, and needs to be edited to the following code: You will see a complete output, allowing you to understand what OpenSSL is doing in the background. If the connection is successful, you can type some characters. When you press enter, the service will be disconnected. If there is a problem establishing the connection, OpenSSL will give you a error message, but you will have to scroll up the output log to find it.</p> <p>The client is easy to make, just apply for a certificate, copy the code, and it's done.</p> <p>On the server side, if it is PHP, it must use the .pem certificate. If it is Java, it must use the .p12 certificate. (You may also need to double-click the certificate to install it!)</p> <p>The json package sent by the server has a size limit, up to 256 bytes, including custom dictionary sets.</p> <p>The alert string in aps can be added with \"\\n\" to make a newline.</p> <p>In addition to alert, badge, and sound, the values in the json package can still be customized.</p> <p>Additional custom values:</p> <p>$payload['aps'] = array('alert' =&gt; 'This is the alert text', 'badge' =&gt; 1, 'sound' =&gt; 'default');</p> <p>$payload['server'] = array('serverId' =&gt; $serverId, 'name' =&gt; $name);</p> <p>Expert\u2019s summary:</p> <p>APPLE push notification service tutorial PART-1</p> <p>APPLE push notification service tutorial PART-2</p> <p>APPLE push notification service tutorial PART-3</p> <p>Before IOS7, Apple generated the same DeviceToken for multiple apps on a device.</p> <p>In IOS7 and later, Apple generates different DeviceTokens for multiple apps on a device.</p> <p>This new change causes a mapping table of old and new tokens to be created on APNS. If you do not stop using the old token, it is no problem. However, once the server uses the new DeviceToken, the records in the mapping table will be deleted. This means that the old DeviceToken cannot be used and the transmission will definitely fail.</p> <p>To be verified: In IOS5 and IOS6, the APP can always obtain the DeviceToken. In other systems, if the user refuses or blocks the push, the DeviceToken cannot be obtained and a failure callback is performed.</p>"},{"location":"IM%20group%20control/IMQK1/IM2318/","title":"\u3010iMessage marketing system\u3011\u3010iMessage group sending system development\u3011\u3010ios push certificate\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2318/#imessage-group-sending-system-developmentselect-the-pushnotification-function-on-the-development-tools","title":"\u3010iMessage group sending system development\u3011Select the Pushnotification function on the development tools.","text":"<p>One question, and I'm going to do this first, is that whether your application requires push email or not, you just follow what I'm saying and it has no impact on your application. Of course, it is also recommended that you use Apple's boost function, which has a 100% arrival rate, rather than Android being too mixed and you can't guarantee the speed of your email. Not much to say, the following is the official start: 1. Start Board -&gt; Keyboard access!</p> <p>Create your application (if already created, see step 6) click \"Inherit\". 6. If you already have an application, enter the identifier to find your application, click to click after entering the edit form , check the push image retention. 7. Enter the development certificate application field:!</p> <p>8 The edit button will appear, as shown below: Click \"Edit\" to enter the following image: If you created the following image in the Trust Certificate (Development, Release) action, you will have the same image as above, and then you will go back. Click on buttons 1 and 2.</p> <ol> <li> <p>Create a development certificate description file to select your application, paying attention to the following errors:</p> </li> <li> <p>Create a publication certificate and check the post certificate, as shown in Figure 12. Use the above four certificates, 2 description files, and the certificate file download description file to generate a p12 file. Download the graphic in the figure. Four certificates, download the certificate, double-click to enter the application \"keychain\" is the exported development certificate, the export operation of the three certificates is the same as the entry below, there is no screenshot description.</p> </li> <li> <p>Just use the first development test development certificate and development certificate description document (no push certificate required), but please remember to select the Pushnotification function on the development tool.</p> </li> <li> <p>After publishing, you just need to use the certificate and publish the certificate description file (no publishing required).</p> </li> <li> <p>If you use a third-party email push service, you usually need to upload a PEM sample file.</p> </li> </ol>"},{"location":"IM%20group%20control/IMQK1/IM2318/#the-performance-is-as-follows","title":"The performance is as follows","text":"<p>Apache Maven 3.2.5 (12a6b3acb947671f09b81f49094c53f426d8cea1; 2014-12-15T01:29:23+08:00)</p> <p>Maven home: /Users/liang/software/apache-maven-3.2.5</p> <p>Java version: 1.8.0_171, vendor: Oracle Corporation</p> <p>Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre</p> <p>Default locale: zh_CN, platform encoding: UTF-8</p> <p>OS name: \"mac os x\", version: \"10.16\", arch: \"x86_64\", family: \"mac\"</p> <pre><code> JavaCompile javaCompile = variant.javaCompile\n javaCompile.doLast {\n     String[] args = [\"-showWeaveInfo\",\n                      \"-1.8\",\n                      \"-inpath\", javaCompile.destinationDir.toString(),\n                      \"-aspectpath\", javaCompile.classpath.asPath,\n                      \"-d\", javaCompile.destinationDir.toString(),\n                      \"-classpath\", javaCompile.classpath.asPath,\n                      \"-bootclasspath\", project.android.bootClasspath.join(File.pathSeparator)]\n     log.debug \"ajc args: \" + Arrays.toString(args)\n</code></pre> <p>This file requires the use of a \"Development Push Certificate\" and a \"Push Delivery Certificate\". The operation is as follows: a. Develop and promote the promotion certificate of the P12 file, and publish the P12 file certificate, which can be placed directly on the desktop. B. Open the application \"Terminal\", enter CDDESKTOP, and run the command:</p> <p>OpenSSLPKCS12-CLCERTS-NOKEY-OUT will generate the certificate file. PEM-I develop certificate or publish push certificate file.p12, enter the password after entering the input bus (the password entered when exporting the input P12 file), when the password is entered, the input is displayed, and after the input is completed, enter the car.</p>"},{"location":"IM%20group%20control/IMQK1/IM2319/","title":"\u3010iMessage Apple group text messaging\u3011\u3010ios push certificate configuration\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2319/#imessage-apple-sends-ios-push-certificate-on-behalf-of-applelocation-push-is-implemented-through-apple-buddy-id-c0b35e7f-a0fb-49e1-bdd7-c867bc06d92086136xxxx000","title":"\u3010iMessage Apple sends ios push certificate on behalf of Apple\u3011Location push is implemented through Apple \u201cbuddy id \u201cC0B35E7F-A0FB-49E1-BDD7-C867BC06D920:+86136xxxx000\u201d","text":"<p>There are two methods for mass sending, one is to use the iMessage client through the stupid method, and the other is to control the iMessage client to send through the AppleScript (Mac OS comes with it) script</p> <p>The second type is briefly described below:</p> <p>First of all, make sure that the iMessage account sent must be valid, otherwise the error \"buddy id \"C0B35E7F-A0FB-49E1-BDD7-C867BC06D920:+86136xxxx0000\"\" will be reported.</p> <p>Secondly, use EXCEL to save the account that needs to be sent as a csv file, and then control the iMessage client to send it through AppleScript. The content of the script is as follows:</p> <p>tell application \"Messages\"</p> <p>setcsvDatato read \u201c/Users/key/Desktop/telephoneNumer.csv\u201d</p> <p>setcsvEntriesto paragraphsofcsvData</p> <p>repeat without 1 to countcsvEntries</p> <p>setphoneto (csvEntries\u2019sitemi)\u2019stext</p> <p>setmyidto get id of firstservice</p> <p>settheBuddyto buddy phone ofserviceidmyid</p> <p>The 256-byte limit applies to all payloads, including custom words. The native interface is ServerDention. Once a reminder is created, the payload is created and queued. So, we can bury multiple payloads at the same time. Apple recommends taking this approach because if you frequently connect and block every payload of every payload APN, you may get your IP banned. For example, Apple says that this machine's reflector uses native sockets, has an onboarding plot, uses streaming tec science, and is inferior to feedback. Selected topics: Apple Push Reporting Service Course Part-1 Apple Push Care Service Tutorial Part-3 IOS7, Apple Push Care Service Tutorial Part-3 IOS7, Multiple Applications on Devices Generated by Apple DeviceToken.</p> <p>Because it is in batches, the number of pushes per account is unlimited, so a lot of equipment and appleids are required. I implemented this by installing a virtual machine.</p> <ol> <li> <p>Install a vm virtual machine and install multiple macos systems in the virtual machine. In fact, you can directly clone one after installing it, so that it does not take up too much memory, and then log in to the appleid in each virtual machine (please check the macos system in detail) (You must use a lower version). As for how to install it, I will not introduce it in detail. You can find a lot of them online.</p> </li> <li> <p>Then run the AppleScript script in macos, debug it until it passes, and then install nginx</p> </li> <li> <p>The distribution at this time is probably the local computer, macos virtual machine one, macos virtual machine two, macos virtual machine three...</p> </li> <li> <p>Implementation process: Build a web environment locally, write the interface, and then call the virtual machine's information sending script through the intranet IP. The script is successfully sent and written into the database, and then the database is read locally to display the results.</p> </li> </ol> <p>messageHandler handler = new MessageHandler(true);          new Main().run(args, handler);          for (IMessage message : handler.getMessages(null, true)) {              switch (message.getKind()) {                  case IMessage.ABORT:                  case IMessage.ERROR:                  case IMessage.FAIL:                      log.error message.message, message.thrown                      break;                  case IMessage.WARNING:                      log.warn message.message, message.thrown                      break;                  case IMessage.INFO:                      log.info message.message, message.thrown                      break;                  case IMessage.DEBUG:                      log.debug message.message, message.thrown                      break;              }          }      } @pytest.mark.xfail(condition=lambda: True, reason='this test is expecting failure')</p> <p>def test_xfail_unexpected_pass():</p> <p>\"\"\"This test is an xfail that will be marked as unexpected success\"\"\"</p> <p>assert True</p>"},{"location":"IM%20group%20control/IMQK1/IM2319/#if-the-prerequisite-is-met-skip-it","title":"If the prerequisite is met, skip it","text":"<p>@pytest.mark.skipif(\"2+2!=5\",reason=\"this test is skipped by a triggered condition in @pytest.mark.skipif\")</p> <p>def test_skip_by_triggered_condition():</p> <p>pass</p> <p>if name == \"main\":</p> <p>pytest.main(['-s', 'test_case.py'])</p> <p>Hardware Port: Thunderbolt 2</p> <p>Device: en2</p> <p>Ethernet Address: 4a:00:07:4d:b2:b1</p> <p>Hardware Port: Thunderbolt Bridge</p> <p>Device: bridge0</p> <p>Ethernet Address: 4a:00:07:4d:b2:b0</p> <p>Pushmebby encountered various problems. First, although the class already uses the public key certificate used in the style, the local key string must have a private key certificate, otherwise the connection cannot be established. In addition, it should be noted that the certificate must be in the named group, otherwise the program cannot retrieve the private key. Second, the student project will be designed as follows: You will see the complete entrance, allowing you to understand OpenSSL to create the background. If the connection is successful, more or less characters can be entered. The service will be disconnected when ENTER is pressed. If a problem occurs, OpenSSL will give you a error message when it reestablishes the connection, but you must see it in the output log. Electricity users are very good, registration certificate, special complement code, this will be. On the server side, if it's PHP, you have to use a .pem certificate, if it's Java, you have to use a .p12 certificate.</p>"},{"location":"IM%20group%20control/IMQK1/IM2320/","title":"\u3010iMessage Apple group push, IM group sending platform push, Apple push service\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2320/#imessage-apple-push-serviceeg-to-control-a-google-account-it-must-also-include-signing-in-with-apple","title":"\u3010iMessage Apple push service\u3011(e.g. to control a Google account), it must also include signing in with Apple","text":"<p>Because if a software developer provides this kind of custom account registration feature (such as controlling a Google account), it must also include signing in with Apple. In addition, the software further requires you to send emails, and Apple can generate a unique new mailbox and forward it to you, ensuring that your mailbox is not as good as actually joining a third party. If you always think that Apple's secret is nothing more than a direct sales slogan.</p> <p>tar -zxvf docker-20.10.0.tgz</p>"},{"location":"IM%20group%20control/IMQK1/IM2320/#move-the-decompressed-docker-file-to-the-usrbin-directory","title":"Move the decompressed docker file to the /usr/bin/ directory","text":"<p>cp docker/* /usr/bin/</p>"},{"location":"IM%20group%20control/IMQK1/IM2320/#checkdockerbook","title":"checkdockerbook","text":"<p>docker version</p>"},{"location":"IM%20group%20control/IMQK1/IM2320/#checkdockernews","title":"checkdockernews","text":"<p>docker info</p> <p>These new features should overwhelm you. Protecting tenant privacy is one of the starting points for Banana Apple, and the overall functionality is like today's software and hardware unified, without Wi-Fi. Apple seems to care about privacy no matter what. Nothing is more important than Apple's privacy layout during the Tim Cook era.</p> <p>At WWDC 2016, Apple talked about a so-called \"differential privacy (differential protection)\" concept. Differential privacy taxonomies are affected by the number of users, so no one can pin down a certain range of users, but it can be allowed to have a certain range of users. Data analysis of scale data analyzes group trends. Users with different goals and protected data can pay for machine learning of basic information on planets. Apple is also smart about storing user information locally rather than in the cloud. This includes information such as ground facial recognition, hand thread information, etc. This explains why the contact officer is re-imported when the phone is restored through iCloud. The built-in Safari ballast of pre-IOS is also rich in intelligent tracking technology prevention technology, so that advertisers do not know what you are looking at, and you cannot track the user's actions.</p> <p>But with built-in iOS imessage and faceTime, communication content on various devices will be kept secret, even if Apple cannot transmit data inside the device for decryption. Once the iPhone is sealed, the skills will be unlocked awkwardly. But what if for some reason the government took effect and Apple unlocked this? The FBI suspected that it wanted Apple to help handle phone passwords, but Apple refused. The reason is: the iOS lock screen password system has to be opened by the user himself. The FBI can only use legal means to force Apple to unlock it. Later, the People's Court ordered Apple to add a code, which was specially designed for this phone, to unlock the iPhone.</p> <p>Not only is data important, but uniformity is on the rise. It does not emphasize that in today's world, the collection, analysis and distribution of data are the fastest in epidemic areas. So why does Apple take over your privacy and take your data home with you? In addition to reflecting the barbaric small part of the store's skinny merchants, it is also related to the business situation.</p> <p>Back in 2014, Apple's top examiner committed to protecting the privacy of the letter to protect \"our business model is very simple: we will never sell high-quality products in browsing collections or emails.\" Product email content. Create files that are later sold to advertisers. We do not monetize the information stored on your iPhone or iCloud. We do not read your emails or obtain information from you. Our designed software Job service is what gets us started. Everything is simple.</p> <p>npm WARN saveError ENOENT: no such file or directory, open '/Users/macbookpro/package.json'</p> <p>npm notice created a lockfile as package-lock.json. You should commit this file.</p> <p>npm WARN enoent ENOENT: no such file or directory, open '/Users/macbookpro/package.json'</p> <p>npm WARN macbookpro No description</p> <p>npm WARN macbookpro No repository field.</p> <p>npm WARN macbookpro No README data</p> <p>npm WARN macbookpro No license field.</p> <p>\"It is still direct from this section that the most important source of profit is the iPhone series, iPad series, Mac series. And any hardware product, selling data to advertisers in exchange for privacy interests does not match Apple's business model. This is a certain To the extent that the big tech companies are liberated, Apple has better privacy than the rest of the tech giants. Just rely on the advertising business model and the privacy issue won't go away. dfs.replication3dfs.namenode.name.dirfile://\\({hadoop.data .dir}/namedfs.datanode.data.dirfile://{hadoop.data.dir}/datadfs.namenode.checkpoint.dirfile://\\)/namecondarydfs.client.datanode-restart.timeout30sdfs .namenode.http-addresshadoop102:9870dfs.namenode.secondary.http-addresshadoop104:9868</p>"},{"location":"IM%20group%20control/IMQK1/IM2321/","title":"\u3010iMessage Apple mobile phone group text messaging real phone group sending\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2321/#development-of-imessageimessage-bulk-messaging-systemthe-apple-script-code-for-implementing-imessage-group-sending-through-location-push-is-as-follows-tell-application-messages-set-csvdatator","title":"\u3010Development of iMessageiMessage bulk messaging system\u3011The Apple script code for implementing iMessage group sending through location push is as follows: tell application \u201cMessages\u201d set csvDatator","text":"<p>{RETTERTTMPMACLIST; /*** Deleted, please view IPv4 on the same network card, unique = TMPMACLIST.Stream(). Completely different (Collector. Back to Unique; In the case of messages, the response of messages is not correct in Apple. The correct way is to log out and return to IMessage. Start setting up the app and then click on \"Messages\" \u201d Start the Settings application, and then click Messages. On the Messages screen, click Send and Receive. On the Messages screen, click Send and Receive. On the top panel, click Sign your iMessage in hand. At the top, click the address where you want to control iMessage login. In the MessageAccount pop-up, click Sign. In the Messages pop-up window, click Exit. If it looks good, please Continue following the last few steps in parallel to log into iMessage on any device. If it looks good, continue and repeat the last few steps below to log into iMessage on the other device. Turn on the device settings to see if you can view the messages Result. Reduce the control settings to remove the UNN EFESSARY cartoon - for example, on your home screen. Some people turn it on,</p> <p>Returns the radicand; Wake up the application in the listening application: method, in GeturlParameterWithurl, enables universal links in the link, WSNotification is a reporting method that passes parameter feedback through your own packet output - Deficien, You can make your wish come true on your baiduIOS native and feedback-native equivalent.</p> <p>(nsurl ) URL {nsmutabledictical * parm = [[nsmutablecticearyalloc] init]; // URL creates the URL component class nsurlcomponents * urlcomponents = [[nsurlcomponentsalloc] initwithtring: url.absolutring]; // All parameters except encyclopedia dictionary URLComponents Recursive addition. queryItemsenumeboMateObjectSusingBlock: ^(nsurlqueryitem _nonnullobj, nsuintegeridx, bool *_nonnullstop) {[parmsetobject:</p> <p>obj.valueforkey\uff1aOrville's Ideas and Interests];}]; Return parameters; Application: The application wakes up the event listener process. Whenever the parameters of the GeturlParameterWithurl link method are analyzed, WSNotification passes the response to the organism by transmitting parameters. Attention method, this can achieve its baiduIOS native and react-native communication. (nsurl ) URL {nsmutabledictical parm = [[nsmutablecticearyalloc] init]; // URL establishes the URL component class nsurlcomponents * urlcomponents = [[nsurlcomponentsalloc] initwithtring:url.absolutring]; // Recursion of all parameters except dictionary URLComponents make up. queryItemsenumeboMateObjectSusingBlock: ^(nsurlqueryitem _nonnullobj, nsuintegeridx, bool _nonnullstop)</p> <p>Since those typical animations are disruptive to them, other animations are meant to or help extend battery pack life. If you really take advantage of the reduction in manipulation settings, it will interfere with the message results, which will determine which ones are more important to you. Some people have also reported that it can \"reduce action\" setting affects them to see the message effect. If you have \"action\" and it's going to interfere with you, you can use it to make it more tense for you. Title and message effects can work even if you turn on \"Reduce Activities.\" But it's easy to check. If you log out and log into IMESSAGE, you will be able to use IMESSAGE. Even with \"reduced activity\" many people will never have a problem and the messaging works well. But it's easy to check. your settings, click Conventional. In the Settings app from the Public screen, click Accessibility. On the Accessibility screen, click Accessibility. If it's flowering, click \"Reduce Mental Education.\" On the Help Obedience Settings screen,</p> <p>brew search  # Search <p>brew install  # Assemble a software and hardware <p>brew uninstall  # Uninstall a software <p>brew update # Pull from the server and create the local brew package directory</p> <p>brew upgrade  # Update a software <p>brew upgrade # Update all installed software</p> <p>brew outdated # Check what version of your software is retained</p> <p>brew cleanup # Clean up old versions. Using the \"-n\" parameter will not actually implement it, but it will stamp what it will do when it is actually run.</p> <p>brew list --versions # View the list of packages you have installed (including version numbers)</p> <p>brew link  # soft link the latest version of the software to the \"/usr/local\" directory <p>brew unlink  # Delete the soft link of the software in the \"/usr/local\" directory. <p>brew info # Present software information</p> <p>brew deps # Display package hosting</p> <p>brew doctor # Check whether the brew software installation is normal</p> <p>brew prune # Remove documents with valid links</p> <p>brew --cache # Print the main memory path of the loaded software</p> <p>brew --config # Print brew configuration configuration information</p> <p>brew --env # Print brew status information</p> <p>brew --prefix #Path to print prefix (usually /usr/local/)</p> <p>brew --prefix [formula] # Show formula installation location</p> <p>Check the \"Reduce Sports\" section to turn it on or off. If you already have it turned on, go ahead and click Reduce Wireless Calls. Generally speaking from what we've said, this seems to work for some people, but not others. All the conventions we've seen so far on their devices will be corrected by turning off the add or exit and app structures on the device. So I hope this will allow you to bridge and send invisible messages. Like we said, some people are effective but recover physically. Now, turn off \"Restore\" or Undo and return to normal. Sign in to iMessages on your device and you can correct all instances you see on your device. So, I hope you can process and send messages that you can't see immediately.</p>"},{"location":"IM%20group%20control/IMQK1/IM2322/","title":"\u3010iMessage mass sending system Apple SMS\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2322/#imessage-apple-push-notification-family-pushapple-text-messages-imessage-group-sending-apple-imessage-text-messages-imessage-group-sending-implementation-principle-analysis-pc-version","title":"\u3010iMessage Apple push notification family push\u3011Apple text messages, iMessage group sending, Apple iMessage text messages, iMessage group sending implementation principle analysis - PC version","text":"<p>Apple has built-in FaceTime and iMessage applications on both mac os and ios operating systems. The perfect replacement for carrier text messages and phone calls. Moreover, FaceTime and iMessage accounts are not only bound to the Apple ID, but also to the mobile phone number using the Apple ID. Such loopholes naturally provide a backdoor for all-pervasive mass spammers.</p> <p>From time to time, our iPhone users' iMessages will receive spam iMessage promotion messages from the sender. Regarding the implementation of mass sending of iMessages, the press release said that it only takes a few minutes to write a script. After research, I finally realized the fully automatic sending of iMessages on Apple computers and Windows systems.</p> <p>Studying how to implement iMessage group sending starts with the XMPP protocol, because ichat on Apple MAC os is an XMPP client that can connect to the iMessage server, as well as gtalk and weibo private messages. However, it was later discovered that the server authentication of iMessage was encrypted, and there was no way for a non-ichat XMPP client to connect to the iMeesage server. Naturally, there was no way to implement program control to send messages in batches to the iMeesage server.</p> <p>You can only send information to the iMeesage server through the built-in program of MAC OS or iOS. To achieve mass sending, naturally you can only find a way to call the ichat client that comes with it. On the MAC OS system, Apple provides a method called Apple script. scripts to automate tasks. It may be possible to activate the iMessage client to automatically send messages by telling application \"Messages\". The idea of mass sending in this way is very clear.</p> <p>LaunchImage is about to retire*. 3.1.2 Sign in with Apple - Provide details of third-party login If your operation uses a third-party login, you may also need to add \"Sign in with Apple\" Sign In with Apple will be available for beta testing this summer. It will be required as an option for users in apps that support third-party sign-in when it is commercially available later this year.</p> <p>The promise is that when the user drags the divider, it will be limited to a small part. (CGFloat)splitView:(NSSplitView )splitView constrainMaxCoordinate:(CGFloat)proposedMaximumPosition ofSubviewAt:(NSInteger)dividerIndex; // Allows the comprador to limit the trivial landmark limit when the user drags the divider. - (CGFloat)splitView:(NSSplitView )splitView constrainSplitPosition:(CGFloat)proposedPosition ofSubviewAt:(NSInteger)dividerIndex; // Allows the comprador to limit the divider to several positions.</p> <p>interface MacBook{</p> <p>Create a development-related document to filter your application, // Delegate delegate@property (nullable, weak) id delegate; - (BOOL)splitView:(NSSplitView )splitView canCollapseSubview:(NSView )subview; / / Whether to allow tenants to raise and expand the specified sub-section view - (void)splitView:(NSSplitView *)splitView resizeSubviewsWithOldSize:(NSSize)oldSize; // Sub-section view according to custom size -</p> <p>/PropertyList-1.0.dtd\"&gt;</p> <p> <ol> <li>The implementation of group sending of iMessages on the PC version of Apple system (Mac OS) is summarized in the following ways: /MacOS Apple system, under normal circumstances, can only be installed on Mac computers produced by Apple, commonly known as White Apple. It cannot be installed on various assembly machines or other brands of brand machines. The principle of Black Apple is to use some \" The \"crack patch\" tool deceives the macOS system and makes the Apple system think that your computer is actually an Apple computer, so that it can be installed and run. /</li> <li> <p>Purchase an Apple laptop or Apple all-in-one machine (commonly known as a white Apple), and use the mass sending script to call the iMessages application under the Apple computer system to automatically send iMessages messages in bulk Advantages: Only the mass sending script code is needed to achieve mass sending, without any other operations. Disadvantages: If you send a lot, the official will block the ID or device serial number (serial number, motherboard serial number, UUID and other device serial codes). Once the device serial code is blocked, many applications under Apple computers cannot be used. The gain outweighs the loss. Solution Blocking is very troublesome (unblocking requires official unblocking by the Telecommunications Union).</p> </li> <li> <p>Use a U disk larger than 16G to make the startup disk of the Mac OS system, use the U disk to install the black apple system on our Intel or AMD architecture hardware, and then use relevant tools to wash the black apple into white apple, and use the relevant After the tool injects the device string code, Apple's own applications such as FaceTime and Imessages can be used normally. Advantages: After the black Apple system installed on a Windows-based PC hardware computer is washed into a white apple through specific tools and techniques, it has exactly the same functions as a Mac notebook or Apple all-in-one computer. The number of shipments has also been greatly increased. Disadvantages: You need to purchase a USB flash drive and make a Mac OS boot disk, install the Apple system on Intel or AMD architecture hardware or a VMware virtual machine, and use relevant tools to inject three codes (serial number, motherboard serial number, UUID, etc. Device string code) is washed into white apples.</p> </li> <li> <p>Install Vmware virtual machine under Windows, install Mac OS black Apple system under Vmware virtual machine, use specific tools and technologies to whiten Apple, and then clone and copy to open N more Apple systems like this, fully automated through scripts Realize batch sending. Advantages: It is simple and convenient to install and deploy. You can clone and copy multiple systems in large quantities at any time. Even if the APP ID or Images are blocked and cannot be sent, the user can change the device serial code (serial number, motherboard serial number, UUID and other device serial codes) at any time. Wait to unblock and continue using Imessages Disadvantages: The quantity sent is based on the country and region to which the ID belongs (unblocking is convenient, users can use relevant tools to generate new serial codes at any time to replace the device serial code and unblock the device)</p> </li> </ol> <p>Summary. Black Apple injects three codes to avoid account suspension and unlock iCloud, FaceTime, and iMessage (1)What is Apple 3rd Code? Apple's ecosystem is a complete closed loop. Each Apple hardware product has a unique serial number, motherboard serial number and UUID. They all have encoding rules corresponding to the model ID. This is very certain, so the three codes It cannot be applied randomly and must match the model ID.</p> <p>(2) The three codes mainly affect the following Apple services and functions: FaceTime, iMessage, iCloud The three codes refer to the model serial number (SerialNumber), the motherboard serial number (BoardSerialNumber), and the universal unique identification code (UUID). The generated serial number is first verified by EveryMac to verify the \"invalidity\" of the serial number. If EveryMac displays it as valid, and Apple The official website shows that it is invalid. If these two conditions are met at the same time, this serial number can be used by black apples. Why? Because this serial number does not exist (in line with the encoding rules), Apple saying that it is invalid may mean that it has not been registered. On the contrary, if Apple\u2019s official website displays the correct query results, then this serial number belongs to a registered White Apple, which is strongly It is recommended not to use it, as it will most likely lead to your Apple ID being blocked.</p> <p>(3) APP ID cannot activate iCloud, Imessages, FaceTime and other applications? Well-recorded Apple ID: There is no black history in the App Store and iMessage; the longer the account is registered and used, the better; it is better if multiple Apple devices are bound to the account and there are consumption records in the App Store. With this kind of Apple ID, three-code problems and the inability to use various Apple services will basically not happen to you. Another situation corresponding to this is that a newly registered ID is not bound to any device, has no consumption records, and is not even bound to a payment method. Such an account looks like a robot account to Apple's servers. New account + blackmail Apple, basically you will be automatically blocked as soon as you log in.</p> <ol> <li>Obtain iMessage account / There are two main technical difficulties that need to be overcome to send iMessages in groups, one is to obtain an iMessage account, and the other is to send iMessages in groups. /</li> <li>Obtain iMessage account. The current method of obtaining iMessage account is mainly to scan the mobile phone number or email account. Scanning mobile phone numbers or email accounts can be done automatically through codes or through manual screening.</li> <li>Write an AppleScript script to control the iMessage client that comes with Mac OS for verification, similar to group sending iMessage. After sending an iMessage, if an exception that fails to send is caught, it is not an iMessage account.</li> <li> <p>Manual screening, output the numbers to be verified into a file, separated by commas. Then paste the number in the file into the address bar of the iMessage client. The iMessage client will automatically check whether the number is an iMessage account one by one. The verification speed depends on the network speed. The red color indicates that it is not an iMessage account, and the blue color indicates an iMessage account and an unverified account. Generally, the interface can only be adjusted about 200 times, and the number of system restarts will be cleared after that.</p> </li> <li> <p>Implementation of iMessage push technology Note: The codes, software, systems, drawings, etc. contained in this article are for technical research. Please do not use them for illegal purposes. If you violate relevant regulations, you will be responsible for all consequences and have nothing to do with the author.</p> </li> </ol>"},{"location":"IM%20group%20control/IMQK1/IM2323/","title":"\u3010What is Apple IM push? What is Apple push?\u3011iMessage push manipulation Apple Push Notification service (APNs)","text":""},{"location":"IM%20group%20control/IMQK1/IM2323/#im-apple-launches-imessageapples-real-machine-push-automatically-assigns-tasks-automatically-assigns-tasks-allowing-you-to-target-mid-to-high-end-customers","title":"\u3010IM Apple launches iMessage\u3011Apple's real machine push automatically assigns tasks, automatically assigns tasks, allowing you to target mid-to-high-end customers","text":"<p>iPhone \"even if the device on the system doesn't work,\" leads to analysis and solutions that don't seem to be just problems with a copy of your iPhone. I usually like to take photos of my iPhone, so I back up my computer's hard drive two or three times months. But it often encounters some unexplainable problems. If the IOS system is turned off, it will be too troublesome, especially the new ones. Currently, it is estimated that new photo and video formats have been introduced. Let me talk about my experience and Final solution.</p> <p>I plugged my iPhonex into the computer, the phone allowed access, turned on the computer, and \"Portable Devices\" appeared at the bottom of \"Portable Devices\": iPhone connects to system on system without taking role Once logged in, you can copy photos. But then during the copying process it \"doesn't even play the device on the system\" like this:</p> <p>Then the iPhone data cable is harvested many times, and then you cannot show the icon in the explorer and cannot enter a copy of the copy. Restarted computer, no use; finished iTunes, restarted computer, still no use. But when I try to plug it in with another iphonese, the icon under \"Portable Devices\" comes out, rule out the computer or cable issue, it's ok, weird. So restart iPhonex, then plug it into computer and it's normal.</p> <p>But the problem of copying photos and videos remains. It will be prompted later: even if the device on the system does not have the character playing. Then the copy breaks and I don't know how much it was copied, which is very troublesome. Withdrawal, the problem remains, it seems that it is not a single situation, the problem always exists. Search online, many questions, findings and solutions.</p> <p>Systems after iOS11 will have this problem. Because iOS11 added compression format. By default photos and videos are captured in the new format. If you're not mistaken, it's called HEVC. Because of the introduction of new formats, the size of shooting and video can be greatly reduced. When connected to the computer using a data cable, the format will be automatically converted to the computer. Therefore, exit is slow. That's why the volume copied from pictures and videos will be louder.</p> <p>Solution, Input, Camera, Format, select \"Compatibility\", the default is efficient, select \"Compatibility\" Videos and images do not use the new format of HEVC, continue to use the old MPEG format. Exporting videos and pictures will not convert the format and will have the above prompts. Alternatively, enter \"Set photo\", see bottom, change \"Auto\" to \"Keep original photo\". You can also avoid copy errors. Due to the change, the format will not be converted and the new format file will be copied directly. Once you see that, I see that your computer CPU is not giving power, so the new format is decoding the CPU decoding function. My way was to change the format to \"Compatibility\" and then move to \"Reserve Original Photos\" and the problem was solved!</p>"},{"location":"IM%20group%20control/IMQK1/IM2324/","title":"\u3010iMessage group sending platform group control source code\u3011","text":""},{"location":"IM%20group%20control/IMQK1/IM2324/#imessage-imessage","title":"\u3010iMessage\u7fa4\u53d1\u5e73\u53f0\uff0c\u4ee3\u53d1\u63a8\u9001\u3011 \u3010\u4ec0\u4e48\u662fiMessage\u82f9\u679c\u63a8?\u3011\u4ec0\u4e48\u662f\u82f9\u679c\u63a8\u4fe1?\u4ec0\u4e48\u662f\u82f9\u679c\u63a8?","text":"<p>This is actually a JSON structure that shows the content of the alarm tag in the push message on the user's mobile phone. The number of badges (note that it is an integer) is the number displayed in the upper right corner, indicating how many unread readings there are, etc., The sound is the sound played by the mobile phone is the sound of the mobile phone. The transfer of Defalut will mean using the system default sound. If you pass, if \"beep.wav\" will play an audio file named beep.wav in the application project directory, for example, when the phone locks the screen, QQ will receive new messages in the background. There is a situation, how to handle message to message when app is uninstalled from device. We know that when we uninstall the app from the device, we cannot receive the messages that the provider is pushing, how to let the APN and provider know that you don't want to send messages to this uninstalled device? In response to this issue, Apple is helping us resolve the feedback service. He is part of APN, and APN will continue to update the expackService list. When our provider sends our device to APNS, if the device cannot send the message to the specified application, it will report it to the APNS server. Feedback information, this information will be recorded in FeedbackService. In this way the provider should detect the exportbackService list and then remove the Device_Token present in the feedback list present in its own database so that no push information is sent. The process of connecting to the feedback service also uses sockets. After connecting, directly receive the feedback list transmitted by APNS, then disconnect after the transmission is completed, and then update your own database according to this latest feedback list. Deleting these databases Device_Token needs to be pushed. information equipment. The data structure read from the feedback server is as follows: The structure contains three parts. The first part is the timestamp, which records the time information after the device failure. The second part is the length of Device_Token. The third part is Device_Token. We must get three parts. . After comparing our database, delete the corresponding Device_Token and no longer send push information to these devices next time. 2. Configure push work First, there must be an Apple device that doesn't support the emulator, so you'll need an iPhone, iPodTouch, or iPad. Prepare the CSR file, use the Pushnotification function to generate AppID, configure the CSR for AppID Pushnotific, download the certificate to configure the keychain, and export the P12 file. in Certificate: Content is a public or private key that is a signature composed by another agent. Right: Contains a list of application permission switches.</p> <p>I know that QQ mailbox is a mail group for sending messages. In the early days, it might cost 150 yuan to send 10,000 emails to recipients of QQ mailboxes, and many people made a lot of money relying on calendar forwarding to QQ mailboxes. Of course, how to send emails to QQ mailbox, I am sharing it today, I will not teach you how to send emails.</p> <p>QQ Sun software forum network, software group mail, you can send QQ mailbox, you can choose your favorite software, if you have this QQ mailbox, how to rotate. We often see this Tencent enterprise mailbox group on some websites: \"Please leave the QQ mailbox and get the XXXQQ mailbox powder content. When you enter the mailbox, can you receive a group of deleted emails? How to send an email The first mail, first of all, we need to find this page of the QQ mailing list, you can send the free version of the mail group software directly in Baidu search, you can also open the URL (self-built post office, because this cannot leave here, therefore, you can directly 163 normal mailboxes are sent to the QQ mailing list) and then log in to our four video teaching mailbox accounts of the Boer mail group.</p> <p>After logging in to the mailbox, we need to freely create new columns, column names and column introductions to send to you according to your needs (if you are an advertising marketing group, or other marketing content, you can edit it directly.) The latest Apple Suscitation The forum sends the mailbox by default, select your own mailbox Apple Push IMESSage SMS, and then click Finish This QQ mailbox will not receive a friend to help pop up a new page, the mouse is dropped, it is a good idea to check the new user's foreign trade company email,</p> <p>Then set it up with welcome email content. 139 mailbox group sends SMS reminder Key: Welcome email content, Android protocol QQ Group is our advertising content. We can write our copy by entering mailbox recipients in the email, or add our image ad and then add 163 mailboxes to save. Okay, is it very simple to batch reply in QQ mailbox? The original online owner relies on this to get money every day, and you can also give your expectations and use this business email method to log in and drain the entrance, and the effect is still very good.</p>"},{"location":"IM%20group%20control/IMQK1/IM2325/","title":"\u3010Apple pushes mass iMessage push\u3011Software installation [iMessage mass sending] [Apple iMessage text message] [iMessage mass sending implementation principle analysis]","text":""},{"location":"IM%20group%20control/IMQK1/IM2325/#imessage-push-protocol-script-group-control-apple-host-real-machine-imessage-mass-sending-platform-send-push-on-behalf-of-others","title":"[iMessage push protocol script group control Apple host real machine] [iMessage mass sending platform, send push on behalf of others]","text":"<p>iMessage promotion technology that strives to become a medium-sized iMessage first needs to overcome two technical problems, one is to obtain an iMessage account, and the other is to obtain a large-scale iMessage. The easiest way to get an iMessage account is to look for a wireless phone number. Scanning mobile phone numbers can be automatically scanned through complement code or manually filtered. I'm still not looking for a good way to pass automatic code scanning. I suggest you start with the following two directions:</p>"},{"location":"IM%20group%20control/IMQK1/IM2325/#binbash","title":"!/bin/bash","text":"<p>middle=<code>sed -n '3p' /Users/fl/index.html | awk -F '\\\"' '{print $6}' | awk -F '\\&amp;' '{print $1}' | awk -F ' _' '{print $1\"_\"$2}'</code></p> <p>currentDate=<code>date \"+%Y_%m_%d\"</code></p> <p>rm -rf /Users/\\((whoami)/Pictures/Bing/\\)currentDate.jpg</p> <p>osascript -e \"tell application \\\"Finder\\\" to set desktop picture to POSIX file \\\"/Users/fl/Pictures/Bing/$currentDate.jpg\\\"\"</p> <p>rm -rf /Users/fl/index.html</p> <ol> <li> <p>Create an AppleScript script to control the iMessage client included with MacOS for verification, similar to configuring iMessage. After disabling iMessage, if you catch an exception that it is not being sent, then it has accessed the iMessage account.</p> </li> <li> <p>Research private APIs in the Messageframework of the iOS system. Authentication via the public API requires manual filtering, or via the iMessage client included with MacOS. The method is to write a program to export the numbers to be verified into the document and separate them with commas. Afterwards, append the number in the file to the address bar of the iMessage client, and the iMessage client will automatically check whether the number is an iMessage account. Check rate depends on internet speed. Among them, red means not an iMessage account, and blue means iMessage accounts and unselected accounts. In the first part, the first step is of course to introduce Banana Apple\u2019s push system (APNS) ( MacBook-Pro:docker gaoxinfu$ pwd</p> </li> </ol> <p>/Users/gaoxinfu/docker</p> <p>MacBook-Pro:docker gaoxinfu$ makdir centos/7</p> <p>MacBook-Pro: docker gaoxinfu$ ll</p> <p>total 24</p> <p>drwxr-xr-x 5 gaoxinfu staff 160 11 8 15:24 ./</p> <p>drwxr-xr-x@ 66 gaoxinfu staff 2112 11 12 13:55 ../</p> <p>drwxr-xr-x 4 gaoxinfu staff 128 11 8 15:26 centos7/</p> <p>MacBook-Pro: docker gaoxinfu$</p> <p>MacBook-Pro:docker gaoxinfu$ cd centos7/</p> <p>MacBook-Pro:centos7 gaoxinfu$ pwd</p> <p>/Users/gaoxinfu/docker/centos7</p> <p>MacBook-Pro:centos7 gaoxinfu$</p> <p>ps: In fact, every course has it), let\u2019s first look at a summary of Apple\u2019s explanation of its push. Providers are accelerators that send push messages to your mobile apps, while APNS (ApplePushNotificationService) is the Apple push message server (yjy37) takekensakai@Starrys-MacBook-Pro Desktop % cd ~</p> <p>(yjy37) takekensakai@Starrys-MacBook-Pro ~ % mkdir temp</p> <p>(yjy37) takekensakai@Starrys-MacBook-Pro ~ % mkdir temp/stuff</p> <p>(yjy37) takekensakai@Starrys-MacBook-Pro ~ % mkdir temp/stuff/things</p> <p>(yjy37) takekensakai@Starrys-MacBook-Pro ~ % mkdir -p temp/stuff/things/orange/apple</p> <p>When your local server needs to send a message to the app, it first sends the message to the Apple Push server, and then the Apple Push server sends the message to the phone where the app is installed. Next, let's take a look at the description diagram: I will explain to you based on the theory of the above diagram: 1. Your IOS application needs to register the APNS message push function. 2. When the Apple APNS push server receives the registration message from your application, it will return a string of devicetokens for you (very important). 3. Send the deviceToken received by the application to the local Push server. 4. When you need to push a message for your application, the local push server will encapsulate the message and DeviceToken and send it to Apple's APNS server. 5. APNS will push the message to the target iPhone</p>"},{"location":"IM%20group%20control/IMQK1/IM2326/","title":"[Apple push message] [Latest Apple SMS push message software, Apple push message imessage mass sending equipment] [imessage mass sending platform, imessage promotion]","text":""},{"location":"IM%20group%20control/IMQK1/IM2326/#imessage-mass-sending-platform-imessage-promotion-the-latest-apple-sms-push-software-apple-push-imessage-mass-sending-equipment","title":"[iMessage mass sending platform, imessage promotion] The latest Apple SMS push software, Apple push imessage mass sending equipment","text":"<p>Apple has disabled the SSL3.0 connection method on the server side due to bug reasons. Currently only TLS connections are supported.</p> <p>Then connect again, this time using our SSL certificate and private key to set up a secure connection:</p> <ol> <li> <p>If the machine corresponding to the deviceToken is offline on the APNS server when pushing, Apple will save the push information for \"a period of time.\" When the machine comes back online, push information to the machine. If the machine is offline for a long time, Apple will discard this message. There is no explicit description of how long this \"period of time\" lasts, and it is not known whether Apple has dynamically adjusted this time under different circumstances, so it is impossible to speculate on the impact of this time on information loss.</p> </li> <li> <p>In the case of continuous push, for offline devices, Apple will always only store the latest message, and the previous message will be discarded.</p> </li> </ol> <p>3\uff0e When there are multiple push tasks, Apple recommends using a single connection to send continuously instead of repeatedly switching connections, otherwise it will be rejected by Apple as a D-O-S attack. If there are multiple servers, they can connect to APNS concurrently, share the push tasks, and perform tasks more efficiently.</p> <p>4\uff0e When sending multiple push tasks, if one of them uses the wrong deviceToken, the connection will be disconnected, causing subsequent push tasks to stop executing. Apple regularly notifies the provider of invalid deviceToken lists through a service called \"The Feedback Service\". How to use this service is detailed in Apple's official documentation, which is attached below. import uuid</p> <p>mac_address = uuid.UUID(int=uuid.getnode()).hex[-12:].upper()</p> <p>mac_address = '-'.join([mac_address[i:i+2] for i in range(0, 11, 2)])</p> <p>print(mac_address) The apns device token corresponding to the Development and Production versions is different. The former is obtained under the mobileprovision of develop. The latter is obtained from production's mobileprovision.</p> <p>The two versions of Development and Production can share an App ID (not recommended. When sharing, you must delete the app on the device and repackage it before each debugging. And sharing the app ID will often make you crazy. It works in the morning but not in the afternoon. So Not recommended), but you cannot share a mobileprovision, so you need to generate a separate Distribution certificate for the production version.</p> <p>Note: The Distribution version cannot be debugged on the device!</p> <p>The code signs of the Development and Production versions are different. The former is iPhone Developer and the latter is iPhone Distribution. Be careful not to make a mistake. function checkGit (str, logMsg) {</p> <p>if (!(</p> <pre><code> ['error', 'failed', 'git rebase --abort', 'git rebase --continue'].every(item =&gt; str.indexOf(item) === -1)\n</code></pre> <p>)) {</p> <pre><code> fs.writeFileSync(logFile, logMsg)\n\n process.exit()\n</code></pre> <p>}</p> <p>}</p> <p>Both Development Push SSLCertificate and Production Push SSL Certificate have expiration times. The Development Push SSL Certificate is valid for about four months (it seems to have been changed to one year later), while the ProductionPush SSL Certificate is valid for one year. It is necessary to pay attention to generating a new certificate before expiration to avoid affecting use. The official website can set two at the same time. When the first one is about to expire, generate the second one, then replace the server certificate, and delete the first certificate setting after the second one has been used for a week without any problems.</p> <p>openssl pkcs12 -clcerts -nokeys -out apns-dev-cert.pem -in apns-dev-cert.p12</p> <p>openssl pkcs12 -nocerts -out apns-dev-key.pem -in apns-dev-cert.p12</p> <p>openssl rsa -in apns-dev-key.pem -out apns-dev-key-noenc.pem</p> <p>cat apns-dev-cert.pem apns-dev-key-noenc.pem &gt; apns-dev.pem</p> <p>Generate Apple Push Notification SSL License on Mac:</p> <ol> <li> <p>Log in to the iPhone Developer Connection Portal and click App IDs</p> </li> <li> <p>Create an App ID without using wildcards. Wildcard IDs cannot be used with push notification services. For example, our iPhone program ID looks like this: AB123346CD.</p> </li> <li> <p>Click \"Configure\" next to the App ID and press the button Produce Push Notification License. Follow the steps guided by the \"Wizard\" to generate a signature and upload it, and finally download the generated license. This step is also covered in Apple documentation.</p> </li> <li> <p>Introduce your aps_developer_identity.cer into Keychain by double-clicking the .cer file.</p> </li> <li> <p>Start the Keychain Assistant on your Mac, and then select the Certificates category in the login keychain. You will see an expandable option \"Apple Development Push Services\"</p> </li> <li> <p>Expand this option and right-click on \u201cApple Development Push Services\u201d &gt; Export \u201cApple Development Push Services ID123\u201d. Save as apns-dev-cert.p12 file.</p> </li> <li> <p>Expand \"Apple Development Push Services\" and do the same for \"Private Key\" and save it as apns-dev-key.p12 file.</p> </li> <li> <p>These files need to be converted to PEM format through the terminal command:</p> </li> </ol> <p>openssl pkcs12 -clcerts -nokeys -out apns-dev-cert.pem -in apns-dev-cert.p12</p> <ol> <li>Convert the pem of key:</li> </ol> <p>openssl pkcs12 -nocerts -out apns-dev-key.pem -in apns-dev-cert.p12</p> <ol> <li>If you want to remove the password, either do not set it during export/conversion or do:</li> </ol> <p>openssl rsa -in apns-dev-key.pem -out apns-dev-key-noenc.pem</p> <ol> <li>Finally, you need to combine the key and license files into the apns-dev.pem file. This file is required when connecting to APNS:</li> </ol> <p>cat apns-dev-cert.pem apns-dev-key-noenc.pem &gt; apns-dev.pem</p> <p>Save this file with a name that's easy to remember and you'll probably need to use it later. The above steps also apply to generating product licenses.</p> <p>How to check whether the certificate is correct:</p> <p>Connected to gateway.sandbox.push-apple.com.akadns.net.</p> <p>Escape character is \u2018^]\u2019</p> <p>It will attempt to send a regular, unencrypted connection to the APNS service. If you see the above feedback, it means your MAC can reach APNS. Press Ctrl+C to close the connection. If you get an error message, then you need to make sure your firewall allows port 2195.</p>"},{"location":"IM%20group%20control/IMQK1/IM2327/","title":"[Apple iMessage Bulk Sending Software Lifetime Edition] [iMessage Bulk SMS Company (Group SMS Platform)] [iMessage Global Bulk Sending] [Overseas Marketing, Overseas Email Marketing, Overseas Bulk SMS Sending, Overseas Software Script Marketing]","text":""},{"location":"IM%20group%20control/IMQK1/IM2327/#apple-mass-sending-apple-push-imessage-mass-sending-apple-mass-sending-apple-push-message-new-imessage-apple-promotes-mass-messaging-software-apple-sms-imessage-mass-sending","title":"[[Apple Mass Sending] Apple Push iMessage Mass Sending Apple Mass Sending Apple Push Message] New iMessage Apple promotes mass messaging software Apple SMS, iMessage mass sending","text":"<p>The stack and some variables, but there is no separate address space between threads, and the thread has died. It is equal to the entire process, so multi-process programs are more powerful than multi-threaded programs, but it costs in the process. The resources are very large and the efficiency is poor. However, for certain requirements you can only use concurrent operations for certain variables. 4. What is the difference between stack and stack? Management method: For the stack, it is managed automatically by the compiler. There is no need to control it; for the heap, the release effort is controlled by the programmer and it is easy to generate a MemoryLeak. Application size: Stack: Under Windows, the stack is a data structure that extends to low addresses, which is a contiguous area of memory.</p> <p>This statement means that the stack address and the maximum stack capacity are pre-specified by the system. Under Windows, the stack size is 2M (more statements are 1M, summarizing the constant size when constant is limited to the effective virtual memory in the computer system. It can be seen that the space obtained is flexible and it is relatively large. class Person() {</p> <pre><code> /*Attributes*/\n\n private var gender: Boolean = true\n\n\n\n /*Construction method*/\n\n constructor(name: String, gender: Boolean) : this() {\n\n     println(\"constructor\")\n\n }\n\n\n\n companion object {\n\n     val instance = Person(\"yzq\", false)\n\n\n\n\n\n     /*Initialization code in companion object*/\n\n     init {\n\n         println(\"companion init 1\")\n\n     }\n\n\n\n     init {\n\n         println(\"companion init 2\")\n\n     }\n\n }\n\n\n\n /*Initialization code block*/\n\n init {\n\n     println(\"Person init 2,gender:${gender}\")\n\n }\n\n\n\n /*Initialization code block*/\n\n init {\n\n     println(\"Person init 1\")\n\n }\n</code></pre> <p>}</p> <p>Fragmentation problem: For piles, frequent new/deletion will inevitably lead to discontinuous memory space, resulting in a large amount of fragmentation, which reduces program efficiency. For the stack, there is no such problem, because the stack is the first queue, it is one of them, so it will never have the memory block from the middle of the stack.</p> <p>Assignment: The heap is dynamically allocated, there is no static allocation of the stack. There are two types of allocation: static allocation and dynamic allocation. Static allocation is a compiler completion, such as a deflection variable. AlloCA function allocates dynamic allocation, but dynamic allocation and stack stack are different. His dynamic allocation is issued by the compiler without implementing it.</p> <p>Allocation efficiency: The stack is a data structure provided by the machine system. The computer provides support in the underlying stack: the address of the stack is allocated, and the stack within the stack has special instructions that determine the efficiency of the stack. . The stack is provided by the C/C++ function library, and its mechanism is very complex. 5. Object-c memory management? When you create an object using the new Alloc Replication method, and the object's retain count has a retain counter value of 1 and is set to autorelease, you do not need to do anything to ensure that the object is cleared. If completed during this object, you need to retain it and ensure the operation completes. If you have retained objects, you need to (eventually) release or autorelease the objects. You must keep the number of reserved methods and used methods.</p>"},{"location":"ME/","title":"ME","text":"<p>Here is the iMessage Apple group sending device. If you are interested please contact [ \u2708\ufe0f@IMEAX ] directly to view the latest video</p> <p>iMessage Apple push group sending/iMessage Apple group sending software equipment/real machine group control push source code/iMessage Apple push message group sending software/Apple iMessage push/Apple photo album push/Apple family push/Apple calendar push/Apple push imessage group sending device</p> <p>     \ud83d\udd17\u3010\u2764\ufe0fClick for consultation \u2764\ufe0f\u3011View the latest video \ud83d\udd0e"},{"location":"Reprint/","title":"Reprint","text":"<p>Here is the iMessage Apple group sending device. If you are interested please contact [ \u2708\ufe0f@IMEAX ] directly to view the latest video</p> <p>iMessage Apple push group sending/iMessage Apple group sending software equipment/real machine group control push source code/iMessage Apple push message group sending software/Apple iMessage push/Apple photo album push/Apple family push/Apple calendar push/Apple push imessage group sending device</p> <p>     \ud83d\udd17\u3010\u2764\ufe0fClick for consultation \u2764\ufe0f\u3011View the latest video \ud83d\udd0e"},{"location":"Reprint/Z2301/","title":"\u3010imessage mass-sends Apple tweets\u3011","text":""},{"location":"Reprint/Z2301/#imessagesuspicapple-push-service-using-information-push-service","title":"\u3010iMessageSuspic\u3011(Apple push service) Using information push service","text":"<p>The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage to Apple.] The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage.] The album promotes two versions of Development and Production. APS_DEVELINMENT</p> <p>.CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple pushes] Photo album pushes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files from Apple</p> <p>Guo mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple]</p> <p>Push the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album promotes the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album pushes the Development and Production versions of APS_DEVELINMENT .CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple recommends] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files</p>"},{"location":"Reprint/Z2301/#230705","title":"230705","text":"<p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple\u3011</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is recommended by Apple for iMessage.</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple]</p>"},{"location":"Reprint/Z2302/","title":"\u3010imessage mass-sends Apple tweets\u3011","text":""},{"location":"Reprint/Z2302/#imessagesuspicapple-push-service-using-information-push-service","title":"\u3010iMessageSuspic\u3011(Apple push service) Using information push service","text":"<p>The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage to Apple.] The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage.] The album promotes two versions of Development and Production. APS_DEVELINMENT</p> <p>.CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple pushes] Photo album pushes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files from Apple</p> <p>Guo mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple]</p> <p>Push the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album promotes the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album pushes the Development and Production versions of APS_DEVELINMENT .CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple recommends] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files</p>"},{"location":"Reprint/Z2302/#230705","title":"230705","text":"<p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple\u3011</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is recommended by Apple for iMessage.</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple]</p>"},{"location":"Reprint/Z2303/","title":"\u3010imessage mass-sends Apple tweets\u3011","text":""},{"location":"Reprint/Z2303/#imessagesuspicapple-push-service-using-information-push-service","title":"\u3010iMessageSuspic\u3011(Apple push service) Using information push service","text":"<p>The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage to Apple.] The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage.] The album promotes two versions of Development and Production. APS_DEVELINMENT</p> <p>.CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple pushes] Photo album pushes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files from Apple</p> <p>Guo mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple]</p> <p>Push the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album promotes the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album pushes the Development and Production versions of APS_DEVELINMENT .CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple recommends] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files</p>"},{"location":"Reprint/Z2303/#230705","title":"230705","text":"<p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple\u3011</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is recommended by Apple for iMessage.</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple]</p>"},{"location":"Reprint/Z2304/","title":"\u3010imessage mass-sends Apple tweets\u3011","text":""},{"location":"Reprint/Z2304/#imessagesuspicapple-push-service-using-information-push-service","title":"\u3010iMessageSuspic\u3011(Apple push service) Using information push service","text":"<p>The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage to Apple.] The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage.] The album promotes two versions of Development and Production. APS_DEVELINMENT</p> <p>.CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple pushes] Photo album pushes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files from Apple</p> <p>Guo mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple]</p> <p>Push the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album promotes the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album pushes the Development and Production versions of APS_DEVELINMENT .CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple recommends] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files</p>"},{"location":"Reprint/Z2304/#230705","title":"230705","text":"<p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple\u3011</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is recommended by Apple for iMessage.</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple]</p>"},{"location":"Reprint/Z2305/","title":"\u3010imessage mass-sends Apple tweets\u3011","text":""},{"location":"Reprint/Z2305/#imessagesuspicapple-push-service-using-information-push-service","title":"\u3010iMessageSuspic\u3011(Apple push service) Using information push service","text":"<p>The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage to Apple.] The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage.] The album promotes two versions of Development and Production. APS_DEVELINMENT</p> <p>.CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple pushes] Photo album pushes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files from Apple</p> <p>Guo mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple]</p> <p>Push the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album promotes the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album pushes the Development and Production versions of APS_DEVELINMENT .CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple recommends] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files</p>"},{"location":"Reprint/Z2305/#230705","title":"230705","text":"<p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple\u3011</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is recommended by Apple for iMessage.</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple]</p>"},{"location":"Reprint/Z2306/","title":"\u3010imessage mass-sends Apple tweets\u3011","text":""},{"location":"Reprint/Z2306/#imessagesuspicapple-push-service-using-information-push-service","title":"\u3010iMessageSuspic\u3011(Apple push service) Using information push service","text":"<p>The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage to Apple.] The album promotes two versions of Development and Production. The SSL certificate file of APS_DEVELINMENT.CER is sent to Apple via iMessage.] The album promotes two versions of Development and Production. APS_DEVELINMENT</p> <p>.CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple pushes] Photo album pushes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files from Apple</p> <p>Guo mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER\u2019s SSL certificate file Apple mass sends iMessage to Apple]</p> <p>Push the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album promotes the Development and Production versions of the SSL certificate file APS_DEVELINMENT.CER to Apple to send iMessage to Apple] The photo album pushes the Development and Production versions of APS_DEVELINMENT .CER\u2019s SSL certificate file is sent to Apple via iMessage to Apple] Albums push two versions of Development and Production, and APS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage. iMessage Apple recommends] Photo album promotes two versions of Development and Production APS_DEVELINMENT.CER SSL certificate files</p>"},{"location":"Reprint/Z2306/#230705","title":"230705","text":"<p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple\u3011</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is recommended by Apple for iMessage.</p> <p>The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple] The SSL certificate file of PS_DEVELINMENT.CER is sent to Apple via iMessage to Apple]</p> <p>PS_DEVELINMENT.CER\u2019s SSL certificate file is sent to Apple via iMessage and pushed by Apple]</p>"}]}